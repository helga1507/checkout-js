{"version":3,"sources":["webpack://checkout/../src/loglevel.ts","webpack://checkout/../src/severity.ts","webpack://checkout/../src/status.ts","webpack://checkout/../src/index.ts","webpack://checkout/../src/async.ts","webpack://checkout/../src/polyfill.ts","webpack://checkout/../src/object.ts","webpack://checkout/../src/path.ts","webpack://checkout/../src/promisebuffer.ts","webpack://checkout/../src/string.ts","webpack://checkout/../src/supports.ts","webpack://checkout/../src/syncpromise.ts","webpack://checkout/../src/hub.ts","webpack://checkout/../src/api.ts","webpack://checkout/../src/baseclient.ts","webpack://checkout/../src/integration.ts","webpack://checkout/../src/basebackend.ts","webpack://checkout/../src/sdk.ts","webpack://checkout/../../src/integrations/index.ts","webpack://checkout/../../src/integrations/functiontostring.ts","webpack://checkout/../../src/integrations/inboundfilters.ts","webpack://checkout/../src/backend.ts","webpack://checkout/../../src/transports/fetch.ts","webpack://checkout/../../src/transports/xhr.ts","webpack://checkout/../../src/integrations/globalhandlers.ts","webpack://checkout/../../src/integrations/trycatch.ts","webpack://checkout/../../src/integrations/breadcrumbs.ts","webpack://checkout/../../src/integrations/linkederrors.ts","webpack://checkout/../../src/integrations/useragent.ts","webpack://checkout/../src/angular.ts","webpack://checkout/../src/captureconsole.ts","webpack://checkout/../src/debug.ts","webpack://checkout/../src/dedupe.ts","webpack://checkout/../src/ember.ts","webpack://checkout/../src/extraerrordata.ts","webpack://checkout/../src/reportingobserver.ts","webpack://checkout/../src/rewriteframes.ts","webpack://checkout/../src/sessiontiming.ts","webpack://checkout/../src/tracing.ts","webpack://checkout/../src/transaction.ts","webpack://checkout/../src/vue.ts","webpack://checkout/../src/is.ts","webpack://checkout/../src/tracekit.ts","webpack://checkout/../src/helpers.ts","webpack://checkout/../src/misc.ts","webpack://checkout/../src/dsn.ts","webpack://checkout/../src/parsers.ts","webpack://checkout/../../src/transports/base.ts","webpack://checkout/../src/scope.ts","webpack://checkout/../src/error.ts","webpack://checkout/../src/logger.ts","webpack://checkout/../src/memo.ts","webpack://checkout/../src/span.ts","webpack://checkout/../../src/transports/noop.ts","webpack://checkout/../src/client.ts","webpack://checkout/../../src/transports/index.ts","webpack://checkout/../src/version.ts"],"names":["LogLevel","Severity","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","promise","catch","e","console","error","array","predicate","thisArg","Promise","all","map","verdicts","filter","_","index","setPrototypeOf","Object","__proto__","Array","obj","proto","prop","hasOwnProperty","jsonSize","value","encodeURI","split","length","utf8Length","JSON","stringify","normalizeValue","key","_events","global","window","document","Event","getPrototypeOf","constructor","name","isSyntheticEvent","Number","isNaN","walk","depth","memo","Infinity","Memo","type","prototype","toString","call","normalized","isPrimitive","serializeValue","toJSON","source","isError","err","message","stack","i","objectifyError","acc","isArray","memoize","innerKey","unmemoize","normalize","input","parse","_oO","replacement","original","wrapped","defineProperties","__sentry__","enumerable","__sentry_original__","__sentry_wrapped__","_Oo","object","keys","encodeURIComponent","join","normalizeToSize","maxSize","serialized","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","args","path","charAt","p","trim","arr","start","end","normalizePath","isPathAbsolute","isAbsolute","trailingSlash","substr","normalizedPath","from","to","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","result","root","dir","ext","f","_limit","_buffer","isReady","undefined","this","add","task","indexOf","then","remove","reject","SentryError","drain","timeout","capturedSetTimeout","setTimeout","clearTimeout","PromiseBuffer","truncate","str","max","line","colno","newLine","ll","delimiter","output","String","maxLength","includedKeys","pattern","isRegExp","test","includes","supportsFetch","getGlobalObject","Headers","Request","Response","ErrorEvent","DOMError","DOMException","isNativeFunc","func","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","fetch","removeChild","logger","warn","referrerPolicy","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","States","callback","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","isThenable","_value","_executeHandlers","forEach","h","onFail","onSuccess","_attachHandler","handler","onfulfilled","onrejected","SyncPromise","val","API_VERSION","client","scope","_version","Scope","_stack","_invokeClient","method","top","getStackTop","isOlderThan","version","bindClient","pushScope","getStack","parentScope","clone","getClient","popScope","pop","withScope","getScope","captureException","exception","hint","eventId","_lastEventId","uuid4","finalHint","syntheticException","originalException","event_id","captureMessage","captureEvent","event","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","timestamp","Date","getTime","mergedBreadcrumb","finalBreadcrumb","consoleSandbox","setUser","user","setTags","tags","setExtras","extras","setTag","setExtra","extra","setContext","context","configureScope","run","oldHub","makeMain","getIntegration","integration","id","traceHeaders","span","getSpan","toTraceparent","getMainCarrier","carrier","__SENTRY__","hub","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","Hub","activeDomain","dynamicRequire","module","active","registryHubTopStack","dsn","_dsnObject","Dsn","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","urlEncode","protocol","port","host","projectId","getRequestHeaders","clientName","clientVersion","header","pass","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","email","API","backendClass","options","_integrations","_processing","_backend","_options","_dsn","_isEnabled","setupIntegrations","_getBackend","eventFromException","_processEvent","finalEvent","eventFromMessage","getOptions","flush","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","getIntegrations","ticked","setInterval","_prepareEvent","environment","release","dist","maxValueLength","prepared","values","request","url","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","integrations","beforeSend","sampleRate","random","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","log","processedEvent","BaseClient","getIntegrationsToSetup","defaultIntegrations","userIntegrations","defaultIntegration","userIntegration","setupIntegration","installedIntegrations","setupOnce","addGlobalEventProcessor","getCurrentHub","_transport","_setupTransport","NoopTransport","_exception","_hint","_message","_level","BaseBackend","originalFunctionToString","FunctionToString","Function","apply","DEFAULT_IGNORE_ERRORS","InboundFilters","self","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","getEventDescription","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","isMatchingPattern","blacklistUrls","whitelistUrls","oO","stacktrace","frames","transportOptions","transport","FetchTransport","XHRTransport","isErrorEvent","eventFromStacktrace","_computeStackTrace","_buildEvent","isDOMError","isDOMException","domException","messageEvent","addExceptionTypeValue","isPlainObject","objectException","eventFromPlainObject","handled","synthetic","stringException","attachStacktrace","prepareFramesForEvent","BrowserBackend","defaultOptions","body","supportsReferrerPolicy","response","BaseTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","TryCatch","Breadcrumbs","GlobalHandlers","LinkedErrors","UserAgent","SENTRY_RELEASE","initAndBind","BrowserClient","showReportDialog","fn","onerror","onunhandledrejection","stackTraceLimit","_subscribe","isFailedOwnDelivery","__sentry_own_request__","shouldIgnoreOnError","_eventFromGlobalHandler","_installGlobalHandler","_installGlobalUnhandledRejectionHandler","isString","mechanism","incomplete","mode","_eventFromIncompleteRejection","fallbackValue","fallbackType","keysToEventMessage","sort","__serialized__","_ignoreOnError","_wrapTimeFunction","originalCallback","wrap","function","getFunctionName","_wrapRAF","_wrapEventTarget","target","fill","eventName","handleEvent","bind","lastHref","dom","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","category","arguments","safeJoin","_instrumentDOM","addEventListener","breadcrumbEventHandler","keypressEventHandler","innerOriginal","_instrumentFetch","supportsNativeFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","supportsHistory","captureUrlChange","parsedLoc","parseUrl","location","href","parsedTo","parsedFrom","relative","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","originalSend","onreadystatechangeHandler","wrapProp","serializedData","DEFAULT_KEY","DEFAULT_LIMIT","_key","limit","_handler","linkedErrors","_walkErrorTree","exceptionFromStacktrace","navigator","headers","userAgent","angularPattern","Angular","_angular","angular","_getCurrentHub","moduleName","config","$provide","decorator","_$exceptionHandlerDecorator","$delegate","cause","addEventProcessor","ex","matches","angularDocs","CaptureConsole","_levels","levels","setLevel","debugger","Dedupe","currentEvent","_previousEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_getFramesFromEvent","currentFrames","previousFrames","frameA","frameB","lineno","_getExceptionFromEvent","previousException","currentException","currentFingerprint","fingerprint","previousFingerprint","Ember","_Ember","oldOnError","testing","RSVP","on","ExtraErrorData","enhanceEventWithErrorData","errorData","_extractErrorData","normalizedErrorData","errorKeys","getOwnPropertyNames","extraErrorInfo","ReportTypes","types","Crash","Deprecation","Intervention","ReportingObserver","supportsReportingObserver","buffered","observe","reports","report","label","details","plainBody","crashId","RewriteFrames","_iteratee","frame","startsWith","base","_root","basename","iteratee","process","SessionTiming","_startTime","now","Tracing","tracingOrigins","defaultTracingOrigins","traceXHR","_traceXHR","traceFetch","_traceFetch","autoStartOnDomReady","startTrace","transaction","startSpan","setTransaction","_xhrUrl","isWhitelisted","origin","setRequestHeader","whiteListUrl","entries","Transaction","in_app","_getTransaction","Vue","_attachProps","_logErrors","_Vue","logErrors","attachProps","_formatComponentName","vm","$root","_isVue","$options","_componentTag","__file","errorHandler","info","metadata","componentName","propsData","lifecycleHook","env","wat","Boolean","TraceKit","_report","_collectWindowErrors","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","getLocationHref","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","column","msg","groups","match","_traceKitWindowOnUnhandledRejection","_lastExceptionStack","_lastException","_computeStackTraceFromStackProp","submatch","element","gecko","winjs","geckoEval","chromeEval","lines","reference","j","isNative","columnNumber","stackInfo","initial","partial","_computeStackTraceByWalkingCallerChain","item","functionName","funcs","recursion","curr","caller","substring","sourceURL","fileName","lineNumber","description","computeStackTrace","popSize","framesToPop","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","popFrames","lineRE1","lineRE2","lineRE3","scripts","getElementsByTagName","inlineScriptBlocks","s","src","replace","_computeStackTraceFromOperaMultiLineMessage","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","ignoreNextOnError","before","sentryWrapped","wrappedArguments","arg","property","defineProperty","getOwnPropertyDescriptor","configurable","get","debounceTimer","debounce","captureBreadcrumb","_htmlTreeAsString","elem","nextStr","currentElem","out","height","len","sepLength","_htmlElementAsString","parentNode","reverse","className","classes","attr","tagName","toLowerCase","attrWhitelist","getAttribute","isContentEditable","isNodeEnv","mod","require","fallbackGlobalObject","crypto","msCrypto","getRandomValues","Uint16Array","pad","num","v","c","r","query","fragment","originalConsole","wrappedLevels","DSN_REGEX","_fromString","_fromComponents","_validate","withPassword","assign","components","component","parseInt","STACKTRACE_LIMIT","localStack","firstFrameFunction","lastFrameFunction","exceptionKeys","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","processor","final","setFingerprint","_fingerprint","_transaction","setSpan","_span","parentSpan","Span","setParent","newScope","clear","clearBreadcrumbs","_applyFingerprint","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","PREFIX","_enabled","disable","enable","Logger","_hasWeakSet","WeakSet","_inner","has","delete","TRACEPARENT_REGEXP","_traceId","_spanId","_sampled","_parent","parent","setSampled","sampled","fromTraceparent","traceparent","span_id","trace_id","Skipped","platform","SDK_NAME","packages","SDK_VERSION","script","async","onLoad","onload","Integrations"],"mappings":"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","file":"sentry~checkout-9e5675eb.js","sourcesContent":["/** Console logging verbosity for the SDK. */\nexport enum LogLevel {\n  /** No logs will be generated. */\n  None = 0,\n  /** Only SDK internal errors will be logged. */\n  Error = 1,\n  /** Information useful for debugging the SDK will be logged. */\n  Debug = 2,\n  /** All SDK actions will be logged. */\n  Verbose = 3,\n}\n","/** JSDoc */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","export {\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/minimal';\nexport { addGlobalEventProcessor, getCurrentHub, getHubFromCarrier, Hub, Scope, Span } from '@sentry/hub';\nexport { API } from './api';\nexport { BaseClient } from './baseclient';\nexport { BackendClass, BaseBackend } from './basebackend';\nexport { Dsn } from './dsn';\nexport { initAndBind, ClientClass } from './sdk';\nexport { NoopTransport } from './transports/noop';\n\nimport * as Integrations from './integrations';\n\nexport { Integrations };\n","/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\nexport function forget(promise: Promise<any>): void {\n  promise.catch(e => {\n    // TODO: Use a better logging mechanism\n    console.error(e);\n  });\n}\n\n/**\n * Helper to filter an array with asynchronous callbacks.\n *\n * @param array An array containing items to filter.\n * @param predicate An async predicate evaluated on every item.\n * @param thisArg Optional value passed as \"this\" into the callback.\n * @returns An array containing only values where the callback returned true.\n */\nexport async function filterAsync<T>(\n  array: T[],\n  predicate: (item: T) => Promise<boolean> | boolean,\n  thisArg?: any,\n): Promise<T[]> {\n  const verdicts = await Promise.all(array.map(predicate, thisArg));\n  return array.filter((_, index) => verdicts[index]);\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry__: {\n          enumerable: false,\n          value: true,\n        },\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n        __sentry_wrapped__: {\n          enumerable: false,\n          value: wrapped,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(\n      // tslint:disable-next-line:no-unsafe-any\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`,\n    )\n    .join('&');\n}\n\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error: ExtendedError): object {\n  // These properties are implemented as magical getters and don't show up in `for-in` loop\n  const err: {\n    stack: string | undefined;\n    message: string;\n    name: string;\n    [key: string]: any;\n  } = {\n    message: error.message,\n    name: error.name,\n    stack: error.stack,\n  };\n\n  for (const i in error) {\n    if (Object.prototype.hasOwnProperty.call(error, i)) {\n      err[i] = error[i];\n    }\n  }\n\n  return err;\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof Event !== 'undefined' && value instanceof Event) {\n    return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (Number.isNaN((value as unknown) as number)) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${value.name || '<unknown-function-name>'}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  // If value implements `toJSON` method, call it and return early\n  // tslint:disable:no-unsafe-any\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  // tslint:enable:no-unsafe-any\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = (isError(value) ? objectifyError(value as Error) : value) as {\n    [key: string]: any;\n  };\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input: any, depth?: number): any {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(resolvedPath.split('/').filter(p => !!p), !resolvedAbsolute).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  // tslint:disable:no-parameter-reassignment\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.substr(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(path.split('/').filter(p => !!p), !isPathAbsolute).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.substr(ext.length * -1) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n","import { SentryError } from './error';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  public constructor(protected _limit?: number) {}\n\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<Promise<T>> = [];\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any Promise<T>\n   * @returns The original promise.\n   */\n  public add(task: Promise<T>): Promise<T> {\n    if (!this.isReady()) {\n      return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .catch(() =>\n        this.remove(task).catch(() => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any Promise<T>\n   * @returns Removed promise.\n   */\n  public remove(task: Promise<T>): Promise<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      Promise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .catch(() => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { isRegExp } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    colno = ll; // tslint:disable-line:no-parameter-reassignment\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/** Merges provided array of keys into */\nexport function keysToEventMessage(keys: string[], maxLength: number = 40): string {\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.includes(pattern);\n  }\n  return false;\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // It really needs 1 argument, not 0.\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore\n    // tslint:disable:no-unused-expression\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    // tslint:disable-next-line:no-unused-expression\n    new Headers();\n    // tslint:disable-next-line:no-unused-expression\n    new Request('');\n    // tslint:disable-next-line:no-unused-expression\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const isNativeFunc = (func: Function) => func.toString().indexOf('native') !== -1;\n  const global = getGlobalObject<Window>();\n  let result = null;\n  const doc = global.document;\n  if (doc) {\n    const sandbox = doc.createElement('iframe');\n    sandbox.hidden = true;\n    try {\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  if (result === null) {\n    // tslint:disable-next-line no-unbound-method\n    result = isNativeFunc(global.fetch);\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  // tslint:disable-next-line: no-unsafe-any\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    // tslint:disable:no-unused-expression\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  const chrome = (global as any).chrome;\n  // tslint:disable-next-line:no-unsafe-any\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","import { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/** JSDoc */\ninterface Handler<T, U> {\n  onFail: HandlerOnFail<U>;\n  onSuccess: HandlerOnSuccess<T, U>;\n}\n\ntype HandlerOnSuccess<T, U = any> = (value: T) => U | Thenable<U>;\ntype HandlerOnFail<U = any> = (reason: any) => U | Thenable<U>;\n\n/** JSDoc */\ninterface Thenable<T> {\n  /** JSDoc */\n  then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U> | ((reason: any) => void)): Thenable<U>;\n}\n\ntype Resolve<R> = (value?: R | Thenable<R> | any) => void;\ntype Reject = (value?: any) => void;\n\n/** JSDoc */\nexport class SyncPromise<T> implements PromiseLike<T> {\n  /** JSDoc */\n  private _state: States = States.PENDING;\n  /** JSDoc */\n  private _handlers: Array<Handler<T, any>> = [];\n  /** JSDoc */\n  private _value: T | any;\n\n  public constructor(callback: (resolve: Resolve<T>, reject: Reject) => void) {\n    try {\n      callback(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value: T) => {\n    this._setResult(value, States.RESOLVED);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason: any) => {\n    this._setResult(reason, States.REJECTED);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (value: T | any, state: States) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as Thenable<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._value = value;\n    this._state = state;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    if (this._state === States.REJECTED) {\n      // tslint:disable-next-line:no-unsafe-any\n      this._handlers.forEach(h => h.onFail && h.onFail(this._value));\n    } else {\n      // tslint:disable-next-line:no-unsafe-any\n      this._handlers.forEach(h => h.onSuccess && h.onSuccess(this._value));\n    }\n\n    this._handlers = [];\n    return;\n  };\n\n  /** JSDoc */\n  private readonly _attachHandler = (handler: Handler<T, any>) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined,\n  ): SyncPromise<TResult1 | TResult2> {\n    // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n    return new SyncPromise<TResult1 | TResult2>((resolve, reject) => {\n      this._attachHandler({\n        onFail: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onSuccess: result => {\n          if (!onfulfilled) {\n            resolve(result);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<U>(onFail: HandlerOnFail<U>): SyncPromise<U> {\n    // tslint:disable-next-line:no-unsafe-any\n    return this.then<U>((val: any) => val, onFail as any);\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return `[object SyncPromise]`;\n  }\n\n  /** JSDoc */\n  public static resolve<U>(value?: U | Thenable<U>): SyncPromise<U> {\n    return new SyncPromise<U>(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<U>(reason?: any): SyncPromise<U> {\n    return new SyncPromise<U>((_, reject) => {\n      reject(reason);\n    });\n  }\n}\n","import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 30;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      const span = top.scope.getSpan();\n      if (span) {\n        return {\n          'sentry-trace': span.toTraceparent(),\n        };\n      }\n    }\n    return {};\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","import { DsnLike } from '@sentry/types';\nimport { urlEncode } from '@sentry/utils';\n\nimport { Dsn } from './dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Helper class to provide urls to different Sentry endpoints. */\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns a string with auth headers in the url to the store endpoint. */\n  public getStoreEndpoint(): string {\n    return `${this._getBaseUrl()}${this.getStoreEndpointPath()}`;\n  }\n\n  /** Returns the store endpoint with auth added in url encoded. */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n    // to avoid preflight CORS requests\n    return `${this.getStoreEndpoint()}?${urlEncode(auth)}`;\n  }\n\n  /** Returns the base path of the url including the port. */\n  private _getBaseUrl(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /** Returns an object that can be used in request headers. */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_timestamp=${new Date().getTime()}`);\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this._getBaseUrl()}${dsn.path ? `/${dsn.path}` : ''}/api/embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n}\n","import { Scope } from '@sentry/hub';\nimport { Client, Event, EventHint, Integration, IntegrationClass, Options, SdkInfo, Severity } from '@sentry/types';\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { Dsn } from './dsn';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the enviornment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected readonly _integrations: IntegrationIndex = {};\n\n  /** Is the client still processing a call? */\n  protected _processing: boolean = false;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._getBackend()\n      .eventFromException(exception, hint)\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .catch(reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._processing = true;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(`${message}`, level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    promisedEvent\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .catch(reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._processEvent(event, hint, scope)\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .catch(reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): Promise<boolean> {\n    return this._isClientProcessing(timeout).then(status => {\n      clearInterval(status.interval);\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => status.ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): Promise<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegrations(): IntegrationIndex {\n    return this._integrations || {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): Promise<{ ready: boolean; interval: number }> {\n    return new Promise<{ ready: boolean; interval: number }>(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      let interval = 0;\n      clearInterval(interval);\n\n      interval = (setInterval(() => {\n        if (!this._processing) {\n          resolve({\n            interval,\n            ready: true,\n          });\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            resolve({\n              interval,\n              ready: false,\n            });\n          }\n        }\n      }, tick) as unknown) as number;\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): SyncPromise<Event | null> {\n    const { environment, release, dist, maxValueLength = 250 } = this.getOptions();\n\n    const prepared: Event = { ...event };\n    if (prepared.environment === undefined && environment !== undefined) {\n      prepared.environment = environment;\n    }\n    if (prepared.release === undefined && release !== undefined) {\n      prepared.release = release;\n    }\n\n    if (prepared.dist === undefined && dist !== undefined) {\n      prepared.dist = dist;\n    }\n\n    if (prepared.message) {\n      prepared.message = truncate(prepared.message, maxValueLength);\n    }\n\n    const exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = prepared.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n\n    if (prepared.event_id === undefined) {\n      prepared.event_id = uuid4();\n    }\n\n    this._addIntegrations(prepared.sdk);\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (scope) {\n      // In case we have a hub we reassign it.\n      result = scope.applyToEvent(prepared, hint);\n    }\n\n    return result;\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _addIntegrations(sdkInfo?: SdkInfo): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): SyncPromise<Event> {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject('SDK not enabled, will not send event.');\n    }\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject('This event has been sampled, will not send event.');\n    }\n\n    return new SyncPromise((resolve, reject) => {\n      this._prepareEvent(event, scope, hint).then(prepared => {\n        if (prepared === null) {\n          reject('An event processor returned null, will not send event.');\n          return;\n        }\n\n        let finalEvent: Event | null = prepared;\n\n        try {\n          const isInternalException = hint && hint.data && (hint.data as { [key: string]: any }).__sentry__ === true;\n          if (isInternalException || !beforeSend) {\n            this._getBackend().sendEvent(finalEvent);\n            resolve(finalEvent);\n            return;\n          }\n\n          const beforeSendResult = beforeSend(prepared, hint);\n          if ((typeof beforeSendResult as any) === 'undefined') {\n            logger.error('`beforeSend` method has to return `null` or a valid event.');\n          } else if (isThenable(beforeSendResult)) {\n            this._handleAsyncBeforeSend(beforeSendResult as Promise<Event | null>, resolve, reject);\n          } else {\n            finalEvent = beforeSendResult as Event | null;\n\n            if (finalEvent === null) {\n              logger.log('`beforeSend` returned `null`, will not send event.');\n              resolve(null);\n              return;\n            }\n\n            // From here on we are really async\n            this._getBackend().sendEvent(finalEvent);\n            resolve(finalEvent);\n          }\n        } catch (exception) {\n          this.captureException(exception, {\n            data: {\n              __sentry__: true,\n            },\n            originalException: exception as Error,\n          });\n          reject('`beforeSend` throw an error, will not send event.');\n        }\n      });\n    });\n  }\n\n  /**\n   * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n   */\n  private _handleAsyncBeforeSend(\n    beforeSend: Promise<Event | null>,\n    resolve: (event: Event) => void,\n    reject: (reason: string) => void,\n  ): void {\n    beforeSend\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          reject('`beforeSend` returned `null`, will not send event.');\n          return;\n        }\n        // From here on we are really async\n        this._getBackend().sendEvent(processedEvent);\n        resolve(processedEvent);\n      })\n      .catch(e => {\n        reject(`beforeSend rejected with ${e}`);\n      });\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    return [...defaultIntegrations];\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","import { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError, SyncPromise } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instanciate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  eventFromException(exception: any, hint?: EventHint): SyncPromise<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): SyncPromise<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instanciate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(_exception: any, _hint?: EventHint): SyncPromise<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): SyncPromise<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).catch(reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient, ReportDialogOptions } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  initAndBind(BrowserClient, options);\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return Promise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return Promise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn: Function): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return internalWrap(fn)();\n}\n","export { GlobalHandlers } from './globalhandlers';\nexport { TryCatch } from './trycatch';\nexport { Breadcrumbs } from './breadcrumbs';\nexport { LinkedErrors } from './linkederrors';\nexport { UserAgent } from './useragent';\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry__ ? this.__sentry_original__ : this;\n      // tslint:disable-next-line:no-unsafe-any\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  blacklistUrls?: Array<string | RegExp>;\n  ignoreErrors?: Array<string | RegExp>;\n  ignoreInternal?: boolean;\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  public constructor(private readonly _options: InboundFiltersOptions = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: InboundFiltersOptions): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isBlacklistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`blacklistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isWhitelistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`whitelistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      // tslint:disable-next-line:no-unsafe-any\n      return (event as any).exception.values[0].type === 'SentryError';\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isBlacklistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.blacklistUrls || !options.blacklistUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.blacklistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isWhitelistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.whitelistUrls || !options.whitelistUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.whitelistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: InboundFiltersOptions = {}): InboundFiltersOptions {\n    return {\n      blacklistUrls: [...(this._options.blacklistUrls || []), ...(clientOptions.blacklistUrls || [])],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n      whitelistUrls: [...(this._options.whitelistUrls || []), ...(clientOptions.whitelistUrls || [])],\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        // tslint:disable-next-line:no-unsafe-any\n        const { type, value } = (event as any).exception.values[0];\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        // tslint:disable:no-unsafe-any\n        const frames = (event as any).stacktrace.frames;\n        return frames[frames.length - 1].filename;\n      }\n      if (event.exception) {\n        // tslint:disable:no-unsafe-any\n        const frames = (event as any).exception.values[0].stacktrace.frames;\n        return frames[frames.length - 1].filename;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport {\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isPlainObject,\n  supportsFetch,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To whitelist certain errors instead, use {@link Options.whitelistUrls}.\n   * By default, all errors will be sent.\n   */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.blacklistUrls}.\n   * By default, all errors will be sent.\n   */\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: any, hint?: EventHint): SyncPromise<Event> {\n    let event: Event;\n\n    if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      const errorEvent = exception as ErrorEvent;\n      exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n      event = eventFromStacktrace(_computeStackTrace(exception as Error));\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    }\n    if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      const domException = exception as DOMException;\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n\n      return this.eventFromMessage(message, Severity.Error, hint).then(messageEvent => {\n        addExceptionTypeValue(messageEvent, message);\n        return SyncPromise.resolve(this._buildEvent(messageEvent, hint));\n      });\n    }\n    if (isError(exception as Error)) {\n      // we have a real Error object, do nothing\n      event = eventFromStacktrace(_computeStackTrace(exception as Error));\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    }\n    if (isPlainObject(exception as {}) && hint && hint.syntheticException) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      const objectException = exception as {};\n      event = eventFromPlainObject(objectException, hint.syntheticException);\n      addExceptionTypeValue(event, 'Custom Object', undefined, {\n        handled: true,\n        synthetic: true,\n        type: 'generic',\n      });\n      event.level = Severity.Error;\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    }\n\n    // If none of previous checks were valid, then it means that\n    // it's not a DOMError/DOMException\n    // it's not a plain Object\n    // it's not a valid ErrorEvent (one with an error property)\n    // it's not an Error\n    // So bail out and capture it as a simple message:\n    const stringException = exception as string;\n    return this.eventFromMessage(stringException, undefined, hint).then(messageEvent => {\n      addExceptionTypeValue(messageEvent, `${stringException}`, undefined, {\n        handled: true,\n        synthetic: true,\n        type: 'generic',\n      });\n      messageEvent.level = Severity.Error;\n      return SyncPromise.resolve(this._buildEvent(messageEvent, hint));\n    });\n  }\n\n  /**\n   * This is an internal helper function that creates an event.\n   */\n  private _buildEvent(event: Event, hint?: EventHint): Event {\n    return {\n      ...event,\n      event_id: hint && hint.event_id,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): SyncPromise<Event> {\n    const event: Event = {\n      event_id: hint && hint.event_id,\n      level,\n      message,\n    };\n\n    if (this._options.attachStacktrace && hint && hint.syntheticException) {\n      const stacktrace = _computeStackTrace(hint.syntheticException);\n      const frames = prepareFramesForEvent(stacktrace.stack);\n      event.stacktrace = {\n        frames,\n      };\n    }\n\n    return SyncPromise.resolve(event);\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    const defaultOptions: RequestInit = {\n      body: JSON.stringify(event),\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n\n    return this._buffer.add(\n      global.fetch(this.url, defaultOptions).then(response => ({\n        status: Status.fromHttpCode(response.status),\n      })),\n    );\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    return this._buffer.add(\n      new Promise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            resolve({\n              status: Status.fromHttpCode(request.status),\n            });\n          }\n\n          reject(request);\n        };\n\n        request.open('POST', this.url);\n        request.send(JSON.stringify(event));\n      }),\n    );\n  }\n}\n","import { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addExceptionTypeValue,\n  isPrimitive,\n  isString,\n  keysToEventMessage,\n  logger,\n  normalize,\n  normalizeToSize,\n  truncate,\n} from '@sentry/utils';\n\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport {\n  _installGlobalHandler,\n  _installGlobalUnhandledRejectionHandler,\n  _subscribe,\n  StackTrace as TraceKitStackTrace,\n} from '../tracekit';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    _subscribe((stack: TraceKitStackTrace, _: boolean, error: any) => {\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n      if (shouldIgnoreOnError() || isFailedOwnDelivery) {\n        return;\n      }\n      const self = getCurrentHub().getIntegration(GlobalHandlers);\n      if (self) {\n        getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack, error), {\n          data: { stack },\n          originalException: error,\n        });\n      }\n    });\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      _installGlobalHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      _installGlobalUnhandledRejectionHandler();\n    }\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace.\n   *\n   * @param stacktrace TraceKitStackTrace to be converted to an Event.\n   */\n  private _eventFromGlobalHandler(stacktrace: TraceKitStackTrace, error: any): Event {\n    if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n      // There are cases where stacktrace.message is an Event object\n      // https://github.com/getsentry/sentry-javascript/issues/1949\n      // In this specific case we try to extract stacktrace.message.error.message\n      const message = (stacktrace.message as unknown) as any;\n      stacktrace.message =\n        message.error && isString(message.error.message) ? message.error.message : 'No error message';\n    }\n\n    if (stacktrace.mechanism === 'onunhandledrejection' && (stacktrace.incomplete || stacktrace.mode === 'failed')) {\n      return this._eventFromIncompleteRejection(stacktrace, error);\n    }\n\n    const event = eventFromStacktrace(stacktrace);\n\n    const data: { [key: string]: string } = {\n      mode: stacktrace.mode,\n    };\n\n    if (stacktrace.message) {\n      data.message = stacktrace.message;\n    }\n\n    if (stacktrace.name) {\n      data.name = stacktrace.name;\n    }\n\n    const client = getCurrentHub().getClient();\n    const maxValueLength = (client && client.getOptions().maxValueLength) || 250;\n\n    const fallbackValue = stacktrace.original\n      ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength)\n      : '';\n    const fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error';\n\n    // This makes sure we have type/value in every exception\n    addExceptionTypeValue(event, fallbackValue, fallbackType, {\n      data,\n      handled: false,\n      type: stacktrace.mechanism,\n    });\n\n    return event;\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   *\n   * @param stacktrace TraceKitStackTrace to be converted to an Event.\n   */\n  private _eventFromIncompleteRejection(stacktrace: TraceKitStackTrace, error: any): Event {\n    const event: Event = {\n      level: Severity.Error,\n    };\n\n    if (isPrimitive(error)) {\n      event.exception = {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with value: ${error}`,\n          },\n        ],\n      };\n    } else {\n      event.exception = {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with keys: ${keysToEventMessage(Object.keys(error).sort())}`,\n          },\n        ],\n      };\n      event.extra = {\n        __serialized__: normalizeToSize(error),\n      };\n    }\n\n    if (event.exception.values && event.exception.values[0]) {\n      event.exception.values[0].mechanism = {\n        data: {\n          mode: stacktrace.mode,\n          ...(stacktrace.incomplete && { incomplete: stacktrace.incomplete }),\n          ...(stacktrace.message && { message: stacktrace.message }),\n          ...(stacktrace.name && { name: stacktrace.name }),\n        },\n        handled: false,\n        type: stacktrace.mechanism,\n      };\n    }\n\n    return event;\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /** JSDoc */\n  private _ignoreOnError: number = 0;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    return function(this: any, callback: () => void): () => void {\n      return original(\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    const global = getGlobalObject() as { [key: string]: any };\n    const proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          // tslint:disable-next-line:no-unbound-method strict-type-predicates\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        let callback = (fn as any) as WrappedFunction;\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    this._ignoreOnError = this._ignoreOnError;\n\n    const global = getGlobalObject();\n\n    fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n\n    [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload',\n    ].forEach(this._wrapEventTarget.bind(this));\n  }\n}\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn: any): string {\n  try {\n    return (fn && fn.name) || '<anonymous>';\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return '<anonymous>';\n  }\n}\n","import { API, getCurrentHub } from '@sentry/core';\nimport { Breadcrumb, BreadcrumbHint, Integration, Severity, WrappedFunction } from '@sentry/types';\nimport {\n  fill,\n  getEventDescription,\n  getGlobalObject,\n  isString,\n  logger,\n  normalize,\n  parseUrl,\n  safeJoin,\n  supportsHistory,\n  supportsNativeFetch,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\n\nconst global = getGlobalObject<Window>();\nlet lastHref: string | undefined;\n/**\n * @hidden\n */\nexport interface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** JSDoc */\ninterface BreadcrumbIntegrations {\n  console?: boolean;\n  dom?: boolean;\n  fetch?: boolean;\n  history?: boolean;\n  sentry?: boolean;\n  xhr?: boolean;\n}\n\n/** Default Breadcrumbs instrumentations */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbIntegrations;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: BreadcrumbIntegrations) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /** JSDoc */\n  private _instrumentConsole(): void {\n    if (!('console' in global)) {\n      return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, function(originalConsoleLevel: () => any): any {\n        return function(...args: any[]): any {\n          const breadcrumbData = {\n            category: 'console',\n            data: {\n              extra: {\n                arguments: normalize(args, 3),\n              },\n              logger: 'console',\n            },\n            level: Severity.fromString(level),\n            message: safeJoin(args, ' '),\n          };\n\n          if (level === 'assert') {\n            if (args[0] === false) {\n              breadcrumbData.message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n              breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n            }\n          }\n\n          Breadcrumbs.addBreadcrumb(breadcrumbData, {\n            input: args,\n            level,\n          });\n\n          // this fails for some browsers. :(\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n          }\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentDOM(): void {\n    if (!('document' in global)) {\n      return;\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n    global.document.addEventListener('keypress', keypressEventHandler(), false);\n\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach((target: string) => {\n      const proto = (global as any)[target] && (global as any)[target].prototype;\n\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n\n      fill(proto, 'addEventListener', function(\n        original: () => void,\n      ): (\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ) => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerOrEventListenerObject,\n          options?: boolean | AddEventListenerOptions,\n        ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n          if (fn && (fn as any).handleEvent) {\n            if (eventName === 'click') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  breadcrumbEventHandler('click')(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n            if (eventName === 'keypress') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  keypressEventHandler()(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n          } else {\n            if (eventName === 'click') {\n              breadcrumbEventHandler('click', true)(this);\n            }\n            if (eventName === 'keypress') {\n              keypressEventHandler()(this);\n            }\n          }\n\n          return original.call(this, eventName, fn, options);\n        };\n      });\n\n      fill(proto, 'removeEventListener', function(\n        original: () => void,\n      ): (\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ) => () => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          let callback = (fn as any) as WrappedFunction;\n          try {\n            callback = callback && (callback.__sentry_wrapped__ || callback);\n          } catch (e) {\n            // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n          return original.call(this, eventName, callback, options);\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentFetch(): void {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    fill(global, 'fetch', function(originalFetch: () => void): () => void {\n      return function(...args: any[]): void {\n        const fetchInput = args[0];\n        let method = 'GET';\n        let url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in global && fetchInput instanceof Request) {\n          url = fetchInput.url;\n          if (fetchInput.method) {\n            method = fetchInput.method;\n          }\n        } else {\n          url = String(fetchInput);\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        const client = getCurrentHub().getClient<BrowserClient>();\n        const dsn = client && client.getDsn();\n        if (dsn) {\n          const filterUrl = new API(dsn).getStoreEndpoint();\n          // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n          if (filterUrl && url.includes(filterUrl)) {\n            if (method === 'POST' && args[1] && args[1].body) {\n              addSentryBreadcrumb(args[1].body);\n            }\n            return originalFetch.apply(global, args);\n          }\n        }\n\n        const fetchData: {\n          method: string;\n          url: string;\n          status_code?: number;\n        } = {\n          method: isString(method) ? method.toUpperCase() : method,\n          url,\n        };\n\n        return originalFetch\n          .apply(global, args)\n          .then((response: Response) => {\n            fetchData.status_code = response.status;\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                type: 'http',\n              },\n              {\n                input: args,\n                response,\n              },\n            );\n            return response;\n          })\n          .catch((error: Error) => {\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                level: Severity.Error,\n                type: 'http',\n              },\n              {\n                error,\n                input: args,\n              },\n            );\n\n            throw error;\n          });\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentHistory(): void {\n    if (!supportsHistory()) {\n      return;\n    }\n\n    const captureUrlChange = (from: string | undefined, to: string | undefined): void => {\n      const parsedLoc = parseUrl(global.location.href);\n      const parsedTo = parseUrl(to as string);\n      let parsedFrom = parseUrl(from as string);\n\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n\n      // because onpopstate only tells you the \"new\" (to) value of location.href, and\n      // not the previous (from) value, we need to track the value of the current URL\n      // state ourselves\n      lastHref = to;\n\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        from = parsedFrom.relative;\n      }\n\n      Breadcrumbs.addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from,\n          to,\n        },\n      });\n    };\n\n    // record navigation (URL) changes\n    const oldOnPopState = global.onpopstate;\n    global.onpopstate = (...args: any[]) => {\n      const currentHref = global.location.href;\n      captureUrlChange(lastHref, currentHref);\n      if (oldOnPopState) {\n        return oldOnPopState.apply(this, args);\n      }\n    };\n\n    /**\n     * @hidden\n     */\n    function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n      // note history.pushState.length is 0; intentionally not declaring\n      // params to preserve 0 arity\n      return function(this: History, ...args: any[]): void {\n        const url = args.length > 2 ? args[2] : undefined;\n        // url argument is optional\n        if (url) {\n          // coerce to string (this is what pushState does)\n          captureUrlChange(lastHref, String(url));\n        }\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n  }\n\n  /** JSDoc */\n  private _instrumentXHR(): void {\n    if (!('XMLHttpRequest' in global)) {\n      return;\n    }\n\n    /**\n     * @hidden\n     */\n    function wrapProp(prop: string, xhr: XMLHttpRequest): void {\n      // TODO: Fix XHR types\n      if (prop in xhr && typeof (xhr as { [key: string]: any })[prop] === 'function') {\n        fill(xhr, prop, original =>\n          wrap(original, {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (original && original.name) || '<anonymous>',\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n        );\n      }\n    }\n\n    const xhrproto = XMLHttpRequest.prototype;\n    fill(\n      xhrproto,\n      'open',\n      originalOpen =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const url = args[1];\n          this.__sentry_xhr__ = {\n            method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n            url: args[1],\n          };\n\n          const client = getCurrentHub().getClient<BrowserClient>();\n          const dsn = client && client.getDsn();\n          if (dsn) {\n            const filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (isString(url) && (filterUrl && url.includes(filterUrl))) {\n              this.__sentry_own_request__ = true;\n            }\n          }\n\n          return originalOpen.apply(this, args);\n        },\n    );\n\n    fill(\n      xhrproto,\n      'send',\n      originalSend =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const xhr = this; // tslint:disable-line:no-this-assignment\n\n          if (xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(args[0]);\n          }\n\n          /**\n           * @hidden\n           */\n          function onreadystatechangeHandler(): void {\n            if (xhr.readyState === 4) {\n              if (xhr.__sentry_own_request__) {\n                return;\n              }\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                if (xhr.__sentry_xhr__) {\n                  xhr.__sentry_xhr__.status_code = xhr.status;\n                }\n              } catch (e) {\n                /* do nothing */\n              }\n              Breadcrumbs.addBreadcrumb(\n                {\n                  category: 'xhr',\n                  data: xhr.__sentry_xhr__,\n                  type: 'http',\n                },\n                {\n                  xhr,\n                },\n              );\n            }\n          }\n\n          ['onload', 'onerror', 'onprogress'].forEach(prop => {\n            wrapProp(prop, xhr);\n          });\n\n          if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n            fill(xhr, 'onreadystatechange', function(original: () => void): void {\n              return wrap(\n                original,\n                {\n                  mechanism: {\n                    data: {\n                      function: 'onreadystatechange',\n                      handler: (original && original.name) || '<anonymous>',\n                    },\n                    handled: true,\n                    type: 'instrument',\n                  },\n                },\n                onreadystatechangeHandler,\n              );\n            });\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n          return originalSend.apply(this, args);\n        },\n    );\n  }\n\n  /**\n   * Helper that checks if integration is enabled on the client.\n   * @param breadcrumb Breadcrumb\n   * @param hint BreadcrumbHint\n   */\n  public static addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    if (getCurrentHub().getIntegration(Breadcrumbs)) {\n      getCurrentHub().addBreadcrumb(breadcrumb, hint);\n    }\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      this._instrumentConsole();\n    }\n    if (this._options.dom) {\n      this._instrumentDOM();\n    }\n    if (this._options.xhr) {\n      this._instrumentXHR();\n    }\n    if (this._options.fetch) {\n      this._instrumentFetch();\n    }\n    if (this._options.history) {\n      this._instrumentHistory();\n    }\n  }\n}\n\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData: string): void {\n  // There's always something that can go wrong with deserialization...\n  try {\n    const event: { [key: string]: any } = JSON.parse(serializedData);\n    Breadcrumbs.addBreadcrumb(\n      {\n        category: 'sentry',\n        event_id: event.event_id,\n        level: event.level || Severity.fromString('error'),\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = _computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        if (!global.navigator || !global.location) {\n          return event;\n        }\n\n        // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n        const request = event.request || {};\n        request.url = request.url || global.location.href;\n        request.headers = request.headers || {};\n        request.headers['User-Agent'] = global.navigator.userAgent;\n\n        return {\n          ...event,\n          request,\n        };\n      }\n      return event;\n    });\n  }\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\n// See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\nconst angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\nexport class Angular implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Angular.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AngularJS';\n\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n  public static moduleName: string = 'ngSentry';\n\n  /**\n   * Angular's instance\n   */\n  private readonly _angular: any;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { angular?: any } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._angular = options.angular || getGlobalObject<any>().angular;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._angular) {\n      logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // tslint:disable: no-unsafe-any\n    this._angular.module(Angular.moduleName, []).config([\n      '$provide',\n      ($provide: any) => {\n        $provide.decorator('$exceptionHandler', ['$delegate', this._$exceptionHandlerDecorator.bind(this)]);\n      },\n    ]);\n    // tslint:enable: no-unsafe-any\n  }\n\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  private _$exceptionHandlerDecorator($delegate: any): any {\n    return (exception: Error, cause?: string) => {\n      const hub = this._getCurrentHub && this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(scope => {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor((event: Event) => {\n            const ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              const matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = `${ex.type}: ${ex.value}`;\n                // auto set a new tag specifically for the angular error url\n                event.extra = {\n                  ...event.extra,\n                  angularDocs: matches[3].substr(0, 250),\n                };\n              }\n            }\n\n            return event;\n          });\n\n          hub.captureException(exception);\n        });\n      }\n      // tslint:disable-next-line: no-unsafe-any\n      $delegate(exception, cause);\n    };\n  }\n}\n","import { EventProcessor, Hub, Integration, Severity } from '@sentry/types';\nimport { fill, getGlobalObject, normalize, safeJoin } from '@sentry/utils';\n\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Send Console API calls as Sentry Events */\nexport class CaptureConsole implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = CaptureConsole.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'CaptureConsole';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _levels: string[] = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { levels?: string[] } = {}) {\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!('console' in global)) {\n      return;\n    }\n\n    this._levels.forEach((level: string) => {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, (originalConsoleLevel: () => any) => (...args: any[]) => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel(Severity.fromString(level));\n            scope.setExtra('arguments', normalize(args, 3));\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = safeJoin(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', normalize(args.slice(1), 3));\n                hub.captureMessage(message);\n              }\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      });\n    });\n  }\n}\n","import { Event, EventHint, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\n/** JSDoc */\ninterface DebugOptions {\n  stringify?: boolean;\n  debugger?: boolean;\n}\n\n/** JSDoc */\nexport class Debug implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Debug.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Debug';\n\n  /** JSDoc */\n  private readonly _options: DebugOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: DebugOptions) {\n    this._options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        // tslint:disable:no-console\n        // tslint:disable:no-debugger\n        if (self._options.debugger) {\n          debugger;\n        }\n\n        consoleSandbox(() => {\n          if (self._options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint) {\n              console.log(hint);\n            }\n          }\n        });\n      }\n      return event;\n    });\n  }\n}\n","import { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((currentEvent: Event) => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (self._shouldDropEvent(currentEvent, self._previousEvent)) {\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n    if (!previousEvent) {\n      return false;\n    }\n\n    if (this._isSameMessageEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    if (this._isSameExceptionEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const currentMessage = currentEvent.message;\n    const previousMessage = previousEvent.message;\n\n    // If no event has a message, they were both exceptions, so bail out\n    if (!currentMessage && !previousMessage) {\n      return false;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n      return false;\n    }\n\n    if (currentMessage !== previousMessage) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        // @ts-ignore\n        return exception.values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    }\n    return undefined;\n  }\n\n  /** JSDoc */\n  private _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFrames = this._getFramesFromEvent(currentEvent);\n    let previousFrames = this._getFramesFromEvent(previousEvent);\n\n    // If no event has a fingerprint, they are assumed to be the same\n    if (!currentFrames && !previousFrames) {\n      return true;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n      return false;\n    }\n\n    currentFrames = currentFrames as StackFrame[];\n    previousFrames = previousFrames as StackFrame[];\n\n    // If number of frames differ, they are not the same\n    if (previousFrames.length !== currentFrames.length) {\n      return false;\n    }\n\n    // Otherwise, compare the two\n    for (let i = 0; i < previousFrames.length; i++) {\n      const frameA = previousFrames[i];\n      const frameB = currentFrames[i];\n\n      if (\n        frameA.filename !== frameB.filename ||\n        frameA.lineno !== frameB.lineno ||\n        frameA.colno !== frameB.colno ||\n        frameA.function !== frameB.function\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getExceptionFromEvent(event: Event): Exception | undefined {\n    return event.exception && event.exception.values && event.exception.values[0];\n  }\n\n  /** JSDoc */\n  private _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const previousException = this._getExceptionFromEvent(previousEvent);\n    const currentException = this._getExceptionFromEvent(currentEvent);\n\n    if (!previousException || !currentException) {\n      return false;\n    }\n\n    if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFingerprint = currentEvent.fingerprint;\n    let previousFingerprint = previousEvent.fingerprint;\n\n    // If no event has a fingerprint, they are assumed to be the same\n    if (!currentFingerprint && !previousFingerprint) {\n      return true;\n    }\n\n    // If only one event has a fingerprint, but not the other one, they are not the same\n    if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n      return false;\n    }\n\n    currentFingerprint = currentFingerprint as string[];\n    previousFingerprint = previousFingerprint as string[];\n\n    // Otherwise, compare the two\n    try {\n      return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n    } catch (_oO) {\n      return false;\n    }\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\n/** JSDoc */\nexport class Ember implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Ember.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Ember';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _Ember: any; // tslint:disable-line:variable-name\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Ember?: any } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._Ember = options.Ember || getGlobalObject<any>().Ember;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!this._Ember) {\n      logger.error('EmberIntegration is missing an Ember instance');\n      return;\n    }\n\n    const oldOnError = this._Ember.onerror;\n\n    this._Ember.onerror = (error: Error): void => {\n      if (getCurrentHub().getIntegration(Ember)) {\n        getCurrentHub().captureException(error, { originalException: error });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Ember, error);\n      } else if (this._Ember.testing) {\n        throw error;\n      }\n    };\n\n    this._Ember.RSVP.on(\n      'error',\n      (reason: any): void => {\n        if (getCurrentHub().getIntegration(Ember)) {\n          getCurrentHub().withScope(scope => {\n            if (reason instanceof Error) {\n              scope.setExtra('context', 'Unhandled Promise error detected');\n              getCurrentHub().captureException(reason, { originalException: reason });\n            } else {\n              scope.setExtra('reason', reason);\n              getCurrentHub().captureMessage('Unhandled Promise error detected');\n            }\n          });\n        }\n      },\n    );\n  }\n}\n","import { Event, EventHint, EventProcessor, ExtendedError, Hub, Integration } from '@sentry/types';\nimport { isError, isPlainObject, logger, normalize } from '@sentry/utils';\n\n/** JSDoc */\ninterface ExtraErrorDataOptions {\n  depth?: number;\n}\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class ExtraErrorData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = ExtraErrorData.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ExtraErrorData';\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(private readonly _options: ExtraErrorDataOptions = { depth: 3 }) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(ExtraErrorData);\n      if (!self) {\n        return event;\n      }\n      return self.enhanceEventWithErrorData(event, hint);\n    });\n  }\n\n  /**\n   * Attaches extracted information from the Error object to extra field in the Event\n   */\n  public enhanceEventWithErrorData(event: Event, hint?: EventHint): Event {\n    if (!hint || !hint.originalException || !isError(hint.originalException)) {\n      return event;\n    }\n\n    const errorData = this._extractErrorData(hint.originalException as ExtendedError);\n\n    if (errorData) {\n      let extra = {\n        ...event.extra,\n      };\n\n      const normalizedErrorData = normalize(errorData, this._options.depth);\n      if (isPlainObject(normalizedErrorData)) {\n        extra = {\n          ...event.extra,\n          ...normalizedErrorData,\n        };\n      }\n\n      return {\n        ...event,\n        extra,\n      };\n    }\n\n    return event;\n  }\n\n  /**\n   * Extract extra information from the Error object\n   */\n  private _extractErrorData(error: ExtendedError): { [key: string]: unknown } | null {\n    let result = null;\n    // We are trying to enhance already existing event, so no harm done if it won't succeed\n    try {\n      const nativeKeys = ['name', 'message', 'stack', 'line', 'column', 'fileName', 'lineNumber', 'columnNumber'];\n      const name = error.name || error.constructor.name;\n      const errorKeys = Object.getOwnPropertyNames(error).filter(key => nativeKeys.indexOf(key) === -1);\n\n      if (errorKeys.length) {\n        const extraErrorInfo: { [key: string]: unknown } = {};\n        for (const key of errorKeys) {\n          let value = error[key];\n          if (isError(value)) {\n            value = (value as Error).toString();\n          }\n          // tslint:disable:no-unsafe-any\n          extraErrorInfo[key] = value;\n        }\n        result = {\n          [name]: extraErrorInfo,\n        };\n      }\n    } catch (oO) {\n      logger.error('Unable to extract extra data from the Error object:', oO);\n    }\n\n    return result;\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, supportsReportingObserver } from '@sentry/utils';\n\n/** JSDoc */\ninterface Report {\n  [key: string]: any;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\n/** JSDoc */\nenum ReportTypes {\n  /** JSDoc */\n  Crash = 'crash',\n  /** JSDoc */\n  Deprecation = 'deprecation',\n  /** JSDoc */\n  Intervention = 'intervention',\n}\n\n/** JSDoc */\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\n/** JSDoc */\ninterface CrashReportBody {\n  [key: string]: any;\n  crashId: string;\n  reason?: string;\n}\n\n/** JSDoc */\ninterface DeprecationReportBody {\n  [key: string]: any;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n/** JSDoc */\ninterface InterventionReportBody {\n  [key: string]: any;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n/** Reporting API integration - https://w3c.github.io/reporting/ */\nexport class ReportingObserver implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = ReportingObserver.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ReportingObserver';\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly _options: {\n      types?: ReportTypes[];\n    } = {\n      types: [ReportTypes.Crash, ReportTypes.Deprecation, ReportTypes.Intervention],\n    },\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!supportsReportingObserver()) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    const observer = new (getGlobalObject<any>()).ReportingObserver(this.handler.bind(this), {\n      buffered: true,\n      types: this._options.types,\n    });\n\n    observer.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public handler(reports: Report[]): void {\n    const hub = this._getCurrentHub && this._getCurrentHub();\n    if (!hub || !hub.getIntegration(ReportingObserver)) {\n      return;\n    }\n    for (const report of reports) {\n      hub.withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody: {\n            [key: string]: any;\n          } = {};\n\n          // tslint:disable-next-line:forin\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === ReportTypes.Crash) {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        hub.captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils';\n\ntype StackFrameIteratee = (frame: StackFrame) => StackFrame;\n\n/** Rewrite event frames paths */\nexport class RewriteFrames implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = RewriteFrames.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RewriteFrames';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _root?: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _iteratee: StackFrameIteratee = (frame: StackFrame) => {\n    if (frame.filename && frame.filename.startsWith('/')) {\n      const base = this._root ? relative(this._root, frame.filename) : basename(frame.filename);\n      frame.filename = `app:///${base}`;\n    }\n    return frame;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { root?: string; iteratee?: StackFrameIteratee } = {}) {\n    if (options.root) {\n      this._root = options.root;\n    }\n    if (options.iteratee) {\n      this._iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n    if (frames) {\n      for (const i in frames) {\n        // tslint:disable-next-line\n        frames[i] = this._iteratee(frames[i]);\n      }\n    }\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        // tslint:disable-next-line:no-unsafe-any\n        return (exception as any).values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    }\n    return undefined;\n  }\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { fill, getGlobalObject, isMatchingPattern, logger, supportsNativeFetch } from '@sentry/utils';\n\n/** JSDoc */\ninterface TracingOptions {\n  tracingOrigins?: Array<string | RegExp>;\n  traceFetch?: boolean;\n  traceXHR?: boolean;\n  autoStartOnDomReady?: boolean;\n}\n\n/**\n * Tracing Integration\n */\nexport class Tracing implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Tracing.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Tracing';\n\n  /**\n   * If we have an xhr we need to store the url in the instance.\n   *\n   */\n  // @ts-ignore\n  private _xhrUrl?: string;\n\n  /**\n   * Constructor for Tracing\n   *\n   * @param _options TracingOptions\n   */\n  public constructor(private readonly _options: TracingOptions = {}) {\n    if (!Array.isArray(_options.tracingOrigins) || _options.tracingOrigins.length === 0) {\n      const defaultTracingOrigins = ['localhost', /^\\//];\n      logger.warn(\n        'Sentry: You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n      );\n      logger.warn(`Sentry: We added a reasonable default for you: ${defaultTracingOrigins}`);\n      _options.tracingOrigins = defaultTracingOrigins;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (this._options.traceXHR !== false) {\n      this._traceXHR(getCurrentHub);\n    }\n    if (this._options.traceFetch !== false) {\n      this._traceFetch(getCurrentHub);\n    }\n    if (this._options.autoStartOnDomReady !== false) {\n      getGlobalObject<Window>().addEventListener('DOMContentLoaded', () => {\n        Tracing.startTrace(getCurrentHub(), getGlobalObject<Window>().location.href);\n      });\n      getGlobalObject<Window>().document.onreadystatechange = () => {\n        if (document.readyState === 'complete') {\n          Tracing.startTrace(getCurrentHub(), getGlobalObject<Window>().location.href);\n        }\n      };\n    }\n  }\n\n  /**\n   * Starts a new trace\n   * @param hub The hub to start the trace on\n   * @param transaction Optional transaction\n   */\n  public static startTrace(hub: Hub, transaction?: string): void {\n    hub.configureScope(scope => {\n      scope.startSpan();\n      scope.setTransaction(transaction);\n    });\n  }\n\n  /**\n   * JSDoc\n   */\n  private _traceXHR(getCurrentHub: () => Hub): void {\n    if (!('XMLHttpRequest' in getGlobalObject<Window>())) {\n      return;\n    }\n\n    const xhrproto = XMLHttpRequest.prototype;\n\n    fill(\n      xhrproto,\n      'open',\n      originalOpen =>\n        function(this: XMLHttpRequest, ...args: any[]): void {\n          // @ts-ignore\n          const self = getCurrentHub().getIntegration(Tracing);\n          if (self) {\n            self._xhrUrl = args[1] as string;\n          }\n          // tslint:disable-next-line: no-unsafe-any\n          return originalOpen.apply(this, args);\n        },\n    );\n\n    fill(\n      xhrproto,\n      'send',\n      originalSend =>\n        function(this: XMLHttpRequest, ...args: any[]): void {\n          // @ts-ignore\n          const self = getCurrentHub().getIntegration(Tracing);\n          if (self && self._xhrUrl && self._options.tracingOrigins) {\n            const url = self._xhrUrl;\n            const headers = getCurrentHub().traceHeaders();\n            // tslint:disable-next-line: prefer-for-of\n            const isWhitelisted = self._options.tracingOrigins.some((origin: string | RegExp) =>\n              isMatchingPattern(url, origin),\n            );\n\n            if (isWhitelisted && this.setRequestHeader) {\n              Object.keys(headers).forEach(key => {\n                this.setRequestHeader(key, headers[key]);\n              });\n            }\n          }\n          // tslint:disable-next-line: no-unsafe-any\n          return originalSend.apply(this, args);\n        },\n    );\n  }\n\n  /**\n   * JSDoc\n   */\n  private _traceFetch(getCurrentHub: () => Hub): void {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    // tslint:disable: only-arrow-functions\n    fill(getGlobalObject<Window>(), 'fetch', function(originalFetch: () => void): () => void {\n      return function(...args: any[]): void {\n        // @ts-ignore\n        const self = getCurrentHub().getIntegration(Tracing);\n        if (self && self._options.tracingOrigins) {\n          const url = args[0] as string;\n          const options = (args[1] = (args[1] as { [key: string]: any }) || {});\n\n          let whiteListed = false;\n          self._options.tracingOrigins.forEach((whiteListUrl: string | RegExp) => {\n            if (!whiteListed) {\n              whiteListed = isMatchingPattern(url, whiteListUrl);\n            }\n          });\n\n          if (whiteListed) {\n            if (options.headers) {\n              if (Array.isArray(options.headers)) {\n                options.headers = [...options.headers, ...Object.entries(getCurrentHub().traceHeaders())];\n              } else {\n                options.headers = {\n                  ...options.headers,\n                  ...getCurrentHub().traceHeaders(),\n                };\n              }\n            } else {\n              options.headers = getCurrentHub().traceHeaders();\n            }\n          }\n        }\n        // tslint:disable-next-line: no-unsafe-any\n        return originalFetch.apply(getGlobalObject<Window>(), args);\n      };\n    });\n    // tslint:enable: only-arrow-functions\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Add node transaction to the event */\nexport class Transaction implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Transaction.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Transaction';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] {\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n  }\n\n  /** JSDoc */\n  private _getTransaction(frame: StackFrame): string {\n    return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isPlainObject, logger } from '@sentry/utils';\n\n/** JSDoc */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: {\n    [key: string]: any;\n  };\n  lifecycleHook?: string;\n}\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _Vue: any; // tslint:disable-line:variable-name\n\n  /**\n   * When set to false, Sentry will suppress reporting all props data\n   * from your Vue components for privacy concerns.\n   */\n  private readonly _attachProps: boolean = true;\n\n  /**\n   * When set to true, original Vue's `logError` will be called as well.\n   * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n   */\n  private readonly _logErrors: boolean = false;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Vue?: any; attachProps?: boolean; logErrors?: boolean } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._Vue = options.Vue || getGlobalObject<any>().Vue;\n\n    if (options.logErrors !== undefined) {\n      this._logErrors = options.logErrors;\n    }\n    if (options.attachProps === false) {\n      this._attachProps = false;\n    }\n  }\n\n  /** JSDoc */\n  private _formatComponentName(vm: any): string {\n    // tslint:disable:no-unsafe-any\n\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n    const name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (\n      (name ? `component <${name}>` : 'anonymous component') +\n      (vm._isVue && vm.$options.__file ? ` at ${vm.$options.__file}` : '')\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!this._Vue || !this._Vue.config) {\n      logger.error('VueIntegration is missing a Vue instance');\n      return;\n    }\n\n    const oldOnError = this._Vue.config.errorHandler;\n\n    this._Vue.config.errorHandler = (error: Error, vm: { [key: string]: any }, info: string): void => {\n      const metadata: Metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = this._formatComponentName(vm);\n\n        if (this._attachProps) {\n          metadata.propsData = vm.$options.propsData;\n        }\n      }\n\n      if (info !== void 0) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // This timeout makes sure that any breadcrumbs are recorded before sending it off the sentry\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Vue, error, vm, info);\n      }\n\n      if (this._logErrors) {\n        if (process && process.env && process.env.NODE_ENV !== 'production') {\n          this._Vue.util.warn(`Error in ${info}: \"${error.toString()}\"`, vm);\n        }\n        // tslint:disable-next-line:no-console\n        console.error(error);\n      }\n    };\n  }\n}\n","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return wat instanceof Error;\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): boolean {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // tslint:disable:no-unsafe-any\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n  // tslint:enable:no-unsafe-any\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  // tslint:disable-next-line:no-unsafe-any\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n","// tslint:disable\n\nimport { getGlobalObject, isError, isErrorEvent } from '@sentry/utils';\n\n/**\n * @hidden\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number;\n  column: number;\n  context: string[];\n}\n\n/**\n * @hidden\n */\nexport interface StackTrace {\n  /**\n   * Known modes: callers, failed, multiline, onerror, stack, stacktrace\n   */\n  mode: string;\n  mechanism: string;\n  name: string;\n  message: string;\n  url: string;\n  stack: StackFrame[];\n  useragent: string;\n  original?: string;\n  incomplete?: boolean;\n}\n\ninterface ComputeStackTrace {\n  /**\n   * Computes a stack trace for an exception.\n   * @param {Error} ex\n   * @param {(string|number)=} depth\n   */\n  (ex: Error, depth?: string | number): StackTrace;\n}\n\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\n\nvar window = getGlobalObject<Window>();\n\ninterface TraceKit {\n  _report: any;\n  _collectWindowErrors: any;\n  _computeStackTrace: any;\n  _linesOfContext: any;\n}\n\nvar TraceKit: TraceKit = {\n  _report: false,\n  _collectWindowErrors: false,\n  _computeStackTrace: false,\n  _linesOfContext: false,\n};\n\n// var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object: any, key: any) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n  return document.location.href;\n}\n\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._report = (function reportModuleWrapper() {\n  var handlers: any = [],\n    lastException: any = null,\n    lastExceptionStack: any = null;\n\n  /**\n   * Add a crash handler.\n   * @param {Function} handler\n   * @memberof TraceKit.report\n   */\n  function _subscribe(handler: any) {\n    // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n    // So user can choose which one he wants to attach\n\n    // installGlobalHandler();\n    // installGlobalUnhandledRejectionHandler();\n    handlers.push(handler);\n  }\n\n  /**\n   * Dispatch stack information to all handlers.\n   * @param {TraceKit.StackTrace} stack\n   * @param {boolean} isWindowError Is this a top-level window error?\n   * @param {Error=} error The error that's being handled (if available, null otherwise)\n   * @memberof TraceKit.report\n   * @throws An exception if an error occurs while calling an handler.\n   */\n  function _notifyHandlers(stack: any, isWindowError: any, error: any) {\n    var exception = null;\n    if (isWindowError && !TraceKit._collectWindowErrors) {\n      return;\n    }\n    for (var i in handlers) {\n      if (_has(handlers, i)) {\n        try {\n          handlers[i](stack, isWindowError, error);\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler: any, _onErrorHandlerInstalled: any;\n\n  /**\n   * Ensures all global unhandled exceptions are recorded.\n   * Supported by Gecko and IE.\n   * @param {string} message Error message.\n   * @param {string} url URL of script that generated the exception.\n   * @param {(number|string)} lineNo The line number at which the error occurred.\n   * @param {(number|string)=} columnNo The column number at which the error occurred.\n   * @param {Error=} errorObj The actual Error object.\n   * @memberof TraceKit.report\n   */\n  function _traceKitWindowOnError(message: any, url: any, lineNo: any, columnNo: any, errorObj: any) {\n    var stack = null;\n    // If 'errorObj' is ErrorEvent, get real Error from inside\n    errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj;\n    // If 'message' is ErrorEvent, get real message from inside\n    message = isErrorEvent(message) ? message.message : message;\n\n    if (lastExceptionStack) {\n      TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n      processLastException();\n    } else if (errorObj && isError(errorObj)) {\n      stack = TraceKit._computeStackTrace(errorObj);\n      stack.mechanism = 'onerror';\n      _notifyHandlers(stack, true, errorObj);\n    } else {\n      var location: any = {\n        url: url,\n        line: lineNo,\n        column: columnNo,\n      };\n\n      var name;\n      var msg = message; // must be new var or will modify original `arguments`\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          msg = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n      location.context = null;\n      stack = {\n        name: name,\n        message: msg,\n        mode: 'onerror',\n        mechanism: 'onerror',\n        stack: [\n          {\n            ...location,\n            // Firefox sometimes doesn't return url correctly and this is an old behavior\n            // that I prefer to port here as well.\n            // It can be altered only here, as previously it's using `location.url` for other things — Kamil\n            url: location.url || getLocationHref(),\n          },\n        ],\n      };\n\n      _notifyHandlers(stack, true, null);\n    }\n\n    if (_oldOnerrorHandler) {\n      // @ts-ignore\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n\n  /**\n   * Ensures all unhandled rejections are recorded.\n   * @param {PromiseRejectionEvent} e event.\n   * @memberof TraceKit.report\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n   */\n  function _traceKitWindowOnUnhandledRejection(e: any) {\n    var err = e;\n    // You cannot itterate over non-objects, but we want to check\n    // for the existence in any value, not for the value itself\n    try {\n      err = e && 'reason' in e ? e.reason : e;\n    } catch (_oO) {}\n    var stack = TraceKit._computeStackTrace(err);\n    stack.mechanism = 'onunhandledrejection';\n    _notifyHandlers(stack, true, err);\n  }\n\n  /**\n   * Install a global onerror handler\n   * @memberof TraceKit.report\n   */\n  function _installGlobalHandler() {\n    if (_onErrorHandlerInstalled === true) {\n      return;\n    }\n\n    _oldOnerrorHandler = window.onerror;\n    window.onerror = _traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n\n  /**\n   * Install a global onunhandledrejection handler\n   * @memberof TraceKit.report\n   */\n  function _installGlobalUnhandledRejectionHandler() {\n    (window as any).onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n  }\n\n  /**\n   * Process the most recent exception\n   * @memberof TraceKit.report\n   */\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n      _lastException = lastException;\n    lastExceptionStack = null;\n    lastException = null;\n    _notifyHandlers(_lastExceptionStack, false, _lastException);\n  }\n\n  /**\n   * Reports an unhandled Error to TraceKit.\n   * @param {Error} ex\n   * @memberof TraceKit.report\n   * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n   */\n  function _report(ex: any) {\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit._computeStackTrace(ex);\n    lastExceptionStack = stack;\n    lastException = ex;\n\n    // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n    setTimeout(\n      function() {\n        if (lastException === ex) {\n          processLastException();\n        }\n      },\n      stack.incomplete ? 2000 : 0,\n    );\n\n    throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n  }\n\n  (_report as any)._subscribe = _subscribe;\n  (_report as any)._installGlobalHandler = _installGlobalHandler;\n  (_report as any)._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n\n  return _report;\n})();\n\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\n\nTraceKit._computeStackTrace = (function _computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n   * Computes stack trace information from the stack property.\n   * Chrome and Gecko use this property.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _computeStackTraceFromStackProp(ex: any) {\n    if (!ex || !ex.stack) {\n      return null;\n    }\n\n    // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n    var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n      // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n      // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n      // We need this specific case for now because we want no other regex to match.\n      gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n      winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n      // Used to additionally parse URL/line/column from eval frames\n      isEval,\n      geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n      chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n      lines = ex.stack.split('\\n'),\n      stack = [],\n      submatch,\n      parts,\n      element,\n      reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null,\n        };\n      } else if ((parts = winjs.exec(lines[i]))) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null,\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[1] = parts[1] || `eval`;\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = ''; // no column when eval\n        } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null,\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      (element as any).context = null;\n\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    if (stack[0] && stack[0].line && !stack[0].column && reference) {\n      stack[0].column = null;\n    }\n\n    return {\n      mode: 'stack',\n      name: ex.name,\n      message: ex.message,\n      stack: stack,\n    };\n  }\n\n  /**\n   * Computes stack trace information from the stacktrace property.\n   * Opera 10+ uses this property.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _computeStackTraceFromStacktraceProp(ex: any) {\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    if (!stacktrace) {\n      return;\n    }\n\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n      opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n      lines = stacktrace.split('\\n'),\n      stack = [],\n      parts;\n\n    for (var line = 0; line < lines.length; line += 2) {\n      var element = null;\n      if ((parts = opera10Regex.exec(lines[line]))) {\n        element = {\n          url: parts[2],\n          line: +parts[1],\n          column: null,\n          func: parts[3],\n          args: [],\n        };\n      } else if ((parts = opera11Regex.exec(lines[line]))) {\n        element = {\n          url: parts[6],\n          line: +parts[1],\n          column: +parts[2],\n          func: parts[3] || parts[4],\n          args: parts[5] ? parts[5].split(',') : [],\n        };\n      }\n\n      if (element) {\n        if (!element.func && element.line) {\n          element.func = UNKNOWN_FUNCTION;\n        }\n        if (element.line) {\n          (element as any).context = null;\n        }\n\n        if (!(element as any).context) {\n          (element as any).context = [lines[line + 1]];\n        }\n\n        stack.push(element);\n      }\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      mode: 'stacktrace',\n      name: ex.name,\n      message: ex.message,\n      stack: stack,\n    };\n  }\n\n  /**\n   * NOT TESTED.\n   * Computes stack trace information from an error message that includes\n   * the stack trace.\n   * Opera 9 and earlier use this method if the option to show stack\n   * traces is turned on in opera:config.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack information.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _computeStackTraceFromOperaMultiLineMessage(ex: any) {\n    // TODO: Clean this function up\n    // Opera includes a stack trace into the exception message. An example is:\n    //\n    // Statement on line 3: Undefined variable: undefinedFunc\n    // Backtrace:\n    //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n    //         undefinedFunc(a);\n    //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n    //           zzz(x, y, z);\n    //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n    //           yyy(a, a, a);\n    //   Line 1 of function script\n    //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n    //   ...\n\n    var lines = ex.message.split('\\n');\n    if (lines.length < 4) {\n      return null;\n    }\n\n    var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n      lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n      lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n      stack = [],\n      scripts = window && window.document && window.document.getElementsByTagName('script'),\n      inlineScriptBlocks = [],\n      parts;\n\n    for (var s in scripts) {\n      if (_has(scripts, s) && !scripts[s].src) {\n        inlineScriptBlocks.push(scripts[s]);\n      }\n    }\n\n    for (var line = 2; line < lines.length; line += 2) {\n      var item = null;\n      if ((parts = lineRE1.exec(lines[line]))) {\n        item = {\n          url: parts[2],\n          func: parts[3],\n          args: [],\n          line: +parts[1],\n          column: null,\n        };\n      } else if ((parts = lineRE2.exec(lines[line]))) {\n        item = {\n          url: parts[3],\n          func: parts[4],\n          args: [],\n          line: +parts[1],\n          column: null, // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\n        };\n      } else if ((parts = lineRE3.exec(lines[line]))) {\n        var url = getLocationHref().replace(/#.*$/, '');\n        item = {\n          url: url,\n          func: '',\n          args: [],\n          line: parts[1],\n          column: null,\n        };\n      }\n\n      if (item) {\n        if (!item.func) {\n          item.func = UNKNOWN_FUNCTION;\n        }\n        // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n        (item as any).context = [lines[line + 1]];\n        stack.push(item);\n      }\n    }\n    if (!stack.length) {\n      return null; // could not parse multiline exception message as Opera stack trace\n    }\n\n    return {\n      mode: 'multiline',\n      name: ex.name,\n      message: lines[0],\n      stack: stack,\n    };\n  }\n\n  /**\n   * Adds information about the first frame to incomplete stack traces.\n   * Safari and IE require this to get complete data on the first frame.\n   * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n   * one of the compute* methods.\n   * @param {string} url The URL of the script that caused an error.\n   * @param {(number|string)} lineNo The line number of the script that\n   * caused an error.\n   * @param {string=} message The error generated by the browser, which\n   * hopefully contains the name of the object that caused the error.\n   * @return {boolean} Whether or not the stack information was\n   * augmented.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _augmentStackTraceWithInitialElement(stackInfo: any, url: any, lineNo: any, message: any) {\n    var initial = {\n      url: url,\n      line: lineNo,\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!(initial as any).func) {\n        (initial as any).func = UNKNOWN_FUNCTION;\n      }\n\n      if (!(initial as any).context) {\n        (initial as any).context = null;\n      }\n\n      var reference = / '([^']+)' /.exec(message);\n      if (reference) {\n        (initial as any).column = null;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === (initial as any).func) {\n            stackInfo.stack[0].line = initial.line;\n            stackInfo.stack[0].context = (initial as any).context;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Computes stack trace information by walking the arguments.caller\n   * chain at the time the exception occurred. This will cause earlier\n   * frames to be missed but is the only way to get any stack trace in\n   * Safari and IE. The top frame is restored by\n   * {@link augmentStackTraceWithInitialElement}.\n   * @param {Error} ex\n   * @return {TraceKit.StackTrace=} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _computeStackTraceByWalkingCallerChain(ex: any, depth: any) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n      stack = [],\n      funcs = {},\n      recursion = false,\n      parts,\n      item;\n\n    for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n      if (curr === _computeStackTrace || curr === TraceKit._report) {\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        args: [],\n        line: null,\n        column: null,\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = (parts as any).input.substring(0, (parts as any).input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if ((funcs as any)['' + curr]) {\n        recursion = true;\n      } else {\n        (funcs as any)['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      mode: 'callers',\n      name: ex.name,\n      message: ex.message,\n      stack: stack,\n    };\n    _augmentStackTraceWithInitialElement(\n      result,\n      ex.sourceURL || ex.fileName,\n      ex.line || ex.lineNumber,\n      ex.message || ex.description,\n    );\n    return result;\n  }\n\n  /**\n   * Computes a stack trace for an exception.\n   * @param {Error} ex\n   * @param {(string|number)=} depth\n   * @memberof TraceKit._computeStackTrace\n   */\n  function computeStackTrace(ex: any, depth: any) {\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      // This must be tried first because Opera 10 *destroys*\n      // its stacktrace property if you try to access the stack\n      // property first!!\n      stack = _computeStackTraceFromStacktraceProp(ex);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {}\n\n    return {\n      original: ex,\n      name: ex && ex.name,\n      message: ex && ex.message,\n      mode: 'failed',\n    };\n  }\n\n  function popFrames(stacktrace: any, popSize: number): any {\n    if (Number.isNaN(popSize)) {\n      return stacktrace;\n    }\n\n    try {\n      return {\n        ...stacktrace,\n        stack: stacktrace.stack.slice(popSize),\n      };\n    } catch (e) {\n      return stacktrace;\n    }\n  }\n\n  (computeStackTrace as any)._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n  (computeStackTrace as any)._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n\n  return computeStackTrace;\n})();\n\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\n\nconst _subscribe = TraceKit._report._subscribe;\nconst _installGlobalHandler = TraceKit._report._installGlobalHandler;\nconst _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nconst _computeStackTrace: ComputeStackTrace = TraceKit._computeStackTrace;\n\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };\n","import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { Event as SentryEvent, Mechanism, WrappedFunction } from '@sentry/types';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\n\nconst debounceDuration: number = 1000;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n    capture?: boolean;\n  } = {},\n  before?: WrappedFunction,\n): any {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    // tslint:disable-next-line:strict-type-predicates\n    if (before && typeof before === 'function') {\n      before.apply(this, arguments);\n    }\n\n    const args = Array.prototype.slice.call(arguments);\n\n    // tslint:disable:no-unsafe-any\n    try {\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n      // tslint:enable:no-unsafe-any\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: normalize(args, 3),\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // tslint:disable-line:no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch (_oO) {\n    /*no-empty*/\n  }\n\n  return sentryWrapped;\n}\n\nlet debounceTimer: number = 0;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName: string, debounce: boolean = false): (event: Event) => void {\n  return (event: Event) => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    const captureBreadcrumb = () => {\n      // try/catch both:\n      // - accessing event.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      let target;\n      try {\n        target = event.target ? _htmlTreeAsString(event.target as Node) : _htmlTreeAsString((event as unknown) as Node);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      if (target.length === 0) {\n        return;\n      }\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `ui.${eventName}`, // e.g. ui.click, ui.input\n          message: target,\n        },\n        {\n          event,\n          name: eventName,\n        },\n      );\n    };\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(captureBreadcrumb);\n    } else {\n      captureBreadcrumb();\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler(): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event) => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      breadcrumbEventHandler('input')(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlTreeAsString(elem: Node): string {\n  let currentElem: Node | null = elem;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  const MAX_OUTPUT_LEN = 80;\n  const out = [];\n  let height = 0;\n  let len = 0;\n  const separator = ' > ';\n  const sepLength = separator.length;\n  let nextStr;\n\n  while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = _htmlElementAsString(currentElem as HTMLElement);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    currentElem = currentElem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem: HTMLElement): string {\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n","import { Event, Integration, Mechanism, WrappedFunction } from '@sentry/types';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod: any, request: string): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n// tslint:enable:strict-type-predicates\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // tslint:disable-next-line:no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // tslint:disable-next-line:no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    if (level in global.console && (originalConsole[level] as WrappedFunction).__sentry__) {\n      wrappedLevels[level] = (originalConsole[level] as WrappedFunction).__sentry_wrapped__;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(\n  event: Event,\n  value?: string,\n  type?: string,\n  mechanism: Mechanism = {\n    handled: true,\n    type: 'generic',\n  },\n): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n  event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** private _authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private _representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    // tslint:disable-next-line:no-this-assignment\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n    Object.assign(this, { host, pass, path, projectId, port, protocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n    });\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n  }\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { keysToEventMessage, normalizeToSize } from '@sentry/utils';\n\nimport { _computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception: {}, syntheticException: Error | null): Event {\n  const exceptionKeys = Object.keys(exception).sort();\n  const event: Event = {\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n    message: `Non-Error exception captured with keys: ${keysToEventMessage(exceptionKeys)}`,\n  };\n\n  if (syntheticException) {\n    const stacktrace = _computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.includes('sentryWrapped')) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line,\n      }),\n    )\n    .slice(0, STACKTRACE_LIMIT)\n    .reverse();\n}\n","import { API } from '@sentry/core';\nimport { Event, Response, Transport, TransportOptions } from '@sentry/types';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public url: string;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  public constructor(public options: TransportOptions) {\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): Promise<Response> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): Promise<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n","import { Breadcrumb, Event, EventHint, EventProcessor, Scope as ScopeInterface, Severity, User } from '@sentry/types';\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\n\nimport { Span } from './span';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: { [key: string]: any } = {};\n\n  /** Contexts */\n  protected _context: { [key: string]: any } = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction */\n  protected _transaction?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): SyncPromise<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      // tslint:disable-next-line:strict-type-predicates\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as Promise<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .catch(reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .catch(reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = normalize(user);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...normalize(tags),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: normalize(value) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extra: { [key: string]: any }): this {\n    this._extra = {\n      ...this._extra,\n      ...normalize(extra),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): this {\n    this._extra = { ...this._extra, [key]: normalize(extra) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = normalize(fingerprint);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = normalize(level);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransaction(transaction?: string): this {\n    this._transaction = transaction;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): this {\n    this._context[name] = context ? normalize(context) : undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(parentSpan?: Span): Span {\n    const span = new Span();\n    span.setParent(parentSpan);\n    this.setSpan(span);\n    return span;\n  }\n\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    Object.assign(newScope, scope, {\n      _scopeListeners: [],\n    });\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._context = { ...scope._context };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, normalize(mergedBreadcrumb)].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, normalize(mergedBreadcrumb)];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): SyncPromise<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = { ...this._context, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n    if (this._span) {\n      event.contexts = event.contexts || {};\n      event.contexts.trace = this._span;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  const global = getGlobalObject<Window | NodeJS.Global>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    // tslint:disable:no-unsafe-any\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    // tslint:disable-next-line\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { Span as SpanInterface } from '@sentry/types';\nimport { uuid4 } from '@sentry/utils';\n\nexport const TRACEPARENT_REGEXP = /^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$/;\n\n/**\n * Span containg all data about a span\n */\nexport class Span implements SpanInterface {\n  public constructor(\n    private readonly _traceId: string = uuid4(),\n    private readonly _spanId: string = uuid4().substring(16),\n    private _sampled?: boolean,\n    private _parent?: Span,\n  ) {}\n\n  /**\n   * Setter for parent\n   */\n  public setParent(parent: Span | undefined): this {\n    this._parent = parent;\n    return this;\n  }\n\n  /**\n   * Setter for sampled\n   */\n  public setSampled(sampled: boolean | undefined): this {\n    this._sampled = sampled;\n    return this;\n  }\n\n  /**\n   * Continues a trace\n   * @param traceparent Traceparent string\n   */\n  public static fromTraceparent(traceparent: string): Span | undefined {\n    const matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n      let sampled;\n      if (matches[3] === '1') {\n        sampled = true;\n      } else if (matches[3] === '0') {\n        sampled = false;\n      }\n      const parent = new Span(matches[1], matches[2], sampled);\n      return new Span(matches[1], undefined, sampled, parent);\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampled = '';\n    if (this._sampled === true) {\n      sampled = '-1';\n    } else if (this._sampled === false) {\n      sampled = '-0';\n    }\n\n    return `${this._traceId}-${this._spanId}${sampled}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): object {\n    return {\n      parent: (this._parent && this._parent.toJSON()) || undefined,\n      sampled: this._sampled,\n      span_id: this._spanId,\n      trace_id: this._traceId,\n    };\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): Promise<Response> {\n    return Promise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n}\n","import { API, BaseClient, Scope } from '@sentry/core';\nimport { DsnLike, Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger, SyncPromise } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): SyncPromise<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    const dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  }\n}\n","export { BaseTransport } from './base';\nexport { FetchTransport } from './fetch';\nexport { XHRTransport } from './xhr';\n","export const SDK_NAME = 'sentry.javascript.browser';\nexport const SDK_VERSION = '5.6.3';\n"],"sourceRoot":""}