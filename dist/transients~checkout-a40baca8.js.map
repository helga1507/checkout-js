{"version":3,"sources":["webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscription.ts","webpack://checkout/../../../src/common/utils/index.js","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subject.ts","webpack://checkout/../src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/async.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/map.ts","webpack://checkout/webpack:///webpack/bootstrap","webpack://checkout/webpack:///external \"tslib\"","webpack://checkout/webpack:///external \"@bigcommerce/data-store\"","webpack://checkout/webpack:///external \"lodash\"","webpack://checkout/webpack:///external \"rxjs\"","webpack://checkout/webpack:///external \"@bigcommerce/memoize\"","webpack://checkout/webpack:///src/shipping/consignment-actions.ts","webpack://checkout/webpack:///external \"rxjs/operators\"","webpack://checkout/webpack:///src/customer/customer-strategy-actions.ts","webpack://checkout/webpack:///src/payment/payment-strategy-actions.ts","webpack://checkout/webpack:///src/common/error/errors/missing-data-error.ts","webpack://checkout/webpack:///src/shipping/shipping-strategy-actions.ts","webpack://checkout/webpack:///src/checkout/checkout-actions.ts","webpack://checkout/webpack:///src/order/order-actions.ts","webpack://checkout/webpack:///src/payment/payment-method-actions.ts","webpack://checkout/webpack:///src/billing/billing-address-actions.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-actions.ts","webpack://checkout/webpack:///src/coupon/coupon-actions.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-actions.ts","webpack://checkout/webpack:///src/common/error/errors/standard-error.ts","webpack://checkout/webpack:///src/common/utility/set-prototype-of.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-actions.ts","webpack://checkout/webpack:///src/embedded-checkout/embedded-checkout-events.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-actions.ts","webpack://checkout/webpack:///external \"card-validator\"","webpack://checkout/webpack:///src/common/error/errors/request-error.ts","webpack://checkout/webpack:///src/config/config-actions.ts","webpack://checkout/webpack:///src/payment/payment-status-types.ts","webpack://checkout/webpack:///src/common/utility/is-plain-object.ts","webpack://checkout/webpack:///src/geography/country-actions.ts","webpack://checkout/webpack:///src/shipping/shipping-country-actions.ts","webpack://checkout/webpack:///external \"@bigcommerce/request-sender\"","webpack://checkout/webpack:///src/payment/is-vaulted-instrument.ts","webpack://checkout/webpack:///src/store-credit/store-credit-actions.ts","webpack://checkout/webpack:///src/common/http-request/content-type.ts","webpack://checkout/webpack:///src/payment/errors/payment-method-client-unavailable-error.ts","webpack://checkout/webpack:///external \"@bigcommerce/script-loader\"","webpack://checkout/webpack:///src/hosted-form/iframe-content/hosted-input-events.ts","webpack://checkout/webpack:///src/common/iframe/is-iframe-event.ts","webpack://checkout/webpack:///src/common/error/errors/invalid-argument-error.ts","webpack://checkout/webpack:///src/payment/payment-method-types.ts","webpack://checkout/webpack:///src/address/map-to-internal-address.ts","webpack://checkout/webpack:///src/billing/is-billing-address-like.ts","webpack://checkout/webpack:///src/payment/payment-actions.ts","webpack://checkout/webpack:///src/common/http-request/join-includes.ts","webpack://checkout/webpack:///src/cart/map-to-internal-line-items.ts","webpack://checkout/webpack:///src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://checkout/webpack:///external \"local-storage-fallback\"","webpack://checkout/webpack:///external \"shallowequal\"","webpack://checkout/webpack:///src/hosted-form/hosted-field-events.ts","webpack://checkout/webpack:///src/common/utility/is-equal.ts","webpack://checkout/webpack:///external \"@bigcommerce/form-poster\"","webpack://checkout/webpack:///src/cart/map-to-internal-line-item.ts","webpack://checkout/webpack:///external \"reselect\"","webpack://checkout/webpack:///src/shipping/map-to-internal-shipping-option.ts","webpack://checkout/webpack:///src/customer/customer-actions.ts","webpack://checkout/webpack:///src/spam-protection/spam-protection-actions.ts","webpack://checkout/webpack:///src/common/utility/amount-transformer.ts","webpack://checkout/webpack:///src/common/url/parse-url.ts","webpack://checkout/webpack:///src/common/selector/with-memoized-combiner.ts","webpack://checkout/webpack:///src/common/error/error-actions.ts","webpack://checkout/webpack:///src/payment/payment-method-action-creator.ts","webpack://checkout/webpack:///src/payment/payment-method-request-sender.ts","webpack://checkout/webpack:///src/checkout/checkout-default-includes.ts","webpack://checkout/webpack:///src/common/http-request/internal-api-headers.ts","webpack://checkout/webpack:///src/common/utility/bind-decorator.ts","webpack://checkout/webpack:///src/customer/map-to-internal-customer.ts","webpack://checkout/webpack:///src/order/map-to-internal-order.ts","webpack://checkout/webpack:///src/cart/map-to-internal-cart.ts","webpack://checkout/webpack:///src/promotion/map-to-discount-notifications.ts","webpack://checkout/webpack:///external \"@bigcommerce/bigpay-client\"","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-sdk-creator.ts","webpack://checkout/webpack:///src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack://checkout/webpack:///src/hosted-form/iframe-content/card-number-formatter.ts","webpack://checkout/webpack:///src/coupon/map-to-internal-coupon.ts","webpack://checkout/webpack:///src/common/error/errors/not-initialized-error.ts","webpack://checkout/webpack:///src/common/error/throw-error-action.ts","webpack://checkout/webpack:///src/common/data-store/cache-action.ts","webpack://checkout/webpack:///src/common/data-store/is-action-options.ts","webpack://checkout/webpack:///src/common/data-store/cachable-action-decorator.ts","webpack://checkout/webpack:///src/common/http-request/join-or-merge-includes.ts","webpack://checkout/webpack:///src/common/http-request/merge-includes.ts","webpack://checkout/webpack:///external \"iframe-resizer\"","webpack://checkout/webpack:///external \"iframe-resizer/js/iframeResizer.contentWindow\"","webpack://checkout/webpack:///src/common/utility/omit-deep.ts","webpack://checkout/webpack:///src/customer/customer-request-sender.ts","webpack://checkout/webpack:///src/checkout/checkout-action-creator.ts","webpack://checkout/webpack:///src/shipping/consignment-action-creator.ts","webpack://checkout/webpack:///src/shipping/consignment-request-sender.ts","webpack://checkout/webpack:///src/payment/strategies/masterpass/get-callback-url.ts","webpack://checkout/webpack:///src/payment/payment-request-transformer.ts","webpack://checkout/webpack:///src/payment/payment-request-sender.ts","webpack://checkout/webpack:///src/common/utility/is-private.ts","webpack://checkout/webpack:///src/embedded-checkout/iframe-content/embedded-content-events.ts","webpack://checkout/webpack:///src/common/error/errors/unrecoverable-error.ts","webpack://checkout/webpack:///src/common/error/errors/map-from-internal-error-response.ts","webpack://checkout/webpack:///src/common/error/request-error-factory.ts","webpack://checkout/webpack:///src/common/error/errors/map-from-storefront-error-response.ts","webpack://checkout/webpack:///src/common/error/clear-error-reducer.ts","webpack://checkout/webpack:///src/common/utility/replace.ts","webpack://checkout/webpack:///src/common/utility/object-set.ts","webpack://checkout/webpack:///src/billing/billing-address-state.ts","webpack://checkout/webpack:///src/billing/billing-address-reducer.ts","webpack://checkout/webpack:///src/common/utility/array-replace.ts","webpack://checkout/webpack:///src/common/utility/object-merge.ts","webpack://checkout/webpack:///src/cart/cart-state.ts","webpack://checkout/webpack:///src/cart/cart-reducer.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-state.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-reducer.ts","webpack://checkout/webpack:///src/config/config-state.ts","webpack://checkout/webpack:///src/config/config-reducer.ts","webpack://checkout/webpack:///src/coupon/coupon-state.ts","webpack://checkout/webpack:///src/coupon/coupon-reducer.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-state.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-reducer.ts","webpack://checkout/webpack:///src/customer/customer-state.ts","webpack://checkout/webpack:///src/customer/customer-reducer.ts","webpack://checkout/webpack:///src/customer/customer-strategy-state.ts","webpack://checkout/webpack:///src/customer/customer-strategy-reducer.ts","webpack://checkout/webpack:///src/geography/country-state.ts","webpack://checkout/webpack:///src/geography/country-reducer.ts","webpack://checkout/webpack:///src/order/order-state.ts","webpack://checkout/webpack:///src/order/order-reducer.ts","webpack://checkout/webpack:///src/payment/payment-reducer.ts","webpack://checkout/webpack:///src/payment/payment-method-state.ts","webpack://checkout/webpack:///src/payment/payment-method-reducer.ts","webpack://checkout/webpack:///src/common/utility/merge-or-push.ts","webpack://checkout/webpack:///src/payment/payment-strategy-state.ts","webpack://checkout/webpack:///src/payment/payment-strategy-reducer.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-state.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-reducer.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-state.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-reducer.ts","webpack://checkout/webpack:///src/shipping/consignment-state.ts","webpack://checkout/webpack:///src/shipping/consignment-reducer.ts","webpack://checkout/webpack:///src/shipping/shipping-country-state.ts","webpack://checkout/webpack:///src/shipping/shipping-country-reducer.ts","webpack://checkout/webpack:///src/shipping/shipping-strategy-state.ts","webpack://checkout/webpack:///src/shipping/shipping-strategy-reducer.ts","webpack://checkout/webpack:///src/store-credit/store-credit-reducer.ts","webpack://checkout/webpack:///src/checkout/checkout-state.ts","webpack://checkout/webpack:///src/checkout/checkout-reducer.ts","webpack://checkout/webpack:///src/common/utility/guard.ts","webpack://checkout/webpack:///src/common/utility/create-freeze-proxy.ts","webpack://checkout/webpack:///src/payment/instrument/supported-payment-instruments.ts","webpack://checkout/webpack:///src/address/is-address-equal.ts","webpack://checkout/webpack:///src/store-credit/store-credit-state.ts","webpack://checkout/webpack:///src/checkout/create-internal-checkout-selectors.ts","webpack://checkout/webpack:///src/billing/billing-address-selector.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-selector.ts","webpack://checkout/webpack:///src/coupon/coupon-selector.ts","webpack://checkout/webpack:///src/customer/customer-selector.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-selector.ts","webpack://checkout/webpack:///src/shipping/shipping-address-selector.ts","webpack://checkout/webpack:///src/payment/payment-selector.ts","webpack://checkout/webpack:///src/cart/cart-selector.ts","webpack://checkout/webpack:///src/config/config-selector.ts","webpack://checkout/webpack:///src/geography/country-selector.ts","webpack://checkout/webpack:///src/customer/customer-strategy-selector.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-selector.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-selector.ts","webpack://checkout/webpack:///src/form/form-selector.ts","webpack://checkout/webpack:///src/payment/payment-method-selector.ts","webpack://checkout/webpack:///src/payment/payment-strategy-selector.ts","webpack://checkout/webpack:///src/shipping/shipping-country-selector.ts","webpack://checkout/webpack:///src/shipping/shipping-strategy-selector.ts","webpack://checkout/webpack:///src/shipping/consignment-selector.ts","webpack://checkout/webpack:///src/checkout/checkout-selector.ts","webpack://checkout/webpack:///src/order/order-selector.ts","webpack://checkout/webpack:///src/store-credit/store-credit-selector.ts","webpack://checkout/webpack:///src/checkout/create-checkout-store.ts","webpack://checkout/webpack:///src/checkout/create-action-transformer.ts","webpack://checkout/webpack:///src/common/error/create-request-error-factory.ts","webpack://checkout/webpack:///src/checkout/create-checkout-store-reducer.ts","webpack://checkout/webpack:///src/checkout/errors/checkout-not-available-error.ts","webpack://checkout/webpack:///src/checkout/checkout-request-sender.ts","webpack://checkout/webpack:///src/checkout/checkout-params.ts","webpack://checkout/webpack:///src/coupon/map-to-internal-gift-certificate.ts","webpack://checkout/webpack:///src/common/iframe/iframe-event-poster.ts","webpack://checkout/webpack:///src/common/iframe/iframe-event-listener.ts","webpack://checkout/webpack:///src/common/selector/selector-decorator.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-error-selector.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-status-selector.ts","webpack://checkout/webpack:///src/checkout-buttons/create-checkout-button-selectors.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-initializer.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/checkout-button-method-type.ts","webpack://checkout/webpack:///src/common/dom/is-element-id.ts","webpack://checkout/webpack:///src/common/dom/set-unique-element-id.ts","webpack://checkout/webpack:///src/checkout-buttons/checkout-button-strategy-action-creator.ts","webpack://checkout/webpack:///src/payment/strategies/paypal-commerce/paypal-commerce-script-loader.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/braintree/braintree-paypal-button-strategy.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/googlepay/googlepay-button-strategy.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/masterpass/masterpass-button-strategy.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/paypal/paypal-button-strategy.ts","webpack://checkout/webpack:///src/checkout-buttons/strategies/paypal-commerce/paypal-commerce-button-strategy.ts","webpack://checkout/webpack:///src/checkout-buttons/create-checkout-button-initializer.ts","webpack://checkout/webpack:///src/checkout-buttons/create-checkout-button-registry.ts","webpack://checkout/webpack:///src/embedded-checkout/errors/not-embeddable-error.ts","webpack://checkout/webpack:///src/embedded-checkout/errors/invalid-login-token-error.ts","webpack://checkout/webpack:///src/embedded-checkout/embedded-checkout.ts","webpack://checkout/webpack:///src/embedded-checkout/loading-indicator.ts","webpack://checkout/webpack:///src/embedded-checkout/resizable-iframe-creator.ts","webpack://checkout/webpack:///src/embedded-checkout/embed-checkout.ts","webpack://checkout/webpack:///src/common/utility/cache-key-maps.ts","webpack://checkout/webpack:///src/common/utility/cache-key-resolver.ts","webpack://checkout/webpack:///external \"messageformat\"","webpack://checkout/webpack:///src/common/error/errors/map-from-payment-error-response.ts","webpack://checkout/webpack:///src/common/error/errors/timeout-error.ts","webpack://checkout/webpack:///src/payment/errors/payment-method-invalid-error.ts","webpack://checkout/webpack:///src/common/selector/create-selector.ts","webpack://checkout/webpack:///src/config/config-action-creator.ts","webpack://checkout/webpack:///src/config/config-request-sender.ts","webpack://checkout/webpack:///src/billing/billing-address-request-sender.ts","webpack://checkout/webpack:///src/common/registry/registry.ts","webpack://checkout/webpack:///src/payment/strategies/masterpass/masterpass-script-loader.ts","webpack://checkout/webpack:///src/remote-checkout/errors/remote-checkout-synchronization-error.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay-braintree-initializer.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay-stripe-initializer.ts","webpack://checkout/webpack:///src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack://checkout/webpack:///src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack://checkout/webpack:///src/common/storage/browser-storage.ts","webpack://checkout/webpack:///src/payment/strategies/paypal/paypal-script-loader.ts","webpack://checkout/webpack:///src/common/iframe/iframe-resizer.ts","webpack://checkout/webpack:///src/common/error/error-action-creator.ts","webpack://checkout/webpack:///src/common/utility/get-environment.ts","webpack://checkout/webpack:///src/common/log/create-logger.ts","webpack://checkout/webpack:///src/common/log/console-logger.ts","webpack://checkout/webpack:///src/common/log/noop-logger.ts","webpack://checkout/webpack:///src/common/log/get-default-logger.ts","webpack://checkout/webpack:///src/coupon/coupon-action-creator.ts","webpack://checkout/webpack:///src/coupon/coupon-request-sender.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-action-creator.ts","webpack://checkout/webpack:///src/coupon/gift-certificate-request-sender.ts","webpack://checkout/webpack:///src/customer/customer-strategy-action-creator.ts","webpack://checkout/webpack:///src/payment/strategies/amazon-pay/amazon-pay-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-visacheckout-payment-processor.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/create-braintree-visacheckout-payment-processor.ts","webpack://checkout/webpack:///src/payment/payment-strategy-type.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/visacheckout-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/chasepay/chasepay-script-loader.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-request-sender.ts","webpack://checkout/webpack:///src/remote-checkout/remote-checkout-action-creator.ts","webpack://checkout/webpack:///src/customer/customer-action-creator.ts","webpack://checkout/webpack:///src/common/error/errors/not-implemented-error.ts","webpack://checkout/webpack:///src/customer/strategies/amazon/amazon-pay-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/braintree/braintree-visacheckout-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/chasepay/chasepay-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/default/default-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/googlepay/googlepay-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/masterpass/masterpass-customer-strategy.ts","webpack://checkout/webpack:///src/customer/strategies/square/square-customer-strategy.ts","webpack://checkout/webpack:///src/geography/country-action-creator.ts","webpack://checkout/webpack:///src/geography/country-request-sender.ts","webpack://checkout/webpack:///src/order/order-request-sender.ts","webpack://checkout/webpack:///src/spam-protection/errors/spam-protection-not-completed-error.ts","webpack://checkout/webpack:///src/order/order-action-creator.ts","webpack://checkout/webpack:///src/order/errors/order-finalization-not-required-error.ts","webpack://checkout/webpack:///src/payment/payment-strategy-action-creator.ts","webpack://checkout/webpack:///src/cart/cart-comparator.ts","webpack://checkout/webpack:///src/cart/errors/cart-changed-error.ts","webpack://checkout/webpack:///src/checkout/checkout-validator.ts","webpack://checkout/webpack:///src/hosted-form/errors/invalid-hosted-form-error.ts","webpack://checkout/webpack:///src/hosted-form/hosted-field.ts","webpack://checkout/webpack:///src/hosted-form/hosted-form.ts","webpack://checkout/webpack:///src/hosted-form/hosted-form-order-data-transformer.ts","webpack://checkout/webpack:///src/hosted-form/hosted-form-factory.ts","webpack://checkout/webpack:///src/spam-protection/errors/spam-protection-failed-error.ts","webpack://checkout/webpack:///src/spam-protection/spam-protection-action-creator.ts","webpack://checkout/webpack:///src/spam-protection/spam-protection-request-sender.ts","webpack://checkout/webpack:///src/store-credit/store-credit-action-creator.ts","webpack://checkout/webpack:///src/store-credit/store-credit-request-sender.ts","webpack://checkout/webpack:///src/payment/payment-action-creator.ts","webpack://checkout/webpack:///src/payment/payment-strategy-registry.ts","webpack://checkout/webpack:///src/common/browser-info/get-browser-info.ts","webpack://checkout/webpack:///src/payment/strategies/adyenv2/adyenv2.ts","webpack://checkout/webpack:///src/payment/errors/payment-argument-invalid-error.ts","webpack://checkout/webpack:///src/payment/strategies/adyenv2/adyenv2-payment-strategy.ts","webpack://checkout/webpack:///src/order/order-params.ts","webpack://checkout/webpack:///src/payment/strategies/adyenv2/adyenv2-script-loader.ts","webpack://checkout/webpack:///src/payment/errors/payment-method-cancelled-error.ts","webpack://checkout/webpack:///src/payment/strategies/affirm/affirm-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/affirm/affirmJs.ts","webpack://checkout/webpack:///src/payment/strategies/affirm/affirm-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/afterpay/afterpay-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/afterpay/afterpay-script-loader.ts","webpack://checkout/webpack:///src/address/is-internal-address-equal.ts","webpack://checkout/webpack:///src/common/utility/omit-private.ts","webpack://checkout/webpack:///src/address/map-from-internal-address.ts","webpack://checkout/webpack:///src/payment/strategies/cardinal/cardinal.ts","webpack://checkout/webpack:///src/payment/strategies/amazon-pay/amazon-pay-payment-strategy.ts","webpack://checkout/webpack:///src/common/utility/cancellable-promise.ts","webpack://checkout/webpack:///src/payment/strategies/bluesnapv2/bluesnapv2-payment-strategy.ts","webpack://checkout/webpack:///src/common/overlay/overlay.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-payment-processor.ts","webpack://checkout/webpack:///src/payment/errors/payment-method-failed-error.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-credit-card-payment-strategy.ts","webpack://checkout/webpack:///src/payment/is-credit-card-like.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-paypal-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/is-braintree-error.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/map-to-braintree-shipping-address-override.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/braintree-visacheckout-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/cardinal/cardinal-three-d-secure-flow.ts","webpack://checkout/webpack:///src/payment/strategies/cardinal/cardinal-client.ts","webpack://checkout/webpack:///src/payment/strategies/chasepay/chasepay.ts","webpack://checkout/webpack:///src/payment/strategies/cardinal/cardinal-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/chasepay/chasepay-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/square/square-form.ts","webpack://checkout/webpack:///src/payment/strategies/converge/converge-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/credit-card/credit-card-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/cybersource/cybersource-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/klarna/klarna-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/klarna/klarna-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/klarnav2/klarnav2-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/klarnav2/klarnav2-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/legacy/legacy-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/masterpass/masterpass-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/no-payment/no-payment-data-required-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/offline/offline-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/offsite/offsite-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/paypal/paypal-pro-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/paypal/paypal-express-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/paypal-commerce/paypal-commerce-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/sage-pay/sage-pay-payment-strategy.ts","webpack://checkout/webpack:///src/common/error/errors/unsupported-browser-error.ts","webpack://checkout/webpack:///src/payment/strategies/square/square-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/square/square-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/stripev3/stripev3-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/stripev3/stripev3-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/wepay/wepay-risk-client.ts","webpack://checkout/webpack:///src/payment/strategies/wepay/wepay-payment-strategy.ts","webpack://checkout/webpack:///src/payment/errors/payment-method-declined-error.ts","webpack://checkout/webpack:///src/payment/strategies/zip/zip-payment-strategy.ts","webpack://checkout/webpack:///src/payment/strategies/zip/zip-script-loader.ts","webpack://checkout/webpack:///src/common/data-store/create-data-store-projection.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-action-creator.ts","webpack://checkout/webpack:///src/common/date-time/is-future.ts","webpack://checkout/webpack:///src/common/date-time/add-minutes.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-response-transformer.ts","webpack://checkout/webpack:///src/payment/instrument/map-to-account-instrument.ts","webpack://checkout/webpack:///src/payment/instrument/map-to-card-instrument.ts","webpack://checkout/webpack:///src/payment/instrument/instrument-request-sender.ts","webpack://checkout/webpack:///src/shipping/shipping-country-action-creator.ts","webpack://checkout/webpack:///src/shipping/shipping-country-request-sender.ts","webpack://checkout/webpack:///src/shipping/shipping-strategy-action-creator.ts","webpack://checkout/webpack:///src/shipping/strategies/amazon/amazon-pay-shipping-strategy.ts","webpack://checkout/webpack:///src/shipping/strategies/default/default-shipping-strategy.ts","webpack://checkout/webpack:///src/common/dom/mutation-observer.ts","webpack://checkout/webpack:///src/spam-protection/errors/spam-protection-not-loaded-error.ts","webpack://checkout/webpack:///src/spam-protection/errors/spam-protection-challenge-not-completed-error.ts","webpack://checkout/webpack:///src/spam-protection/google-recaptcha.ts","webpack://checkout/webpack:///src/spam-protection/google-recaptcha-script-loader.ts","webpack://checkout/webpack:///src/common/utility/clone-result.ts","webpack://checkout/webpack:///src/common/selector/create-shallow-equal-selector.ts","webpack://checkout/webpack:///src/checkout/create-checkout-selectors.ts","webpack://checkout/webpack:///src/checkout/checkout-store-selector.ts","webpack://checkout/webpack:///src/checkout/checkout-store-error-selector.ts","webpack://checkout/webpack:///src/checkout/checkout-store-status-selector.ts","webpack://checkout/webpack:///src/common/error/error-message-transformer.ts","webpack://checkout/webpack:///src/common/utility/to-single-line.ts","webpack://checkout/webpack:///src/checkout/checkout-service.ts","webpack://checkout/webpack:///src/checkout/create-checkout-service-error-transformer.ts","webpack://checkout/webpack:///src/checkout/create-checkout-service.ts","webpack://checkout/webpack:///src/spam-protection/create-spam-protection.ts","webpack://checkout/webpack:///src/payment/create-payment-client.ts","webpack://checkout/webpack:///src/customer/create-customer-strategy-registry.ts","webpack://checkout/webpack:///src/payment/create-payment-strategy-registry.ts","webpack://checkout/webpack:///src/payment/strategies/braintree/create-braintree-payment-processor.ts","webpack://checkout/webpack:///src/shipping/create-shipping-strategy-registry.ts","webpack://checkout/webpack:///src/embedded-checkout/iframe-content/handle-frame-loaded-event.ts","webpack://checkout/webpack:///src/common/error/errors/custom-error.ts","webpack://checkout/webpack:///src/embedded-checkout/iframe-content/iframe-embedded-checkout-messenger.ts","webpack://checkout/webpack:///src/embedded-checkout/iframe-content/noop-embedded-checkout-messenger.ts","webpack://checkout/webpack:///src/embedded-checkout/iframe-content/create-embedded-checkout-messenger.ts","webpack://checkout/webpack:///src/locale/language-service.ts","webpack://checkout/webpack:///src/locale/create-language-service.ts","webpack://checkout/webpack:///src/currency/currency-formatter.ts","webpack://checkout/webpack:///src/currency/currency-service.ts","webpack://checkout/webpack:///src/currency/create-currency-service.ts","webpack://checkout/webpack:///src/analytics/analytics-step-tracker.ts","webpack://checkout/webpack:///src/analytics/noop-step-tracker.ts","webpack://checkout/webpack:///src/analytics/create-step-tracker.ts","webpack://checkout/webpack:///src/analytics/is-analytics-step-tracker-window.ts","webpack://checkout/webpack:///src/bundles/checkout-sdk.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay-payment-processor.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/googlepay-script-loader.ts","webpack://checkout/webpack:///src/payment/strategies/googlepay/create-googlepay-payment-processor.ts","webpack://checkout/webpack:///src/billing/errors/unable-to-continue-as-guest-error.ts","webpack://checkout/webpack:///src/billing/errors/update-customer-error.ts","webpack://checkout/webpack:///src/billing/billing-address-action-creator.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/empty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/from.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/identity.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/filter.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/multicast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isFunction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/config.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/noop.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Notification.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/of.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/AsyncSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isNumeric.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/reduce.ts","webpack://checkout/../src/timeout.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/canReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/hostReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/pipe.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/refCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/ReplaySubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/throwError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/defer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/take.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/scan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMap.ts","webpack://checkout/../../../src/common/utils/is-nil.js","webpack://checkout/../../../src/common/utils/omit-property.js","webpack://checkout/../../../src/payment/payment-method-mappers/payment-method-id-mapper.js","webpack://checkout/../../src/payment/url-helper.js","webpack://checkout/../../../src/common/http-request/request-sender.js","webpack://checkout/../../../src/common/http-request/method-types.js","webpack://checkout/../src/request-sender.ts","webpack://checkout/../src/data-store.ts","webpack://checkout/../src/deep-freeze.ts","webpack://checkout/../src/combine-reducers.ts","webpack://checkout/../src/create-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/groupBy.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/queue.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Scheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/asap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/never.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/not.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/timer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/audit.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isDate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/find.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeoutWith.ts","webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/../src/browser-support.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/../src/form-poster.ts","webpack://checkout/../../src/payment/payment-types.js","webpack://checkout/../../../src/common/utils/is-object.js","webpack://checkout/../../../src/common/http-request/content-types.js","webpack://checkout/../src/create-request-sender.ts","webpack://checkout/../src/payload-transformer.ts","webpack://checkout/../src/to-form-url-encoded.ts","webpack://checkout/../src/request-factory.ts","webpack://checkout/./node_modules/@bigcommerce/request-sender/node_modules/query-string/index.js","webpack://checkout/../src/is-promise.ts","webpack://checkout/../src/create-timeout.ts","webpack://checkout/../src/is-observable-action-like.ts","webpack://checkout/../src/noop-action-transformer.ts","webpack://checkout/../src/noop-state-transformer.ts","webpack://checkout/../src/compose-reducers.ts","webpack://checkout/../src/create-data-store.ts","webpack://checkout/../src/create-error-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/Immediate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/animationFrame.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/generate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/iif.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/interval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/pairs.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/range.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/using.ts","webpack://checkout/../src/memoize.ts","webpack://checkout/../src/cache-key-resolver.ts","webpack://checkout/../src/cache-key-maps.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/operators/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/auditTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/buffer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/catchError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/count.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounce.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounceTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delayWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/dematerialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinct.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/elementAt.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/endWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/every.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaust.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaustMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/expand.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/finalize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/findIndex.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/first.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/ignoreElements.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/isEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/last.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/materialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/max.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeScan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/min.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pairwise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pluck.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publish.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishBehavior.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeatWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retry.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retryWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sample.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sampleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sequenceEqual.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/share.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/shareReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/single.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/startWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/SubscribeOnObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/tap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeInterval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeout.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timestamp.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/toArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/window.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/withLatestFrom.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zipAll.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts","webpack://checkout/../src/create-form-poster.ts","webpack://checkout/../src/form-builder.ts","webpack://checkout/../src/url-utils.ts","webpack://checkout/../src/index.js","webpack://checkout/../../src/client/client.js","webpack://checkout/../../src/payment/offsite-payment-initializer.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/payload-mapper.js","webpack://checkout/../../../src/common/utils/includes.js","webpack://checkout/../../../src/common/utils/omit-emptystring-and-nil.js","webpack://checkout/../../../src/common/utils/is-emptystring-or-nil.js","webpack://checkout/../../../src/common/utils/is-empty-string.js","webpack://checkout/../../../src/common/utils/omit-nil.js","webpack://checkout/../../../src/common/utils/to-number.js","webpack://checkout/../../../src/common/utils/to-snake-case.js","webpack://checkout/../../../src/common/utils/to-string.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/address-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/customer-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/meta-mapper.js","webpack://checkout/../../src/payment/payment-method-types.js","webpack://checkout/../../src/payment/payment-method-ids.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/store-mapper.js","webpack://checkout/../../src/payment/payment-submitter.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payload-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/customer-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/order-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payment-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/store-mapper.js","webpack://checkout/../../../src/common/http-request/default-options.js","webpack://checkout/../../../src/common/http-request/payload-transformer.js","webpack://checkout/../../../src/common/http-request/request-factory.js","webpack://checkout/../../src/payment/client-token-generator.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/client-token-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/cart-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/gateway-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/quote-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/store-mapper.js","webpack://checkout/../../src/store/store-request-sender.js","webpack://checkout/../../src/store/url-helper.js","webpack://checkout/../../../../src/store/v2/mappers/index.js","webpack://checkout/../../src/client/default-config.js"],"names":["destinationOrNext","error","complete","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","empty","Subscriber","add","SafeSubscriber","rxSubscriber","this","create","next","subscriber","value","_next","err","_error","_complete","unsubscribe","closed","_unsubscribeAndRecycle","_parentOrParents","Subscription","_parentSubscriber","observerOrNext","context","isFunction","Object","bind","_context","config","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","hostReportError","wrappedComplete","call","fn","parent","Error","_unsubscribe","subscribe","_isScalar","_subscribe","lift","operator","observable","Observable","source","sink","toSubscriber","_trySubscribe","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","resolve","reject","subscription","pipe","operations","pipeFromArray","toPromise","x","Promise","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","OuterSubscriber","outerSubscriber","result","innerSubscriber","InnerSubscriber","subscribeTo","_subscriptions","errors","remove","index","e","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","len","sub","isObject","concat","push","teardown","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","reduce","errs","default","SubjectSubscriber","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","copy","slice","i","SubjectSubscription","asObservable","Subject","Array","async","AsyncScheduler","AsyncAction","project","thisArg","TypeError","MapOperator","MapSubscriber","count","installedModules","__webpack_require__","moduleId","exports","module","l","modules","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","key","n","object","property","prototype","hasOwnProperty","p","s","require","ConsignmentActionType","CreateConsignmentsRequested","CreateConsignmentsSucceeded","CreateConsignmentsFailed","UpdateConsignmentRequested","UpdateConsignmentSucceeded","UpdateConsignmentFailed","DeleteConsignmentRequested","DeleteConsignmentSucceeded","DeleteConsignmentFailed","UpdateShippingOptionRequested","UpdateShippingOptionSucceeded","UpdateShippingOptionFailed","LoadShippingOptionsRequested","LoadShippingOptionsSucceeded","LoadShippingOptionsFailed","CustomerStrategyActionType","SignInFailed","SignInRequested","SignInSucceeded","SignOutFailed","SignOutRequested","SignOutSucceeded","InitializeFailed","InitializeRequested","InitializeSucceeded","DeinitializeFailed","DeinitializeRequested","DeinitializeSucceeded","WidgetInteractionStarted","WidgetInteractionFinished","WidgetInteractionFailed","PaymentStrategyActionType","ExecuteFailed","ExecuteRequested","ExecuteSucceeded","FinalizeFailed","FinalizeRequested","FinalizeSucceeded","MissingDataErrorType","MissingBillingAddress","MissingCart","MissingCheckout","MissingConsignments","MissingCheckoutConfig","MissingOrder","MissingOrderConfig","MissingOrderId","MissingPayment","MissingPaymentInstrument","MissingPaymentMethod","MissingPaymentToken","MissingShippingAddress","subtype","type","ShippingStrategyActionType","UpdateAddressFailed","UpdateAddressRequested","UpdateAddressSucceeded","SelectOptionFailed","SelectOptionRequested","SelectOptionSucceeded","CheckoutActionType","LoadCheckoutRequested","LoadCheckoutSucceeded","LoadCheckoutFailed","UpdateCheckoutRequested","UpdateCheckoutSucceeded","UpdateCheckoutFailed","OrderActionType","LoadOrderRequested","LoadOrderSucceeded","LoadOrderFailed","LoadOrderPaymentsRequested","LoadOrderPaymentsSucceeded","LoadOrderPaymentsFailed","SubmitOrderRequested","SubmitOrderSucceeded","SubmitOrderFailed","FinalizeOrderRequested","FinalizeOrderSucceeded","FinalizeOrderFailed","PaymentMethodActionType","LoadPaymentMethodRequested","LoadPaymentMethodSucceeded","LoadPaymentMethodFailed","LoadPaymentMethodsRequested","LoadPaymentMethodsSucceeded","LoadPaymentMethodsFailed","BillingAddressActionType","UpdateBillingAddressRequested","UpdateBillingAddressSucceeded","UpdateBillingAddressFailed","ContinueAsGuestRequested","ContinueAsGuestSucceeded","ContinueAsGuestFailed","CheckoutButtonActionType","InitializeButtonFailed","InitializeButtonRequested","InitializeButtonSucceeded","DeinitializeButtonFailed","DeinitializeButtonRequested","DeinitializeButtonSucceeded","CouponActionType","ApplyCouponRequested","ApplyCouponSucceeded","ApplyCouponFailed","RemoveCouponRequested","RemoveCouponSucceeded","RemoveCouponFailed","InstrumentActionType","LoadInstrumentsRequested","LoadInstrumentsSucceeded","LoadInstrumentsFailed","DeleteInstrumentRequested","DeleteInstrumentSucceeded","DeleteInstrumentFailed","message","setPrototypeOf","__proto__","captureStackTrace","stack","GiftCertificateActionType","ApplyGiftCertificateRequested","ApplyGiftCertificateSucceeded","ApplyGiftCertificateFailed","RemoveGiftCertificateRequested","RemoveGiftCertificateSucceeded","RemoveGiftCertificateFailed","EmbeddedCheckoutEventType","CheckoutComplete","CheckoutError","CheckoutLoaded","FrameError","FrameLoaded","SignedOut","RemoteCheckoutActionType","InitializeRemoteBillingRequested","InitializeRemoteBillingSucceeded","InitializeRemoteBillingFailed","InitializeRemoteShippingRequested","InitializeRemoteShippingSucceeded","InitializeRemoteShippingFailed","InitializeRemotePaymentRequested","InitializeRemotePaymentSucceeded","InitializeRemotePaymentFailed","LoadRemoteSettingsRequested","LoadRemoteSettingsSucceeded","LoadRemoteSettingsFailed","SignOutRemoteCustomerRequested","SignOutRemoteCustomerSucceeded","SignOutRemoteCustomerFailed","UpdateRemoteCheckout","DEFAULT_RESPONSE","body","headers","status","response","ConfigActionType","LoadConfigRequested","LoadConfigSucceeded","LoadConfigFailed","ACKNOWLEDGE","FINALIZE","isPlainObject","CountryActionType","LoadCountriesRequested","LoadCountriesSucceeded","LoadCountriesFailed","ShippingCountryActionType","LoadShippingCountriesRequested","LoadShippingCountriesSucceeded","LoadShippingCountriesFailed","isVaultedInstrument","instrument","Boolean","instrumentId","isHostedVaultedInstrument","isFormattedVaultedInstrument","formattedInstrument","formattedPayload","bigpay_token","token","StoreCreditActionType","ApplyStoreCreditRequested","ApplyStoreCreditSucceeded","ApplyStoreCreditFailed","ContentType","Json","JsonV1","HostedInputEventType","AttachSucceeded","AttachFailed","BinChanged","Blurred","Changed","CardTypeChanged","Focused","SubmitSucceeded","SubmitFailed","Validated","isIframeEvent","HOSTED","OFFLINE","mapToInternalAddress","address","consignments","addressId","id","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","PaymentActionType","SubmitPaymentRequested","SubmitPaymentSucceeded","SubmitPaymentFailed","InitializeOffsitePaymentRequested","InitializeOffsitePaymentSucceeded","InitializeOffsitePaymentFailed","joinIncludes","includes","uniq","join","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","map","item","amountTransformer","imageUrl","amount","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","HostedFieldEventType","AttachRequested","SubmitRequested","ValidateRequested","isEqual","objectA","objectB","options","Date","getTime","RegExp","toString","filter","keyFilter","keysA","keysB","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","option","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","CustomerActionType","SignInCustomerRequested","SignInCustomerSucceeded","SignInCustomerFailed","SignOutCustomerRequested","SignOutCustomerSucceeded","SignOutCustomerFailed","UpdateCustomerRequested","UpdateCustomerSucceeded","UpdateCustomerFailed","SpamProtectionActionType","_decimalPlaces","Math","round","pow","parseUrl","url","test","anchor","document","createElement","href","port","hostname","hash","origin","protocol","pathname","search","withMemoizedCombiner","creator","combiner","args","pop","combinerArgs","memoize","ErrorActionType","ClearError","_requestSender","loadPaymentMethods","observer","createAction","then","meta","deviceSessionId","sessionHash","catch","createErrorAction","loadPaymentMethod","methodId","timeout","Accept","INTERNAL_USE_ONLY","bindMethodDecorator","_","descriptor","method","boundMethod","set","target","decoratedTarget","getOwnPropertyNames","getOwnPropertyDescriptor","mapToInternalCustomer","customer","billingAddress","addresses","customerId","isGuest","storeCredit","email","fullName","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","payments","items","currency","orderId","lineItems","code","customerCanBeCreated","payment","mapToInternalOrderPayment","subtotal","baseAmount","coupon","discountedAmount","coupons","sum","orderToken","callbackUrl","discountNotifications","giftCertificate","providerId","totalDiscountedAmount","appliedGiftCertificates","keyBy","detail","remainingBalance","remaining","balance","purchaseDate","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","find","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","lineItem","socialMedia","image","link","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","checkout","promotions","notifications","cart","promotion","banners","banner","placeholders","discountType","messageHtml","giftCertificates","certificate","used","required","some","isShippingRequired","taxSubtotal","_scriptLoader","_window","loadClient","loadScript","braintree","client","load3DS","threeDSecure","loadDataCollector","dataCollector","loadPaypal","paypal","loadPaypalCheckout","paypalCheckout","loadVisaCheckout","visaCheckout","loadGooglePayment","googlePayment","_braintreeScriptLoader","_dataCollectors","initialize","clientToken","_clientToken","getClient","PaymentNotInitialized","_client","authorization","getPaypal","_paypal","all","getPaypalCheckout","_paypalCheckout","get3DS","_3ds","getDataCollector","cacheKey","cached","kount","deviceData","getVisaCheckout","_visaCheckout","getGooglePaymentComponent","_googlePay","_teardown","mod","format","month","year","trimmedMonth","trimmedYear","toObject","card","maxLength","max","creditCardType","info","lengths","unformattedValue","unformat","gaps","gapIndex","output","replace","couponTypes","mapToInternalCoupon","displayName","couponType","NotInitializedErrorType","CheckoutButtonNotInitialized","CustomerNotInitialized","ShippingNotInitialized","SpamProtectionNotInitialized","throwErrorAction","action","of","throwError","payload","cacheAction","from","shareReplay","store","isActionOptions","param","useCache","cachableActionDecorator","memoizedMethods","WeakMap","decorateMethod","lastArg","instanceMethods","joinOrMergeIncludes","baseIncludes","includeDictionaryOrList","includesDictionary","deletions","pickBy","on","additions","difference","omitDeep","predicate","transform","omitBy","updateCustomer","post","signInCustomer","credentials","signOutCustomer","delete","_checkoutRequestSender","_configActionCreator","loadCheckout","merge","loadConfig","defer","catchError","loadDefaultCheckout","state","getState","getContextConfig","checkoutId","updateCheckout","getCheckout","loadCurrentCheckout","_consignmentRequestSender","unassignItemsByAddress","consignment","existingConsignment","getConsignmentByAddress","shippingAddress","_removeLineItems","getCart","updateConsignment","deleteConsignment","assignItemsByAddress","_createOrUpdateConsignment","_addLineItems","selectShippingOption","getConsignments","consignmentUpdateBody","shippingOptionId","consignmentMeta","loadShippingOptions","params","include","AvailableShippingOptions","updateAddress","_getUpdateAddressRequestBody","createConsignments","consignmentId","updateShippingOption","_isUpdateConsignmentRequest","customItems","itemId","_hydrateLineItems","lineItemIds","existingItem","sharedItem","request","DEFAULT_INCLUDES","put","getCallbackUrl","window","location","_cardExpiryFormatter","_cardNumberFormatter","checkoutState","getBillingAddress","getCustomer","getOrder","paymentMethod","paymentMethods","getPaymentMethod","gatewayId","getShippingAddress","shippingOption","getShippingOption","storeConfig","getStoreConfig","contextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","getOrderMeta","internalCustomer","authToken","paymentData","getPaymentToken","vaultAccessToken","_transformPaymentMethod","quoteMeta","geoCountryCode","pick","storeProfile","transformWithHostedFormData","values","data","paymentMethodMeta","selectedShippingOption","_transformHostedInputValues","gateway","initializationData","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","cardCode","ccExpiry","cardExpiry","ccName","cardName","cardNumber","submitPayment","_transformResponse","initializeOffsitePayment","statusText","isPrivate","EmbeddedContentEventType","StyleConfigured","joinErrors","_factoryMethods","register","title","factoryMethod","createError","_getType","_isStorefrontErrorResponseBody","_isInternalErrorResponseBody","internalType","last","split","errorResponse","storefrontErrorResponse","internalErrorResponse","clearErrorReducer","currentValue","newValue","objectSet","DEFAULT_STATE","statuses","billingAddressReducer","combineReducers","dataReducer","composeReducers","errorsReducer","statusesReducer","arrayReplace","currentArray","newArray","matchObject","sameAsCurrentCount","sameAsNewCount","countSameAsReplaced","replacedValue","newItem","currentItem","objectMerge","currentObject","newObject","cartReducer","DEFAULT_DATA_STATE","initializedContainers","DEFAULT_ERROR_STATE","DEFAULT_STATUS_STATE","checkoutButtonReducer","containerId","configReducer","couponReducer","giftCertificateReducer","st","customerReducer","customerStrategyReducer","isInitialized","initializeError","initializeMethodId","deinitializeError","deinitializeMethodId","signInError","signInMethodId","signOutError","signOutMethodId","widgetInteractionError","widgetInteractionMethodId","isInitializing","isDeinitializing","isSigningIn","isSigningOut","isWidgetInteracting","countryReducer","orderReducer","metaReducer","omit","paymentReducer","paymentMethodReducer","array","defaultPredicate","findIndex","methodA","methodB","loadMethodId","loadMethodError","isLoadingMethod","paymentStrategyReducer","executeError","executeMethodId","finalizeError","finalizeMethodId","isExecuting","isFinalizing","instrumentReducer","vaultedInstruments","deleteError","failedInstrument","isDeleting","deletingInstrument","remoteCheckoutReducer","billing","updateShippingOptionError","updateError","isUpdating","isUpdatingShippingOption","consignmentReducer","shippingCountryReducer","shippingStrategyReducer","updateAddressError","updateAddressMethodId","selectOptionError","selectOptionMethodId","isUpdatingAddress","isSelectingOption","storeCreditReducer","checkoutReducer","guard","errorFactory","createFreezeProxy","trap","proxy","iteratee","getPrototypeOf","charAt","deepFreeze","provider","braintreepaypal","authorizenet","stripe","stripev3","cybersource","converge","bluesnapv2","paymetric","normalize","identity","createInternalCheckoutSelectorsFactory","getBillingAddressOrThrow","getUpdateError","getContinueAsGuestError","getLoadError","isContinuingAsGuest","isLoading","getInitializeError","getDeinitializeError","getCoupons","getRemoveError","getApplyError","isApplying","isRemoving","getInternalPayment","getGatewayPayment","getHostedPayment","getPaymentId","getPaymentStatus","getPaymentRedirectUrl","isPaymentDataRequired","isPaymentDataSubmitted","createBillingAddressSelector","continueAsGuestError","loadError","memoizeOne","createCartSelector","createCheckoutButtonSelector","createConfigSelector","getConfig","getExternalSource","externalSource","createCountrySelector","getCountries","countries","createCouponSelector","removeCouponError","applyCouponError","isApplyingCoupon","isRemovingCoupon","createCustomerSelector","createCustomerStrategySelector","getSignInError","getSignOutError","getWidgetInteractionError","createGiftCertificateSelector","getGiftCertificates","removeGiftCertificateError","applyGiftCertificateError","isApplyingGiftCertificate","isRemovingGiftCertificate","createInstrumentSelector","getInstrumentsByPaymentMethod","paymentMethodKey","currentMethod","getCardInstrument","cards","bigpayToken","isMatch","getInstruments","flatMap","getDeleteError","createFormSelector","getShippingAddressFields","selectedCountry","formFields","shippingAddressFields","field","processField","getBillingAddressFields","billingAddressFields","label","fieldType","itemtype","subdivisions","requiresState","hasPostalCodes","createFormSelectorFactory","createPaymentMethodSelector","getPaymentMethods","getPaymentMethodOrThrow","getLoadMethodError","createPaymentStrategySelector","getExecuteError","getFinalizeError","getWidgetInteractingError","createRemoteCheckoutSelector","createShippingAddressSelector","createShippingCountrySelector","getShippingCountries","createShippingStrategySelector","getUpdateAddressError","getSelectOptionError","createConsignmentSelector","getConsignmentById","addressA","addressB","getCreateError","getLoadShippingOptionsError","loadShippingOptionsError","getUnassignedItems","assignedLineItemIds","itemIds","getItemAssignmentError","getUpdateShippingOptionError","isLoadingShippingOptions","isCreating","isAssigningItems","createConsignmentSelectorFactory","createCheckoutSelector","getCheckoutOrThrow","getOutstandingBalance","useStoreCredit","outstandingBalance","isExecutingSpamCheck","createOrderSelector","getOrderOrThrow","createPaymentSelector","providerType","internalPayment","redirectUrl","nonce","createStoreCreditSelector","applyError","checkoutButton","customerStrategies","form","paymentStrategies","remoteCheckout","shippingCountries","shippingStrategies","selectors","shouldWarnMutation","createCheckoutStore","initialState","requestErrorFactory","factory","actionTransformer","action$","every","createInternalCheckoutSelectors","createDataStore","stateTransformer","CheckoutIncludes","PhysicalItemsCategoryNames","DigitalItemsCategoryNames","mapToInternalGiftCertificate","targetOrigin","_targetWindow","_targetOrigin","event","fromEvent","successType","errorType","take","postMessage","setTarget","sourceOrigin","_sourceOrigin","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","removeListener","trigger","selectorDecorator","resolver","memoizedMethod","cachedValue","getUsedCount","cache","getKey","_checkoutButton","getInitializeButtonError","getDeinitializeButtonError","CheckoutButtonErrorSelector","isInitializingButton","isDeinitializingButton","CheckoutButtonStatusSelector","createCheckoutButtonSelectors","CheckoutButtonMethodType","C","_store","_buttonStrategyActionCreator","_state","filters","initializeButton","containerIds","selector","idPrefix","containers","querySelectorAll","container","u","uniqueId","queueId","dispatch","deinitializeButton","deinitialize","CheckoutButtonInitializer","_registry","_paymentMethodActionCreator","loadPaypalCommerce","clientId","kebabCase","scriptSrc","BRAINTREE_PAYPAL","BRAINTREE_PAYPAL_CREDIT","GOOGLEPAY_BRAINTREE","GOOGLEPAY_STRIPE","MASTERPASS","PAYPALEXPRESS","PAYPALCOMMERCE","_checkoutActionCreator","_braintreeSDKCreator","_paypalScriptLoader","_formPoster","_offerCredit","paypalOptions","braintreepaypalcredit","_paymentMethod","allowedSources","disallowedSources","allowCredit","FUNDING","CREDIT","Button","render","env","testMode","commit","shouldProcessPayment","funding","allowed","disallowed","style","shape","_setupPayment","onPaymentError","onAuthorize","_tokenizePayment","onAuthorizeError","onError","createPayment","flow","enableShippingAddress","shippingAddressEditable","shippingAddressOverride","_mapToBraintreeAddress","offerCredit","tokenizePayment","postForm","payment_type","device_data","shipping_address","JSON","stringify","_mapToLegacyShippingAddress","billing_address","_mapToLegacyBillingAddress","details","recipientName","first_name","last_name","phone_number","address_line_1","line1","address_line_2","line2","country_code","postal_code","_googlePayPaymentProcessor","_methodId","_getMethodId","_walletButton","_createSignInButton","parentNode","removeChild","getElementById","googlePayButton","createButton","_handleWalletButtonClick","appendChild","preventDefault","displayWallet","handleSuccess","updateShippingAddress","_onPaymentSelectComplete","_onError","_masterpassScriptLoader","load","masterpass","_masterpassClient","_signInButton","buttonContainer","button","src","_createMasterpassPayload","allowedCardTypes","cartAmount","cartId","suppressShippingAddress","_host","merchantId","actions","res","paymentID","payerID","paymentId","payerId","payerInfo","payer","payer_info","paramsScript","intent","isPayPalCreditAvailable","disableFunding","Buttons","createOrder","onApprove","orderID","order_id","createCheckoutButtonInitializer","host","requestSender","createRequestSender","formPoster","createFormPoster","registry","scriptLoader","getScriptLoader","checkoutActionCreator","NotEmbeddableErrorType","MissingContainer","MissingContent","UnknownError","_iframeCreator","_messageListener","_messagePoster","_loadingIndicator","_storage","_location","_options","_isAttached","onComplete","onLoad","onFrameLoad","onSignOut","_configureStyles","attach","show","_allowCookie","_attemptLogin","createFrame","iframe","_iframe","hide","_retryAllowCookie","detach","iFrameResizer","close","contentWindow","styles","getItem","setItem","now","encodeURIComponent","visibility","lastAttempt","Number","removeItem","EmbeddedCheckout","DEFAULT_STYLES","size","color","backgroundColor","ROTATION_ANIMATION","_styles","_defineAnimation","_container","_buildContainer","_indicator","_buildIndicator","parentId","opacity","handleTransitionEnd","display","bottom","left","height","width","position","right","top","transition","indicator","borderRadius","border","borderColor","margin","transformStyle","animation","head","sheet","CSSStyleSheet","insertRule","allowPaymentRequest","_toResizableFrame","timeoutInterval","setTimeout","handleMessage","contentId","iframes","scrolling","sizeWidth","heightCalculationMethod","clearTimeout","STORAGE_PREFIX","embedCheckout","loadingIndicator","isTerminalCacheKeyMap","_lastId","_map","maps","_usedMaps","maxSize","onExpire","noop","_resolveMap","parentMap","usedCount","_generateMap","_removeLeastUsedMap","isMatched","mapIndex","unshift","terminalMap","recentlyUsedMap","_removeMap","mapFromPaymentErrorResponse","_configRequestSender","DEFAULT_PARAMS","createAddress","_factories","_instances","defaultToken","cacheToken","_getInstance","_hasFactory","_hasInstance","hasShippingAddress","googleBraintreePaymentInstance","_googlePaymentInstance","_createGooglePayPayload","parseResponse","parse","paymentMethodData","tokenizationData","androidPayCards","cardType","lastFour","lastTwo","binData","platformToken","googlePayBraintreePaymentDataRequest","merchantInfo","authJwt","merchantName","googleMerchantName","googleMerchantId","transactionInfo","currencyCode","totalPriceStatus","totalPrice","toFixed","cardRequirements","billingAddressRequired","billingAddressFormat","shippingAddressRequired","emailRequired","phoneNumberRequired","_mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2","createPaymentDataRequest","googlePayBraintreeDataRequestV1","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","billingAddressParameters","tokenizationSpecification","paymentMethodTokenizationParameters","shippingAddressParameters","_mapGooglePayStripeDataRequestToGooglePayDataRequestV2","last4","stripeVersion","stripePublishableKey","fieldErrors","_namespace","rawValue","withNamespace","getItemOnce","iframeResizer","setupContentWindowForIframeResizer","clearError","getEnvironment","process","isEnabled","_console","log","_logToConsole","messages","debug","logger","getDefaultLogger","_couponRequestSender","applyCoupon","removeCoupon","couponCode","_giftCertificateRequestSender","applyGiftCertificate","removeGiftCertificate","giftCertificateCode","_strategyRegistry","signIn","signOut","widgetInteraction","loadWidget","onPaymentReady","region","toLowerCase","_configureWidget","onLoginReady","amazon","Login","setClientId","setUseCookie","onAmazonLoginReady","OffAmazonPayments","onAmazonPaymentsReady","createInitOptions","settings","locale","collectShipping","paymentRequest","String","braintreeVisaCheckout","tokenize","tokenizedPayload","_postForm","userData","userEmail","card_information","_getCardInformation","cardInformation","_getAddress","_toVisaCheckoutAddress","phoneNumber","streetAddress","extendedAddress","locality","number","createBraintreeVisaCheckoutPaymentProcessor","braintreeScriptLoader","braintreeSDKCreator","B","PaymentStrategyType","V","JPMC","initializeBilling","methodName","initializeShipping","initializePayment","loadSettings","generateToken","trackAuthorizationEvent","_remoteCheckoutRequestSender","_customerRequestSender","switchMap","_remoteCheckoutActionCreator","amazonOptions","useAmazonAddressBook","_handleAuthorization","authorize","popup","scope","tokenPrefix","_customerStrategyActionCreator","_braintreeVisaCheckoutPaymentProcessor","_visaCheckoutScriptLoader","_buttonClassName","braintreevisacheckout","visaCheckoutOptions","initOptions","storeLanguage","signInButton","init","paymentSuccessPayload","_paymentInstrumentSelected","buttonClass","querySelector","_insertVisaCheckoutButton","visaCheckoutButton","className","innerHTML","_chasePayScriptLoader","chasepay","chasePayOptions","digitalSessionId","ChasePay","configure","language","isChasePayUp","insertButtons","EventType","START_CHECKOUT","sessionId","startCheckout","COMPLETE_CHECKOUT","requestId","merchantRequestId","_setExternalCheckoutData","_reloadPage","sessionToken","sendRequest","fromChasePay","_customerActionCreator","googlePayOptions","_getGooglePayOptions","googlepaybraintree","googlepaystripe","masterpassOptions","Masterpass","_countryRequestSender","loadCountries","_config","loadOrder","submitOrder","finalizeOrder","_orderRequestSender","_checkoutValidator","loadOrderPayments","loadCurrentOrder","_getCurrentOrderId","shouldExecuteSpamCheck","validate","_mapToOrderRequestBody","customerMessage","ADYENV2","AFFIRM","AFTERPAY","AMAZON","BLUESNAPV2","CREDIT_CARD","CYBERSOURCE","KLARNA","KLARNAV2","LEGACY","OFFSITE","PAYPAL","PAYPAL_EXPRESS","PAYPAL_EXPRESS_CREDIT","PAYPAL_COMMERCE","SAGE_PAY","SQUARE","STRIPEV3","NO_PAYMENT_DATA_REQUIRED","BRAINTREE","BRAINTREE_VISA_CHECKOUT","BRAINTREE_GOOGLE_PAY","CHASE_PAY","WE_PAY","STRIPE_GOOGLE_PAY","ZIP","CONVERGE","_orderActionCreator","_spamProtectionActionCreator","execute","strategy","getByMethod","finalize","_loadOrderPaymentsIfNeeded","cartA","cartB","_normalize","sort","itemA","itemB","localeCompare","giftWrapping","comparator","_compareCoupons","_compareGiftCertificates","couponsA","couponsB","giftCertificatesA","giftCertificatesB","formId","_type","_containerId","_placeholder","_accessibilityLabel","_eventPoster","_eventListener","_cardInstrument","overflow","getType","accessibilityLabel","cardInstrument","fontUrls","_getFontUrls","placeholder","_isAttachErrorEvent","_handleAttachErrorEvent","parentElement","submitForm","fields","_isSubmitErrorEvent","validateForm","isValid","lastRetry","links","fontFamily","family","_fields","_payloadTransformer","eventCallbacks","onBlur","onCardTypeChange","onFocus","onValidate","_cardType","_bin","bin","getBin","getCardType","_getFirstField","otherFields","without","otherField","submit","fieldOptions","_getCardInstrument","_googleRecaptcha","spamProtectionElementId","spamProtectionElement","setAttribute","recaptchaSitekey","checkoutSettings","googleRecaptchaSitekey","_storeCreditRequestSender","applyStoreCredit","removeStoreCredit","a","_paymentRequestSender","_paymentRequestTransformer","shouldSaveInstrument","promise","vault_payment_instrument","race","_getToken","_hasFactoryForMethod","_isLegacyMethod","clientSidePaymentProviders","getBrowserInfo","color_depth","screen","colorDepth","java_enabled","navigator","javaEnabled","userLanguage","screen_height","screen_width","time_zone_offset","getTimezoneOffset","AdyenComponentType","ResultCode","AdyenHTTPMethod","AdyenPaymentMethodType","AdyenActionType","invalidFields","ThreeDS2DeviceFingerprint","ThreeDS2Challenge","SecuredFields","IDEAL","AuthenticationFinished","Authorised","Cancelled","ChallengeShopper","IdentifyShopper","Pending","Received","RedirectShopper","Refused","GET","POST","Scheme","BCMC","Giropay","ThreeDS2Fingerprint","Redirect","QRCode","Voucher","OrderIncludes","_paymentActionCreator","_adyenV2ScriptLoader","_locale","adyenv2","_adyenv2","configuration","environment","originKey","paymentMethodsResponse","adyenCheckout","_adyenCheckout","adyenPaymentComponent","onChange","_updateAdyenComponentState","mount","_adyenPaymentComponent","cardVerificationContainerId","adyenCardVerificationComponent","_adyenCardVerificationComponent","adyenComponentState","_adyenComponentState","encryptedCardNumber","encryptedSecurityCode","credit_card_number_confirmation","verification_value","browser_info","paymentPayload","credit_card_token","three_ds_result","_handle3DS2Fingerprint","_handle3DS2Challenge","_handleFromAction","provider_data","acs_url","PaReq","payer_auth_request","TermUrl","callback_url","MD","merchant_data","unmount","_getAdyenV2PaymentInitializeOptions","_getThreeDS2ChallengeWidgetSize","widgetSize","resultObject","paymentMethodId","onBeforeLoad","challengeComponent","challengeToken","challengeData","challengePaymentPayload","payment_data","threeDS2ContainerId","additionalActionOptions","additionalAction","adyenAction","additionalActionComponent","createFromAction","fingerprintComponent","fingerprintToken","fingerprintData","fingerprintPaymentPayload","newState","_stylesheetLoader","loadStylesheet","AdyenCheckout","DigitalItemsCategories","PhysicalItemsCategories","_affirmScriptLoader","publicKey","affirm","_affirm","requestOptions","_getCheckoutInformation","open","onFail","failObject","reason","onSuccess","successObject","ui","checkout_token","_getBillingAddress","merchant","user_confirmation_url","checkoutLink","user_cancel_url","user_confirmation_url_action","_getShippingAddress","_getItems","metadata","shipping_type","_getShippingType","platform_type","platform_version","platform_affirm","discounts","_getDiscounts","shipping_amount","tax_amount","total","first","full","zipcode","display_name","unit_price","qty","item_image_url","item_url","categories","_getCategories","line","discount_amount","discount_display_name","DISCOUNTED_AMOUNT","categoryTree","category","Function","apikey","scriptURI","_getScriptURI","_storeCreditActionCreator","_afterpayScriptLoader","storeCountryName","storeCountry","_mapCountryToISO2","_afterpaySdk","_redirectToAfterpay","countryName","redirect","AfterPay","isInternalAddressEqual","ignoredKeys","mapFromInternalAddress","CardinalInitializationType","CardinalEventType","CardinalValidatedAction","CardinalPaymentType","CardinalTriggerEvents","CardinalPaymentBrand","CardinalSignatureVerification","_billingAddressActionCreator","_isPaymentMethodSelected","_walletOptions","_createWallet","referenceId","_getOrderReferenceId","sellerId","_getMerchantId","is3dsEnabled","_processPaymentWith3ds","_getOrderReferenceIdFromInitializationData","orderReferenceId","onPaymentSelect","onReady","walletOptions","amazonOrderReferenceId","design","designMode","orderReference","_synchronizeBillingAddress","_updateOrderReference","widget","Widgets","Wallet","remoteAddress","internalBillingAddress","getAmazonOrderReferenceId","initConfirmationFlow","confirmationFlow","success","cancellable","cancel","orderRequest","_initializeOptions","frame","_createIframe","undefined","_element","_createElement","_registerClick","_unregisterClick","_removeAfterTransition","element","background","transitionDuration","zIndex","onClick","handeTransition","propertyName","_overlay","_threeDSecureOptions","preloadPaypal","tokenizeCard","requestData","_mapToCreditCard","creditCards","focusWindow","useraction","verifyCard","addFrame","removeFrame","cancelVerifyCard","verification","getSessionId","appendSessionId","processedPayment","creditCard","cardholderName","cvv","expirationDate","endpoint","_braintreePaymentProcessor","_is3dsEnabled","_handleError","_preparePaymentData","_isUsingVaulting","tokenizedCard","_credit","braintreeOptions","isVaultingEnabled","_formattedPayload","vaultPaymentInstrument","device_info","paypal_account","_paymentStrategyActionCreator","visaInitOptions","_cardinalClient","prepare","_getClientToken","start","hostedForm","iin","runBinProcess","getThreeDSecureData","_getOrderData","CardinalSignatureValidationErrors","Init","Complete","Confirm","SetupCompleted","Success","NoAction","Failure","CCA","Paypal","VisaCheckout","ApplePay","DiscoverWallet","BinProcess","Yes","No","ChasePayEventType","_isConfigured","_sdk","_getClientSDK","off","ActionCode","ErrorNumber","ErrorDescription","setup","jwt","binNumber","Status","threeDSecureData","orderData","Payment","ExtendedData","SignatureVerification","continueObject","AcsUrl","Payload","partialOrder","_mapToPartialOrder","continue","transactionId","consumer","BillingAddress","_mapToCardinalAddress","Account","_mapToCardinalAccount","Email1","ShippingAddress","Consumer","OrderDetails","OrderNumber","Amount","CurrencyCode","OrderChannel","TransactionId","AccountNumber","ExpirationMonth","ExpirationYear","NameOnAccount","CardCode","cardinalAddress","FirstName","LastName","Address1","City","State","PostalCode","CountryCode","Address2","Phone1","Cardinal","StartCheckout","CompleteCheckout","CancelCheckout","CardBrand","DigitalWalletType","_wepayRiskClient","_walletEvent$","walletButton","_configureWallet","_chasePayClient","_getPayment","_displayWallet","_createOrder","logoContainer","insertBrandings","onCancel","_setSessionToken","showLoadingAnimation","getRiskToken","riskToken","paymentCryptogram","cryptogramId","eci","btoa","reqTokenId","expDate","substr","accountNum","accountMask","extraData","_hostedFormFactory","_isHostedPaymentFormEnabled","_executeWithHostedForm","_executeWithoutHostedForm","formOptions","paymentSettings","bigpayBaseUrl","_hostedForm","isHostedPaymentFormEnabled","orderActionCreator","paymentActionCreator","hostedFormFactory","_threeDSecureFlow","_googlePayOptions","statusCode","_klarnaScriptLoader","_supportedEUCountries","klarnaCredit","_klarnaCredit","_loadWidget","_authorize","authorization_token","authorizationToken","klarna","client_token","_getUpdateSessionData","_mapToKlarnaAddress","klarnaAddress","street_address","given_name","family_name","street_address2","updateSessionData","approved","show_form","Klarna","Credit","_klarnav2ScriptLoader","klarnaPayments","_klarnaPayments","_loadPaymentsWidget","klarnav2","payment_method_category","_updateOrder","Payments","orderPayload","_shouldSubmitFullPayload","_useRedirectFlow","paypalexpress","useRedirectFlow","_isInContextEnabled","_paypalSdk","closeFlow","_isAcknowledgedOrFinalized","initXO","startFlow","americanExpress","discover","discoverDiners","JCB","masterCard","unionPay","unknown","visa","squareGift","applePay","none","_syncPaymentMethod","createSquareForm","_paymentForm","_getFormOptions","build","_getNonceInstrument","_getCountryCode","toUpperCase","_deferredRequestNonce","requestCardNonce","deferred","square","squareOptions","_squareOptions","callbacks","cardNonceResponseReceived","cardData","billingContact","shippingContact","digital_wallet_type","_handleWalletNonceResponse","_handleCardNonceResponse","createPaymentRequest","_paymentRequestPayload","methodsSupported","methods","_showPaymentMethods","paymentFormLoaded","_setPostalCode","unsupportedBrowserDetected","requestShippingAddress","requestBillingInfo","storeName","pending","setPostalCode","masterpassBtn","elementId","SqPaymentForm","_stripeScriptLoader","stripeOptions","stripeJs","_stripeV3Client","cardElement","elements","_cardElement","_getStripeJs","handleCardPayment","stripeResponse","paymentIntent","createPaymentMethod","_mapStripePaymentMethodOptions","stripePaymentMethod","stripeCardPaymentOptions","_mapStripeCardPaymentOptions","payment_method","_mapStripeBillingAddress","_mapStripeShippingAddress","_mapStripeBillingDetails","stripeBillingDetails","_mapStripeShippingDetails","stripeShippingDetails","_getCustomer","shippingDetails","receipt_email","save_payment_method","billing_details","publishableKey","Stripe","betas","_riskClient","WePay","risk","generate_risk_token","get_risk_token","payloadWithToken","_zipScriptLoader","zip","_zipClient","zipClient","Checkout","_prepareForReferredRegistration","onCheckout","openModal","externalId","Zip","ProjectionActionType","_instrumentRequestSender","loadInstruments","session","_getSessionContext","_getCurrentAccessToken","_getValidAccessToken","currentToken","deleteInstrument","_isValidVaultAccessToken","date","valueOf","vaultAccessExpiry","newDate","setMinutes","getMinutes","getVaultAccessToken","storeId","transformResponse","_transformVaultedInstruments","vaulted_instruments","transformErrorResponse","transformVaultAccessResponse","expires_at","method_type","defaultInstrument","default_instrument","external_id","trustedShippingAddress","trusted_shipping_address","last_4","expiryMonth","expiry_month","expiryYear","expiry_year","_transformer","requestContext","_loadInstrumentsWithAddress","_loadInstruments","deleteShopperInstrument","loadInstrumentsWithAddress","_shippingCountryRequestSender","selectOption","mergedOptions","_consignmentActionCreator","_createAddressBook","updateAddressRequestBody","optionId","onAddressSelect","AddressBook","_synchronizeShippingAddress","callback","MutationObserver","googleRecaptchaScriptLoader","mutationObserverFactory","_memoized","recaptcha","sitekey","event$","getResponse","reset","b","_event$","_recaptcha","retryWhen","delay","_watchRecaptchaChallengeWindow","iframeContainer","observe","attributeFilter","_loadPromise","_loadScript","grecaptcha","Synchronize","cloneDeep","input","cloneDeepSafe","cloneResult","createShallowEqualSelector","createSelectorCreator","defaultMemoize","createCheckoutSelectorsFactory","getShippingOptions","getSelectedShippingOption","getBillingCountries","getSelectedPaymentMethod","getError","getSelectShippingOptionError","isPending","isSelectingShippingOption","isCustomerStepPending","isPaymentStepPending","isSubmittingOrder","createCheckoutStoreSelector","cr","availableShippingOptions","val","createCheckoutStoreErrorSelector","getLoadCheckoutError","getUpdateCheckoutError","getSubmitOrderError","getFinalizeOrderError","getLoadOrderError","getLoadCartError","getLoadBillingCountriesError","getLoadShippingCountriesError","getLoadPaymentMethodsError","getLoadPaymentMethodError","getInitializePaymentError","getInitializeCustomerError","getUpdateBillingAddressError","getUpdateShippingAddressError","getDeleteConsignmentError","getUpdateConsignmentError","getCreateConsignmentsError","getInitializeShippingError","getApplyStoreCreditError","getApplyCouponError","getRemoveCouponError","getApplyGiftCertificateError","getRemoveGiftCertificateError","getLoadInstrumentsError","getDeleteInstrumentError","getLoadConfigError","createCheckoutStoreStatusSelector","isLoadingCheckout","isUpdatingCheckout","isFinalizingOrder","isLoadingOrder","isLoadingCart","isLoadingBillingCountries","isLoadingShippingCountries","isLoadingPaymentMethods","isLoadingPaymentMethod","isInitializingPayment","isInitializingCustomer","isUpdatingBillingAddress","isUpdatingShippingAddress","isUpdatingConsignment","isDeletingConsignment","isCreatingConsignments","isInitializingShipping","isApplyingStoreCredit","isLoadingInstruments","isDeletingInstrument","isLoadingConfig","_messageCustomizer","trim","_countryActionCreator","_couponActionCreator","_errorActionCreator","_giftCertificateActionCreator","_instrumentActionCreator","_shippingCountryActionCreator","_shippingStrategyActionCreator","isDevelopment","projection","_errorTransformer","_selectorsFactory","_storeProjection","initial","notifyState","_dispatch","loadCheckoutAction","loadConfigAction","finalizeOrderIfNeeded","deinitializePayment","loadBillingCountries","loadShippingCountries","loadBillingAddressFields","loadShippingAddressFields","initializeCustomer","deinitializeCustomer","continueAsGuest","deinitializeShipping","assignItemsToAddress","unassignItemsToAddress","selectConsignmentShippingOption","updateBillingAddress","initializeSpamProtection","executeSpamCheck","CheckoutService","createCheckoutService","paymentClient","setHost","orderRequestSender","checkoutRequestSender","configActionCreator","spamProtection","createScriptLoader","MutationObserverFactory","spamProtectionRequestSender","spamProtectionActionCreator","paymentMethodActionCreator","remoteCheckoutRequestSender","remoteCheckoutActionCreator","paymentRequestTransformer","paymentRequestSender","billingAddressActionCreator","braintreePaymentProcessor","overlay","checkoutValidator","storeCreditActionCreator","paymentStrategyActionCreator","getStylesheetLoader","createPaymentStrategyRegistry","consignmentRequestSender","consignmentActionCreator","handleFrameLoadedEvent","hasAttribute","isCustomError","_untargetedMessagePoster","_messageHandlers","postComplete","_postMessage","postError","_transformError","postFrameError","untargeted","postFrameLoaded","postLoaded","postSignedOut","receiveStyles","handler","_notifyMessageHandlers","IframeEmbeddedCheckoutMessenger","NoopEmbeddedCheckoutMessenger","createEmbeddedCheckoutMessenger","parentWindow","parentOrigin","_logger","locales","translations","_locales","_translations","_formatters","mapKeys","translationKey","KEY_PREFIX","getLocale","_hasTranslations","translate","prefixedKey","messageFormat","compile","_transformData","_transformConfig","defaultTranslations","_flattenObject","union","parentKey","resultKey","LanguageService","createLanguageService","currencySettings","symbolLocation","symbol","thousandsSeparator","decimalSeparator","parseInt","_symbolLocation","_symbol","_thousandsSeparator","_decimalSeparator","formattedNumber","_formatNumber","formattedCurrency","_formatCurrency","positiveAmount","abs","decimalAmount","parsedIntegerAmount","_toFixed","precision","_storeConfig","_customerFormatter","shopperCurrency","_storeFormatter","toCustomerCurrency","exchangeRate","toStoreCurrency","CurrencyService","createCurrencyService","AnalyticStepId","CUSTOMER","SHIPPING","BILLING","PAYMENT","ANALYTIC_STEPS","checkoutService","storage","analytics","checkoutSteps","_checkoutStarted","_completedSteps","_viewedSteps","_analyticStepOrder","trackCheckoutStarted","extraItemsData","saveExtraItemsData","track","getTrackingPayload","revenue","tax","trackOrderComplete","readExtraItemsData","clearExtraItemData","trackStepViewed","stepId","getIdFromStep","hasStepViewed","trackViewed","backfill","trackStepCompleted","hasStepCompleted","trackCompleted","shippingMethod","getPaymentMethodName","shippingMethodId","completedStepId","affiliation","toShopperCurrency","products","getProducts","getShopperCurrency","getStoreProfile","getStorageKey","ORDER_ITEMS_STORAGE_KEY","itemsData","product_id","giftCertificateItems","physicalAndDigitalItems","itemAttributes","image_url","variant","createStepTracker","stepTrackerConfig","isAnalyticsEnabled","ButtonType","ButtonColor","Long","Short","Default","Black","White","_googlePayScriptLoader","_googlePayInitializer","_consigmentActionCreator","buttonType","buttonColor","_googlePayClient","loadPaymentData","_getPaymentDataRequest","_updateBillingAddress","_mapGooglePayAddressToShippingAddress","googlePay","paymentDataRequest","_getGooglePayClient","_paymentDataRequest","isReadyToPay","google","api","PaymentsClient","_mapGooglePayAddressToBillingAddress","companyName","address3","administrativeArea","postPaymentData","remoteBillingAddress","googlePayAddressMapped","createGooglePayPaymentProcessor","initializer","billingAddressRequestBody","existingBillingAddressRequestBody","_createOrUpdateBillingAddress","_updateCustomerConsent","marketingEmailConsent","acceptsMarketing","scheduler","schedule","emptyScheduled","scheduled","FilterOperator","FilterSubscriber","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","connectableObservableDescriptor","work","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","_execute","errored","errorValue","Action","SchedulerAction","Scheduler","delegate","active","shift","scheduleArray","subscribeToArray","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","EmptyErrorImpl","EmptyError","getSymbolIterator","iterator","$$iterator","mergeMap","resultSelector","concurrent","POSITIVE_INFINITY","ii","MergeMapOperator","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscription","subscribeToResult","defaultValue","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","isEmpty","_enable_super_gross_mode_that_will_cause_bad_things","ObjectUnsubscribedErrorImpl","NotificationKind","kind","hasValue","do","accept","nextOrObserver","toObservable","createNext","Notification","undefinedValueNotification","createComplete","completeNotification","isScheduler","fromArray","hasNext","AsyncSubject","concatAll","observables","parseFloat","ThrowIfEmptyOperator","ThrowIfEmptySubscriber","defaultErrorFactory","accumulator","seed","scan","takeLast","defaultIfEmpty","acc","_delay","_resolve","_promise","_timeoutToken","random","$$rxSubscriber","fns","prev","RefCountOperator","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","bufferSize","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","ObserveOnSubscriber","queue","eventsCount","spliceCount","time","ReplaySubject","NONE","CombineLatestOperator","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","apply","subscribeToObservable","isArrayLike","isPromise","subscribeToPromise","subscribeToIterable","observableFactory","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","done","_tryresultSelector","nextResult","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","ring","idx","hasSeed","ScanOperator","ScanSubscriber","_seed","SwitchMapOperator","SwitchMapSubscriber","predicateFn","PaymentMethodIdMapper","MULTI_OPTION","BRAINTREE_VISACHECKOUT","BRAINTREE_GOOGLEPAY","isBraintreePaymentMethod","UrlHelper","RequestSender","requestFactory","payloadTransformer","RequestFactory","PayloadTransformer","DEFAULT_OPTIONS","xhr","createRequest","fromResponse","isSuccessfulRequest","toRequest","send","DELETE","_requestFactory","_cookie","_mergeDefaultOptions","_prependHost","requestHandler","toResponse","onload","onerror","onabort","ontimeout","abort","toRequestBody","patch","defaultOptions","csrfToken","reducer","_reducer","equalityCheck","shallowEqual","_state$","BehaviorSubject","_notification$","_dispatchers","_dispatchQueue$","_errors","dispatcher$","concatMap","states","_transformStates","transformedState","getValue","distinctUntilChanged","stateA","stateB","_dispatchObservableAction","_dispatchThunkAction","_dispatchAction","state$","filterFn","skip","previousValue","_getDispatchError","error$","transformedAction$","_getDispatcher","tap","thunkAction","isFrozen","freeze","reducers","currentState","assign","UnsubscriptionErrorImpl","connectableProto","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable","writable","subscriberIndex","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","Map","group","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","clear","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","_value","QueueScheduler","QueueAction","ObserveOnOperator","arg","notification","scheduleMessage","ObserveOnMessage","asap","AsapScheduler","AsapAction","TimeoutErrorImpl","TimeoutError","mergeAll","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","NEVER","pred","notPred","RaceOperator","RaceSubscriber","hasFirst","period","dueTime","periodOrScheduler","isNumeric","due","AuditOperator","AuditSubscriber","throttled","clearThrottle","isNaN","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","FindValueOperator","yieldIndex","FindValueSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasValue","_sendValue","_throttled","throttle","tryDurationSelector","throttlingDone","withObservable","absoluteTimeout","isDate","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","_browserSupport","_scripts","_preloadedScripts","script","onreadystatechange","loadScripts","urls","preloadScript","prefetch","rel","canSupportRel","preloadedScript","as","preloadScripts","relList","supports","_stylesheets","_preloadedStylesheets","stylesheet","prepend","children","insertBefore","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","_formBuilder","handleUnload","isAbsoluteUrl","joinPaths","API","APPLICATION_JSON","cookie","JSON_CONTENT_TYPE_REGEXP","FORM_URLENCODED_CONTENT_TYPE_REGEXP","contentType","_getHeader","_parseResponseHeaders","getAllResponseHeaders","_parseResponseBody","responseText","rawHeaders","parts","XMLHttpRequest","_configureRequest","_formatUrl","_configureRequestHeaders","withCredentials","setRequestHeader","queryString","strictUriEncode","objectAssign","decodeComponent","encode","opts","strict","extract","str","queryStart","formatter","arrayFormat","exec","parserForArrayFormat","ret","keysSorter","obj","encoderForArrayFormat","val2","query","flowRight","curryRight","animationFrame","VirtualTimeScheduler","VirtualAction","isObservable","bindCallback","bindNodeCallback","combineLatest","forkJoin","fromEventPattern","generate","iif","interval","never","onErrorResumeNext","pairs","partition","range","timer","using","Immediate","setImmediate","clearImmediate","nextHandle","RESOLVED","activeHandles","findAndClearHandle","handle","cb","TestTools","AnimationFrameScheduler","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","maxFrames","frameTimeFactor","sortActions","callbackFunc","innerArgs","dispatchNext","dispatchError","iterable","return","obs","forkJoinInternal","sources","completed","emitted","eventName","setupSubscription","sourceObj","isEventTarget","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","addHandler","removeHandler","retValue","condition","needIterate","iterate","conditionResult","initialStateOrOptions","resultSelectorOrObservable","trueResult","falseResult","counter","subNext","remainder","not","current","resourceFactory","resource","memoized","isRootCacheKeyMap","audit","auditTime","bufferCount","bufferTime","bufferToggle","bufferWhen","combineAll","concatMapTo","debounce","debounceTime","delayWhen","dematerialize","distinct","distinctUntilKeyChanged","elementAt","endWith","exhaust","exhaustMap","expand","groupBy","ignoreElements","mapTo","materialize","mergeMapTo","mergeScan","min","multicast","observeOn","pairwise","pluck","publish","publishBehavior","publishLast","publishReplay","repeat","repeatWhen","retry","sample","sampleTime","sequenceEqual","share","single","skipLast","skipUntil","skipWhile","startWith","subscribeOn","switchAll","switchMapTo","takeUntil","takeWhile","throttleTime","throwIfEmpty","timeInterval","timeoutWith","timestamp","toArray","windowCount","windowToggle","windowWhen","withLatestFrom","zipAll","closingNotifier","BufferOperator","BufferSubscriber","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","BufferTimeSubscriber","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","Context","prevContext","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CatchOperator","caught","CatchSubscriber","err2","innerObservable","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","emitValue","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","delayFor","DelayOperator","DelaySubscriber","_schedule","scheduleNotification","DelayMessage","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","flushes","DistinctOperator","DistinctSubscriber","Set","_useKeySelector","_finalizeNext","has","hasDefaultValue","v","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","ExhaustMapOperator","ExhaustMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","FinallyOperator","FinallySubscriber","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","comparer","MergeScanOperator","MergeScanSubscriber","nextSources","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","pair","properties","props","currentProp","plucker","selectorOrScheduler","RepeatOperator","RepeatSubscriber","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","compareTo","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","completeB","shareSubjectFactory","configOrBufferSize","useRefCount","shareReplayOperator","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SubscribeOnObservable","delayTime","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","TimeInterval","Timestamp","toArrayReducer","arr","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","CountedSubject","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","inner","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","instance","formBuilder","_createInput","pathA","pathB","path","removeLeadingSlash","createClient","Client","paymentSubmitter","offsitePaymentInitializer","clientTokenGenerator","storeRequestSender","clientConfig","DEFAULT_CONFIG","OffsitePaymentInitializer","PaymentSubmitter","ClientTokenGenerator","StoreRequestSender","generateClientToken","urlHelper","payloadMapper","PayloadMapper","mapToPayload","getOffsitePaymentUrl","addressMapper","customerMapper","metaMapper","paymentMethodIdMapper","storeMapper","AddressMapper","CustomerMapper","MetaMapper","StoreMapper","bc_auth_token","mapToId","notify_url","page_title","payment_method_id","reference_id","return_url","mapToBillingAddress","mapToCustomer","mapToMeta","mapToShippingAddress","mapToStore","omitNil","isEmptyStringOrNil","isNil","string","mapToAddress","addressKey","formattedAddressKey","toSnakeCase","customer_browser_info","userAgent","customer_email","customer_first_name","customer_geo_ip_country_code","customer_id","customer_last_name","customer_locale","customer_name","customer_phone","customer_reference","meta_referrer","referrer","meta_source","meta_user_agent","store_hash","storeHash","store_id","getPaymentUrl","mapToHeaders","postRequest","orderMapper","paymentMapper","OrderMapper","PaymentMapper","mapToOrder","mapToPayment","Authorization","customer_group","geo_ip_country_code","session_token","mapToCoupons","mapToItems","mapToShipping","totals","mapToOrderTotals","omitEmptyStringAndNil","transit_time","state_code","street_1","street_2","itemData","variant_id","grand_total","device","deviceFingerprint","fingerprint_id","mapToBigPayToken","credit_card_cryptogram","mapToCryptogram","credit_card","mapToCreditCard","account_name","toNumber","customer_code","ccCustomerCode","three_d_secure","payment_cryptogram","xid","account_mask","parseResponseHeaders","getResponseHeader","setOptions","setHeaders","clientTokenMapper","ClientTokenMapper","getGenerateClientTokenUrl","mapToClientToken","cartMapper","gatewayMapper","quoteMapper","CartMapper","GatewayMapper","QuoteMapper","mapToCart","mapToGateway","quote","mapToQuote","currency_code","integerTax","mapToType","discount_total","shipping_total","surcharge_total","tax_total","ItemPhysicalEntity","ItemDigitalEntity","ItemGiftCertificateEntity","mapToLocale","store_identity","mapToIdentity","mapToUrls","language_code","cartLink","confirmation","orderConfirmationLink","home","shopPath","getInstrumentsUrl","getTrustedShippingAddressUrl","mapToTrustedShippingAddressPayload","getInstrumentByIdUrl","mapToInstrumentPayload","providerName","cardholder_name","verification_code","verificationCode","issue_month","issueMonth","issue_year","issueYear","issue_number","issueNumber","track_data","trackData","is_manual_entry","isManualEntry","icc_data","iccData","fallback_reason","fallbackReason","is_contactless","isContactless","encrypted_pin_cryptogram","encryptedPinCryptogram","encrypted_pin_ksn","encryptedPinKsn"],"mappings":"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","file":"transients~checkout-a40baca8.js","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export { default as includes } from './includes';\nexport { default as isNil } from './is-nil';\nexport { default as isObject } from './is-object';\nexport { default as omitEmptyStringAndNil } from './omit-emptystring-and-nil';\nexport { default as omitNil } from './omit-nil';\nexport { default as omitProperty } from './omit-property';\nexport { default as toNumber } from './to-number';\nexport { default as toSnakeCase } from './to-snake-case';\nexport { default as toString } from './to-string';\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export { default as createFormPoster } from './create-form-poster';\nexport { default as FormPoster } from './form-poster';\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 172);\n","module.exports = require(\"tslib\");","module.exports = require(\"@bigcommerce/data-store\");","module.exports = require(\"lodash\");","module.exports = require(\"rxjs\");","module.exports = require(\"@bigcommerce/memoize\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nimport { ConsignmentMeta } from './consignment';\n\nexport enum ConsignmentActionType {\n    CreateConsignmentsRequested = 'CREATE_CONSIGNMENTS_REQUESTED',\n    CreateConsignmentsSucceeded = 'CREATE_CONSIGNMENTS_SUCCEEDED',\n    CreateConsignmentsFailed = 'CREATE_CONSIGNMENTS_FAILED',\n\n    UpdateConsignmentRequested = 'UPDATE_CONSIGNMENT_REQUESTED',\n    UpdateConsignmentSucceeded = 'UPDATE_CONSIGNMENT_SUCCEEDED',\n    UpdateConsignmentFailed = 'UPDATE_CONSIGNMENT_FAILED',\n\n    DeleteConsignmentRequested = 'DELETE_CONSIGNMENT_REQUESTED',\n    DeleteConsignmentSucceeded = 'DELETE_CONSIGNMENT_SUCCEEDED',\n    DeleteConsignmentFailed = 'DELETE_CONSIGNMENT_FAILED',\n\n    UpdateShippingOptionRequested = 'UPDATE_SHIPPING_OPTION_REQUESTED',\n    UpdateShippingOptionSucceeded = 'UPDATE_SHIPPING_OPTION_SUCCEEDED',\n    UpdateShippingOptionFailed = 'UPDATE_SHIPPING_OPTION_FAILED',\n\n    LoadShippingOptionsRequested = 'LOAD_SHIPPING_OPTIONS_REQUESTED',\n    LoadShippingOptionsSucceeded = 'LOAD_SHIPPING_OPTIONS_SUCCEEDED',\n    LoadShippingOptionsFailed = 'LOAD_SHIPPING_OPTIONS_FAILED',\n}\n\nexport type ConsignmentAction =\n    CreateConsignmentsAction |\n    UpdateConsignmentAction |\n    DeleteConsignmentAction |\n    UpdateShippingOptionAction |\n    LoadShippingOptionsAction;\n\nexport type CreateConsignmentsAction =\n    CreateConsignmentsRequestedAction |\n    CreateConsignmentsSucceededAction |\n    CreateConsignmentsFailedAction;\n\nexport type UpdateConsignmentAction =\n    UpdateConsignmentRequestedAction |\n    UpdateConsignmentSucceededAction |\n    UpdateConsignmentFailedAction;\n\nexport type DeleteConsignmentAction =\n    DeleteConsignmentRequestedAction |\n    DeleteConsignmentSucceededAction |\n    DeleteConsignmentFailedAction;\n\nexport type UpdateShippingOptionAction =\n    UpdateShippingOptionRequestedAction |\n    UpdateShippingOptionSucceededAction |\n    UpdateShippingOptionFailedAction;\n\nexport type LoadShippingOptionsAction =\n    LoadShippingOptionsRequestedAction |\n    LoadShippingOptionsSucceededAction |\n    LoadShippingOptionsFailedAction;\n\nexport interface CreateConsignmentsRequestedAction extends Action {\n    type: ConsignmentActionType.CreateConsignmentsRequested;\n}\n\nexport interface CreateConsignmentsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.CreateConsignmentsSucceeded;\n}\n\nexport interface CreateConsignmentsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.CreateConsignmentsFailed;\n}\n\nexport interface UpdateConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentRequested;\n}\n\nexport interface UpdateConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentSucceeded;\n}\n\nexport interface UpdateConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentFailed;\n}\n\nexport interface DeleteConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentRequested;\n}\n\nexport interface DeleteConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentSucceeded;\n}\n\nexport interface DeleteConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentFailed;\n}\n\nexport interface UpdateShippingOptionRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionRequested;\n}\n\nexport interface UpdateShippingOptionSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionSucceeded;\n}\n\nexport interface UpdateShippingOptionFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionFailed;\n}\n\nexport interface LoadShippingOptionsRequestedAction extends Action {\n    type: ConsignmentActionType.LoadShippingOptionsRequested;\n}\n\nexport interface LoadShippingOptionsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.LoadShippingOptionsSucceeded;\n}\n\nexport interface LoadShippingOptionsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.LoadShippingOptionsFailed;\n}\n","module.exports = require(\"rxjs/operators\");","import { Action } from '@bigcommerce/data-store';\n\nexport enum CustomerStrategyActionType {\n    SignInFailed = 'CUSTOMER_STRATEGY_SIGN_IN_FAILED',\n    SignInRequested = 'CUSTOMER_STRATEGY_SIGN_IN_REQUESTED',\n    SignInSucceeded = 'CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED',\n    SignOutFailed = 'CUSTOMER_STRATEGY_SIGN_OUT_FAILED',\n    SignOutRequested = 'CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED',\n    SignOutSucceeded = 'CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED',\n    InitializeFailed = 'CUSTOMER_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'CUSTOMER_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'CUSTOMER_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type CustomerStrategyAction =\n    CustomerStrategySignInAction |\n    CustomerStrategySignOutAction |\n    CustomerStrategyInitializeAction |\n    CustomerStrategyDeinitializeAction |\n    CustomerStrategyWidgetAction;\n\nexport type CustomerStrategySignInAction =\n    SignInRequestedAction |\n    SignInSucceededAction |\n    SignInFailedAction;\n\nexport type CustomerStrategySignOutAction =\n    SignOutRequestedAction |\n    SignOutSucceededAction |\n    SignOutFailedAction;\n\nexport type CustomerStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type CustomerStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type CustomerStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface SignInRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignInRequested;\n}\n\nexport interface SignInSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignInSucceeded;\n}\n\nexport interface SignInFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignInFailed;\n}\n\nexport interface SignOutRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignOutRequested;\n}\n\nexport interface SignOutSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignOutSucceeded;\n}\n\nexport interface SignOutFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignOutFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderPaymentsAction } from '../order';\n\nexport enum PaymentStrategyActionType {\n    ExecuteFailed = 'PAYMENT_STRATEGY_EXECUTE_FAILED',\n    ExecuteRequested = 'PAYMENT_STRATEGY_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'PAYMENT_STRATEGY_EXECUTE_SUCCEEDED',\n    FinalizeFailed = 'PAYMENT_STRATEGY_FINALIZE_FAILED',\n    FinalizeRequested = 'PAYMENT_STRATEGY_FINALIZE_REQUESTED',\n    FinalizeSucceeded = 'PAYMENT_STRATEGY_FINALIZE_SUCCEEDED',\n    InitializeFailed = 'PAYMENT_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'PAYMENT_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'PAYMENT_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type PaymentStrategyAction =\n    PaymentStrategyExecuteAction |\n    PaymentStrategyFinalizeAction |\n    PaymentStrategyInitializeAction |\n    PaymentStrategyDeinitializeAction |\n    PaymentStrategyWidgetAction;\n\nexport type PaymentStrategyExecuteAction =\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyFinalizeAction =\n    FinalizeRequestedAction |\n    FinalizeSucceededAction |\n    FinalizeFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type PaymentStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type PaymentStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface ExecuteRequestedAction extends Action {\n    type: PaymentStrategyActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action {\n    type: PaymentStrategyActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.ExecuteFailed;\n}\n\nexport interface FinalizeRequestedAction extends Action {\n    type: PaymentStrategyActionType.FinalizeRequested;\n}\n\nexport interface FinalizeSucceededAction extends Action {\n    type: PaymentStrategyActionType.FinalizeSucceeded;\n}\n\nexport interface FinalizeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.FinalizeFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.WidgetInteractionFailed;\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentInstrument,\n    MissingPaymentMethod,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ShippingStrategyActionType {\n    UpdateAddressFailed = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED',\n    UpdateAddressRequested = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED',\n    UpdateAddressSucceeded = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED',\n    SelectOptionFailed = 'SHIPPING_STRATEGY_SELECT_OPTION_FAILED',\n    SelectOptionRequested = 'SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED',\n    SelectOptionSucceeded = 'SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED',\n    InitializeFailed = 'SHIPPING_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'SHIPPING_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'SHIPPING_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED',\n}\n\nexport type ShippingStrategyAction =\n    ShippingStrategyUpdateAddressAction |\n    ShippingStrategySelectOptionAction |\n    ShippingStrategyInitializeAction |\n    ShippingStrategyDeinitializeAction;\n\nexport type ShippingStrategyUpdateAddressAction =\n    UpdateAddressRequestedAction |\n    UpdateAddressSucceededAction |\n    UpdateAddressFailedAction;\n\nexport type ShippingStrategySelectOptionAction =\n    SelectOptionRequestedAction |\n    SelectOptionSucceededAction |\n    SelectOptionFailedAction;\n\nexport type ShippingStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type ShippingStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport interface UpdateAddressRequestedAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressRequested;\n}\n\nexport interface UpdateAddressSucceededAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressSucceeded;\n}\n\nexport interface UpdateAddressFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.UpdateAddressFailed;\n}\n\nexport interface SelectOptionRequestedAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionRequested;\n}\n\nexport interface SelectOptionSucceededAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionSucceeded;\n}\n\nexport interface SelectOptionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.SelectOptionFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.DeinitializeFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadConfigAction } from '../config';\n\nimport Checkout from './checkout';\n\nexport enum CheckoutActionType {\n    LoadCheckoutRequested = 'LOAD_CHECKOUT_REQUESTED',\n    LoadCheckoutSucceeded = 'LOAD_CHECKOUT_SUCCEEDED',\n    LoadCheckoutFailed = 'LOAD_CHECKOUT_FAILED',\n\n    UpdateCheckoutRequested = 'UPDATE_CHECKOUT_REQUESTED',\n    UpdateCheckoutSucceeded = 'UPDATE_CHECKOUT_SUCCEEDED',\n    UpdateCheckoutFailed = 'UPDATE_CHECKOUT_FAILED',\n}\n\nexport type CheckoutAction = LoadCheckoutAction | UpdateCheckoutAction;\n\nexport type LoadCheckoutAction =\n    LoadCheckoutRequestedAction |\n    LoadCheckoutSucceededAction |\n    LoadCheckoutFailedAction |\n    LoadConfigAction;\n\nexport type UpdateCheckoutAction =\n    UpdateCheckoutRequestedAction |\n    UpdateCheckoutSucceededAction |\n    UpdateCheckoutFailedAction;\n\nexport interface LoadCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.LoadCheckoutRequested;\n}\n\nexport interface LoadCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.LoadCheckoutSucceeded;\n}\n\nexport interface LoadCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.LoadCheckoutFailed;\n}\n\nexport interface UpdateCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.UpdateCheckoutRequested;\n}\n\nexport interface UpdateCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.UpdateCheckoutSucceeded;\n}\n\nexport interface UpdateCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.UpdateCheckoutFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { InternalOrderResponseData } from './internal-order-responses';\nimport Order from './order';\n\nexport enum OrderActionType {\n    LoadOrderRequested = 'LOAD_ORDER_REQUESTED',\n    LoadOrderSucceeded = 'LOAD_ORDER_SUCCEEDED',\n    LoadOrderFailed = 'LOAD_ORDER_FAILED',\n\n    LoadOrderPaymentsRequested = 'LOAD_ORDER_PAYMENTS_REQUESTED',\n    LoadOrderPaymentsSucceeded = 'LOAD_ORDER_PAYMENTS_SUCCEEDED',\n    LoadOrderPaymentsFailed = 'LOAD_ORDER_PAYMENTS_FAILED',\n\n    SubmitOrderRequested = 'SUBMIT_ORDER_REQUESTED',\n    SubmitOrderSucceeded = 'SUBMIT_ORDER_SUCCEEDED',\n    SubmitOrderFailed = 'SUBMIT_ORDER_FAILED',\n\n    FinalizeOrderRequested = 'FINALIZE_ORDER_REQUESTED',\n    FinalizeOrderSucceeded = 'FINALIZE_ORDER_SUCCEEDED',\n    FinalizeOrderFailed = 'FINALIZE_ORDER_FAILED',\n}\n\nexport type OrderAction = LoadOrderAction |\n    LoadOrderPaymentsAction |\n    SubmitOrderAction |\n    FinalizeOrderAction;\n\nexport type LoadOrderPaymentsAction = LoadOrderPaymentsRequestedAction |\n    LoadOrderPaymentsSucceededAction |\n    LoadOrderPaymentsFailedAction;\n\nexport type LoadOrderAction =\n    LoadOrderRequestedAction |\n    LoadOrderSucceededAction |\n    LoadOrderFailedAction;\n\nexport type SubmitOrderAction =\n    SubmitOrderRequestedAction |\n    SubmitOrderSucceededAction |\n    SubmitOrderFailedAction |\n    LoadOrderAction;\n\nexport type FinalizeOrderAction =\n    FinalizeOrderRequestedAction |\n    FinalizeOrderSucceededAction |\n    FinalizeOrderFailedAction |\n    LoadOrderAction;\n\nexport interface LoadOrderRequestedAction extends Action {\n    type: OrderActionType.LoadOrderRequested;\n}\n\nexport interface LoadOrderSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderSucceeded;\n}\n\nexport interface LoadOrderFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderFailed;\n}\n\nexport interface LoadOrderPaymentsRequestedAction extends Action {\n    type: OrderActionType.LoadOrderPaymentsRequested;\n}\n\nexport interface LoadOrderPaymentsSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderPaymentsSucceeded;\n}\n\nexport interface LoadOrderPaymentsFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderPaymentsFailed;\n}\n\nexport interface SubmitOrderRequestedAction extends Action {\n    type: OrderActionType.SubmitOrderRequested;\n}\n\nexport interface SubmitOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.SubmitOrderSucceeded;\n}\n\nexport interface SubmitOrderFailedAction extends Action<Error> {\n    type: OrderActionType.SubmitOrderFailed;\n}\n\nexport interface FinalizeOrderRequestedAction extends Action {\n    type: OrderActionType.FinalizeOrderRequested;\n}\n\nexport interface FinalizeOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.FinalizeOrderSucceeded;\n}\n\nexport interface FinalizeOrderFailedAction extends Action<Error> {\n    type: OrderActionType.FinalizeOrderFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport enum PaymentMethodActionType {\n    LoadPaymentMethodRequested = 'LOAD_PAYMENT_METHOD_REQUESTED',\n    LoadPaymentMethodSucceeded = 'LOAD_PAYMENT_METHOD_SUCCEEDED',\n    LoadPaymentMethodFailed = 'LOAD_PAYMENT_METHOD_FAILED',\n\n    LoadPaymentMethodsRequested = 'LOAD_PAYMENT_METHODS_REQUESTED',\n    LoadPaymentMethodsSucceeded = 'LOAD_PAYMENT_METHODS_SUCCEEDED',\n    LoadPaymentMethodsFailed = 'LOAD_PAYMENT_METHODS_FAILED',\n}\n\nexport type PaymentMethodAction = LoadPaymentMethodAction | LoadPaymentMethodsAction;\n\nexport type LoadPaymentMethodAction =\n    LoadPaymentMethodRequestedAction |\n    LoadPaymentMethodSucceededAction |\n    LoadPaymentMethodFailedAction;\n\nexport type LoadPaymentMethodsAction =\n    LoadPaymentMethodsRequestedAction |\n    LoadPaymentMethodsSucceededAction |\n    LoadPaymentMethodsFailedAction;\n\nexport interface LoadPaymentMethodRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodRequested;\n}\n\nexport interface LoadPaymentMethodSucceededAction extends Action<PaymentMethod> {\n    type: PaymentMethodActionType.LoadPaymentMethodSucceeded;\n}\n\nexport interface LoadPaymentMethodFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodFailed;\n}\n\nexport interface LoadPaymentMethodsRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodsRequested;\n}\n\nexport interface LoadPaymentMethodsSucceededAction extends Action<PaymentMethod[], PaymentMethodMeta> {\n    type: PaymentMethodActionType.LoadPaymentMethodsSucceeded;\n}\n\nexport interface LoadPaymentMethodsFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodsFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum BillingAddressActionType {\n    UpdateBillingAddressRequested = 'UPDATE_BILLING_ADDRESS_REQUESTED',\n    UpdateBillingAddressSucceeded = 'UPDATE_BILLING_ADDRESS_SUCCEEDED',\n    UpdateBillingAddressFailed = 'UPDATE_BILLING_ADDRESS_FAILED',\n\n    ContinueAsGuestRequested = 'CONTINUE_AS_GUEST_REQUESTED',\n    ContinueAsGuestSucceeded = 'CONTINUE_AS_GUEST_SUCCEEDED',\n    ContinueAsGuestFailed = 'CONTINUE_AS_GUEST_FAILED',\n}\n\nexport type BillingAddressAction =\n    ContinueAsGuestAction |\n    UpdateBillingAddressAction;\n\nexport type UpdateBillingAddressAction =\n    UpdateBillingAddressRequested |\n    UpdateBillingAddressSucceeded |\n    UpdateBillingAddressFailed;\n\nexport type ContinueAsGuestAction =\n    ContinueAsGuestRequested |\n    ContinueAsGuestSucceeded |\n    ContinueAsGuestFailed;\n\nexport interface UpdateBillingAddressRequested extends Action {\n    type: BillingAddressActionType.UpdateBillingAddressRequested;\n}\n\nexport interface UpdateBillingAddressSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.UpdateBillingAddressSucceeded;\n}\n\nexport interface UpdateBillingAddressFailed extends Action<Error> {\n    type: BillingAddressActionType.UpdateBillingAddressFailed;\n}\n\nexport interface ContinueAsGuestRequested extends Action {\n    type: BillingAddressActionType.ContinueAsGuestRequested;\n}\n\nexport interface ContinueAsGuestSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.ContinueAsGuestSucceeded;\n}\n\nexport interface ContinueAsGuestFailed extends Action<Error> {\n    type: BillingAddressActionType.ContinueAsGuestFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadPaymentMethodAction } from '../payment';\n\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport enum CheckoutButtonActionType {\n    InitializeButtonFailed = 'INITIALIZE_BUTTON_FAILED',\n    InitializeButtonRequested = 'INITIALIZE_BUTTON_REQUESTED',\n    InitializeButtonSucceeded = 'INITIALIZE_BUTTON_SUCCEEDED',\n\n    DeinitializeButtonFailed = 'DEINITIALIZE_BUTTON_FAILED',\n    DeinitializeButtonRequested = 'DEINITIALIZE_BUTTON_REQUESTED',\n    DeinitializeButtonSucceeded = 'DEINITIALIZE_BUTTON_SUCCEEDED',\n}\n\nexport type CheckoutButtonAction = InitializeButtonAction | DeinitializeButtonAction;\n\nexport type InitializeButtonAction =\n    InitializeButtonRequestedAction |\n    InitializeButtonSucceededAction |\n    InitializeButtonFailedAction |\n    LoadPaymentMethodAction;\n\nexport type DeinitializeButtonAction =\n    DeinitializeButtonRequestedAction |\n    DeinitializeButtonSucceededAction |\n    DeinitializeButtonFailedAction;\n\nexport interface CheckoutButtonActionMeta {\n    methodId: CheckoutButtonMethodType;\n}\n\nexport interface InitializeButtonActionMeta extends CheckoutButtonActionMeta {\n    containerId: string;\n}\n\nexport interface InitializeButtonRequestedAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonRequested;\n}\n\nexport interface InitializeButtonSucceededAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonSucceeded;\n}\n\nexport interface InitializeButtonFailedAction extends Action<Error, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonFailed;\n}\n\nexport interface DeinitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonRequested;\n}\n\nexport interface DeinitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonSucceeded;\n}\n\nexport interface DeinitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum CouponActionType {\n    ApplyCouponRequested = 'APPLY_COUPON_REQUESTED',\n    ApplyCouponSucceeded = 'APPLY_COUPON_SUCCEEDED',\n    ApplyCouponFailed = 'APPLY_COUPON_FAILED',\n\n    RemoveCouponRequested = 'REMOVE_COUPON_REQUESTED',\n    RemoveCouponSucceeded = 'REMOVE_COUPON_SUCCEEDED',\n    RemoveCouponFailed = 'REMOVE_COUPON_FAILED',\n}\n\nexport type CouponAction =\n    ApplyCouponAction |\n    RemoveCouponAction;\n\nexport type ApplyCouponAction =\n    ApplyCouponRequestedAction |\n    ApplyCouponSucceededAction |\n    ApplyCouponFailedAction;\n\nexport type RemoveCouponAction =\n    RemoveCouponRequestedAction |\n    RemoveCouponSucceededAction |\n    RemoveCouponFailedAction;\n\nexport interface ApplyCouponRequestedAction extends Action {\n    type: CouponActionType.ApplyCouponRequested;\n}\n\nexport interface ApplyCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.ApplyCouponSucceeded;\n}\n\nexport interface ApplyCouponFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: CouponActionType.ApplyCouponFailed;\n}\n\nexport interface RemoveCouponRequestedAction extends Action {\n    type: CouponActionType.RemoveCouponRequested;\n}\n\nexport interface RemoveCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.RemoveCouponSucceeded;\n}\n\nexport interface RemoveCouponFailedAction extends Action<RequestError> {\n    type: CouponActionType.RemoveCouponFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody } from './instrument-response-body';\n\nexport enum InstrumentActionType {\n    LoadInstrumentsRequested = 'LOAD_INSTRUMENTS_REQUESTED',\n    LoadInstrumentsSucceeded = 'LOAD_INSTRUMENTS_SUCCEEDED',\n    LoadInstrumentsFailed = 'LOAD_INSTRUMENTS_FAILED',\n\n    DeleteInstrumentRequested = 'DELETE_INSTRUMENT_REQUESTED',\n    DeleteInstrumentSucceeded = 'DELETE_INSTRUMENT_SUCCEEDED',\n    DeleteInstrumentFailed = 'DELETE_INSTRUMENT_FAILED',\n}\n\nexport type InstrumentAction =\n    LoadInstrumentsAction |\n    DeleteInstrumentAction;\n\nexport type LoadInstrumentsAction =\n    LoadInstrumentsRequestedAction |\n    LoadInstrumentsSucceededAction |\n    LoadInstrumentsFailedAction;\n\nexport type DeleteInstrumentAction =\n    DeleteInstrumentRequestedAction |\n    DeleteInstrumentSucceededAction |\n    DeleteInstrumentFailedAction;\n\nexport interface LoadInstrumentsRequestedAction extends Action {\n    type: InstrumentActionType.LoadInstrumentsRequested;\n}\n\nexport interface LoadInstrumentsSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken> {\n    type: InstrumentActionType.LoadInstrumentsSucceeded;\n}\n\nexport interface LoadInstrumentsFailedAction extends Action<Error> {\n    type: InstrumentActionType.LoadInstrumentsFailed;\n}\n\nexport interface DeleteInstrumentRequestedAction extends Action {\n    type: InstrumentActionType.DeleteInstrumentRequested;\n}\n\nexport interface DeleteInstrumentSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken & { instrumentId: string }> {\n    type: InstrumentActionType.DeleteInstrumentSucceeded;\n}\n\nexport interface DeleteInstrumentFailedAction extends Action<Error> {\n    type: InstrumentActionType.DeleteInstrumentFailed;\n}\n","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum GiftCertificateActionType {\n    ApplyGiftCertificateRequested = 'APPLY_GIFT_CERTIFICATE_REQUESTED',\n    ApplyGiftCertificateSucceeded = 'APPLY_GIFT_CERTIFICATE_SUCCEEDED',\n    ApplyGiftCertificateFailed = 'APPLY_GIFT_CERTIFICATE_FAILED',\n\n    RemoveGiftCertificateRequested = 'REMOVE_GIFT_CERTIFICATE_REQUESTED',\n    RemoveGiftCertificateSucceeded = 'REMOVE_GIFT_CERTIFICATE_SUCCEEDED',\n    RemoveGiftCertificateFailed = 'REMOVE_GIFT_CERTIFICATE_FAILED',\n}\n\nexport type GiftCertificateAction =\n    ApplyGiftCertificateAction |\n    RemoveGiftCertificateAction;\n\nexport type ApplyGiftCertificateAction =\n    ApplyGiftCertificateRequestedAction |\n    ApplyGiftCertificateSucceededAction |\n    ApplyGiftCertificateFailedAction;\n\nexport type RemoveGiftCertificateAction =\n    RemoveGiftCertificateRequestedAction |\n    RemoveGiftCertificateSucceededAction |\n    RemoveGiftCertificateFailedAction;\n\nexport interface ApplyGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.ApplyGiftCertificateRequested;\n}\n\nexport interface ApplyGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.ApplyGiftCertificateSucceeded;\n}\n\nexport interface ApplyGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.ApplyGiftCertificateFailed;\n}\n\nexport interface RemoveGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.RemoveGiftCertificateRequested;\n}\n\nexport interface RemoveGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.RemoveGiftCertificateSucceeded;\n}\n\nexport interface RemoveGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.RemoveGiftCertificateFailed;\n}\n","import EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedContentOptions } from './iframe-content';\n\nexport enum EmbeddedCheckoutEventType {\n    CheckoutComplete = 'CHECKOUT_COMPLETE',\n    CheckoutError = 'CHECKOUT_ERROR',\n    CheckoutLoaded = 'CHECKOUT_LOADED',\n    FrameError = 'FRAME_ERROR',\n    FrameLoaded = 'FRAME_LOADED',\n    SignedOut = 'SIGNED_OUT',\n}\n\nexport interface EmbeddedCheckoutEventMap {\n    [EmbeddedCheckoutEventType.CheckoutComplete]: EmbeddedCheckoutCompleteEvent;\n    [EmbeddedCheckoutEventType.CheckoutError]: EmbeddedCheckoutErrorEvent;\n    [EmbeddedCheckoutEventType.CheckoutLoaded]: EmbeddedCheckoutLoadedEvent;\n    [EmbeddedCheckoutEventType.FrameError]: EmbeddedCheckoutFrameErrorEvent;\n    [EmbeddedCheckoutEventType.FrameLoaded]: EmbeddedCheckoutFrameLoadedEvent;\n    [EmbeddedCheckoutEventType.SignedOut]: EmbeddedCheckoutSignedOutEvent;\n}\n\nexport type EmbeddedCheckoutEvent = (\n    EmbeddedCheckoutCompleteEvent |\n    EmbeddedCheckoutErrorEvent |\n    EmbeddedCheckoutFrameErrorEvent |\n    EmbeddedCheckoutFrameLoadedEvent |\n    EmbeddedCheckoutLoadedEvent |\n    EmbeddedCheckoutSignedOutEvent\n);\n\nexport interface EmbeddedCheckoutCompleteEvent {\n    type: EmbeddedCheckoutEventType.CheckoutComplete;\n}\n\nexport interface EmbeddedCheckoutErrorEvent {\n    type: EmbeddedCheckoutEventType.CheckoutError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutLoadedEvent {\n    type: EmbeddedCheckoutEventType.CheckoutLoaded;\n}\n\nexport interface EmbeddedCheckoutFrameErrorEvent {\n    type: EmbeddedCheckoutEventType.FrameError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutFrameLoadedEvent {\n    type: EmbeddedCheckoutEventType.FrameLoaded;\n    payload?: EmbeddedContentOptions;\n}\n\nexport interface EmbeddedCheckoutSignedOutEvent {\n    type: EmbeddedCheckoutEventType.SignedOut;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { AmazonPayRemoteCheckout } from './methods';\n\nexport enum RemoteCheckoutActionType {\n    InitializeRemoteBillingRequested = 'INITIALIZE_REMOTE_BILLING_REQUESTED',\n    InitializeRemoteBillingSucceeded = 'INITIALIZE_REMOTE_BILLING_SUCCEEDED',\n    InitializeRemoteBillingFailed = 'INITIALIZE_REMOTE_BILLING_FAILED',\n\n    InitializeRemoteShippingRequested = 'INITIALIZE_REMOTE_SHIPPING_REQUESTED',\n    InitializeRemoteShippingSucceeded = 'INITIALIZE_REMOTE_SHIPPING_SUCCEEDED',\n    InitializeRemoteShippingFailed = 'INITIALIZE_REMOTE_SHIPPING_FAILED',\n\n    InitializeRemotePaymentRequested = 'INITIALIZE_REMOTE_PAYMENT_REQUESTED',\n    InitializeRemotePaymentSucceeded = 'INITIALIZE_REMOTE_PAYMENT_SUCCEEDED',\n    InitializeRemotePaymentFailed = 'INITIALIZE_REMOTE_PAYMENT_FAILED',\n\n    LoadRemoteSettingsRequested = 'LOAD_REMOTE_SETTINGS_REQUESTED',\n    LoadRemoteSettingsSucceeded = 'LOAD_REMOTE_SETTINGS_SUCCEEDED',\n    LoadRemoteSettingsFailed = 'LOAD_REMOTE_SETTINGS_FAILED',\n\n    SignOutRemoteCustomerRequested = 'SIGN_OUT_REMOTE_CUSTOMER_REQUESTED',\n    SignOutRemoteCustomerSucceeded = 'SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED',\n    SignOutRemoteCustomerFailed = 'SIGN_OUT_REMOTE_CUSTOMER_FAILED',\n\n    UpdateRemoteCheckout = 'UPDATE_REMOTE_CHECKOUT',\n}\n\nexport type RemoteCheckoutAction = InitializeRemoteBillingAction |\n    InitializeRemoteShippingAction |\n    InitializeRemotePaymentAction |\n    SignOutRemoteCustomerAction |\n    LoadRemoteSettingsAction |\n    UpdateRemoteCheckoutAction;\n\nexport type InitializeRemoteBillingAction = InitializeRemoteBillingSucceededAction |\n    InitializeRemoteBillingFailedAction |\n    InitializeRemoteBillingRequestedAction;\n\nexport interface InitializeRemoteBillingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingSucceeded;\n}\n\nexport interface InitializeRemoteBillingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingFailed;\n}\n\nexport interface InitializeRemoteBillingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingRequested;\n}\n\nexport type InitializeRemoteShippingAction = InitializeRemoteShippingSucceededAction |\n    InitializeRemoteShippingFailedAction |\n    InitializeRemoteShippingRequestedAction;\n\nexport interface InitializeRemoteShippingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingSucceeded;\n}\n\nexport interface InitializeRemoteShippingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingFailed;\n}\n\nexport interface InitializeRemoteShippingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingRequested;\n}\n\nexport type InitializeRemotePaymentAction = InitializeRemotePaymentSucceededAction |\n    InitializeRemotePaymentFailedAction |\n    InitializeRemotePaymentRequestedAction;\n\nexport interface InitializeRemotePaymentSucceededAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentSucceeded;\n}\n\nexport interface InitializeRemotePaymentFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentFailed;\n}\n\nexport interface InitializeRemotePaymentRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentRequested;\n}\n\nexport type SignOutRemoteCustomerAction = SignOutRemoteCustomerSucceededAction |\n    SignOutRemoteCustomerFailedAction |\n    SignOutRemoteCustomerRequestedAction;\n\nexport interface SignOutRemoteCustomerSucceededAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded;\n}\n\nexport interface SignOutRemoteCustomerFailedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerFailed;\n}\n\nexport interface SignOutRemoteCustomerRequestedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerRequested;\n}\n\nexport type LoadRemoteSettingsAction = LoadRemoteSettingsSucceededAction |\n    LoadRemoteSettingsRequestedAction |\n    LoadRemoteSettingsFailedAction;\n\nexport interface LoadRemoteSettingsSucceededAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsSucceeded;\n}\n\nexport interface LoadRemoteSettingsRequestedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsRequested;\n}\n\nexport interface LoadRemoteSettingsFailedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsFailed;\n}\n\nexport interface UpdateRemoteCheckoutAction extends Action {\n    type: RemoteCheckoutActionType.UpdateRemoteCheckout;\n}\n","module.exports = require(\"card-validator\");","import { Response } from '@bigcommerce/request-sender';\n\nimport StandardError from './standard-error';\n\nconst DEFAULT_RESPONSE = {\n    body: {},\n    headers: {},\n    status: 0,\n};\n\n/**\n * Throw this error if we are unable to make a request to the server. It wraps\n * any server response into a JS error object.\n */\nexport default class RequestError<TBody = any> extends StandardError {\n    body: TBody | {};\n    headers: { [key: string]: any };\n    errors: Array<{ code: string; message?: string }>;\n    status: number;\n\n    constructor(\n        response?: Response<TBody | {}>,\n        { message, errors }: {\n            message?: string;\n            errors?: Array<{ code: string; message?: string }>;\n        } = {}\n    ) {\n        const { body, headers, status } = response || DEFAULT_RESPONSE;\n\n        super(message || 'An unexpected error has occurred.');\n\n        this.name = 'RequestError';\n        this.type = 'request';\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.errors = errors || [];\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Config from './config';\n\nexport enum ConfigActionType {\n    LoadConfigRequested = 'LOAD_CONFIG_REQUESTED',\n    LoadConfigSucceeded = 'LOAD_CONFIG_SUCCEEDED',\n    LoadConfigFailed = 'LOAD_CONFIG_FAILED',\n}\n\nexport type LoadConfigAction =\n    LoadConfigRequestedAction |\n    LoadConfigSucceededAction |\n    LoadConfigFailedAction;\n\nexport interface LoadConfigRequestedAction extends Action {\n    type: ConfigActionType.LoadConfigRequested;\n}\n\nexport interface LoadConfigSucceededAction extends Action<Config> {\n    type: ConfigActionType.LoadConfigSucceeded;\n}\n\nexport interface LoadConfigFailedAction extends Action<Error> {\n    type: ConfigActionType.LoadConfigFailed;\n}\n","export const ACKNOWLEDGE = 'ACKNOWLEDGE';\nexport const FINALIZE = 'FINALIZE';\nexport const INITIALIZE = 'INITIALIZE';\n","import { isPlainObject as lodashIsPlainObject } from 'lodash';\n\n// We need this wrapper because Lodash's version doesn't act as a type guard\nexport default function isPlainObject(value: any): value is object {\n    return lodashIsPlainObject(value);\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Country from './country';\n\nexport enum CountryActionType {\n    LoadCountriesRequested = 'LOAD_COUNTRIES_REQUESTED',\n    LoadCountriesSucceeded = 'LOAD_COUNTRIES_SUCCEEDED',\n    LoadCountriesFailed = 'LOAD_COUNTRIES_FAILED',\n}\n\nexport type LoadCountriesAction =\n    LoadCountriesRequestedAction |\n    LoadCountriesSucceededAction |\n    LoadCountriesFailedAction;\n\nexport interface LoadCountriesRequestedAction extends Action {\n    type: CountryActionType.LoadCountriesRequested;\n}\n\nexport interface LoadCountriesSucceededAction extends Action<Country[]> {\n    type: CountryActionType.LoadCountriesSucceeded;\n}\n\nexport interface LoadCountriesFailedAction extends Action<Error> {\n    type: CountryActionType.LoadCountriesFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Country } from '../geography';\n\nexport enum ShippingCountryActionType {\n    LoadShippingCountriesRequested = 'LOAD_SHIPPING_COUNTRIES_REQUESTED',\n    LoadShippingCountriesSucceeded = 'LOAD_SHIPPING_COUNTRIES_SUCCEEDED',\n    LoadShippingCountriesFailed = 'LOAD_SHIPPING_COUNTRIES_FAILED',\n}\n\nexport type LoadShippingCountriesAction = LoadShippingCountriesRequestedAction |\n    LoadShippingCountriesSucceededAction |\n    LoadShippingCountriesFailedAction;\n\nexport interface LoadShippingCountriesRequestedAction extends Action {\n    type: ShippingCountryActionType.LoadShippingCountriesRequested;\n}\n\nexport interface LoadShippingCountriesSucceededAction extends Action<Country[]> {\n    type: ShippingCountryActionType.LoadShippingCountriesSucceeded;\n}\n\nexport interface LoadShippingCountriesFailedAction extends Action<Error> {\n    type: ShippingCountryActionType.LoadShippingCountriesFailed;\n}\n","module.exports = require(\"@bigcommerce/request-sender\");","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\n    return (\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\n        !instrument.hasOwnProperty('ccNumber') &&\n        !instrument.hasOwnProperty('ccCvv')\n    );\n}\n\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\n\n    if (!formattedInstrument) {\n        return false;\n    }\n\n    return typeof formattedInstrument.bigpay_token === 'string' ||\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum StoreCreditActionType {\n    ApplyStoreCreditRequested = 'APPLY_STORE_CREDIT_REQUESTED',\n    ApplyStoreCreditSucceeded = 'APPLY_STORE_CREDIT_SUCCEEDED',\n    ApplyStoreCreditFailed = 'APPLY_STORE_CREDIT_FAILED',\n}\n\nexport type StoreCreditAction =\n    ApplyStoreCreditAction;\n\nexport type ApplyStoreCreditAction =\n    ApplyStoreCreditRequestedAction |\n    ApplyStoreCreditSucceededAction |\n    ApplyStoreCreditFailedAction;\n\nexport interface ApplyStoreCreditRequestedAction extends Action {\n    type: StoreCreditActionType.ApplyStoreCreditRequested;\n}\n\nexport interface ApplyStoreCreditSucceededAction extends Action<Checkout> {\n    type: StoreCreditActionType.ApplyStoreCreditSucceeded;\n}\n\nexport interface ApplyStoreCreditFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: StoreCreditActionType.ApplyStoreCreditFailed;\n}\n","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the client library of a payment method fails\n * to load, or for some reason, it is inaccessible.\n */\nexport default class PaymentMethodClientUnavailableError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method is not loaded or ready to be used.');\n\n        this.name = 'PaymentMethodClientUnavailableError';\n        this.type = 'payment_method_client_unavailable';\n    }\n}\n","module.exports = require(\"@bigcommerce/script-loader\");","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent = (\n    HostedInputAttachSuccessEvent |\n    HostedInputAttachErrorEvent |\n    HostedInputBinChangeEvent |\n    HostedInputBlurEvent |\n    HostedInputChangeEvent |\n    HostedInputCardTypeChangeEvent |\n    HostedInputFocusEvent |\n    HostedInputSubmitSuccessEvent |\n    HostedInputSubmitErrorEvent |\n    HostedInputValidateEvent\n);\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderAction } from '../order';\n\nimport PaymentResponseBody from './payment-response-body';\n\nexport enum PaymentActionType {\n    SubmitPaymentRequested = 'SUBMIT_PAYMENT_REQUESTED',\n    SubmitPaymentSucceeded = 'SUBMIT_PAYMENT_SUCCEEDED',\n    SubmitPaymentFailed = 'SUBMIT_PAYMENT_FAILED',\n\n    InitializeOffsitePaymentRequested = 'INITIALIZE_OFFSITE_PAYMENT_REQUESTED',\n    InitializeOffsitePaymentSucceeded = 'INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED',\n    InitializeOffsitePaymentFailed = 'INITIALIZE_OFFSITE_PAYMENT_FAILED',\n}\n\nexport type PaymentAction = SubmitPaymentAction |\n    InitializeOffsitePaymentAction;\n\nexport type SubmitPaymentAction =\n    SubmitPaymentRequestedAction |\n    SubmitPaymentSucceededAction |\n    SubmitPaymentFailedAction |\n    LoadOrderAction;\n\nexport type InitializeOffsitePaymentAction =\n    InitializeOffsitePaymentRequestedAction |\n    InitializeOffsitePaymentSucceededAction |\n    InitializeOffsitePaymentFailedAction;\n\nexport interface SubmitPaymentRequestedAction extends Action {\n    type: PaymentActionType.SubmitPaymentRequested;\n}\n\nexport interface SubmitPaymentSucceededAction extends Action<PaymentResponseBody> {\n    type: PaymentActionType.SubmitPaymentSucceeded;\n}\n\nexport interface SubmitPaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.SubmitPaymentFailed;\n}\n\nexport interface InitializeOffsitePaymentRequestedAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentRequested;\n}\n\nexport interface InitializeOffsitePaymentSucceededAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentSucceeded;\n}\n\nexport interface InitializeOffsitePaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.InitializeOffsitePaymentFailed;\n}\n","import { uniq } from 'lodash';\n\nexport default function joinIncludes<T>(includes: T[]): string {\n    return uniq(includes).join(',');\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","module.exports = require(\"local-storage-fallback\");","module.exports = require(\"shallowequal\");","import { CardInstrument } from '../payment/instrument';\n\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent = (\n    HostedFieldAttachEvent |\n    HostedFieldSubmitRequestEvent |\n    HostedFieldValidateRequestEvent\n);\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        cardInstrument?: CardInstrument;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","export interface CompareOptions {\n    keyFilter?(key: string): boolean;\n}\n\nexport default function isEqual(objectA: any, objectB: any, options?: CompareOptions): boolean {\n    if (objectA === objectB) {\n        return true;\n    }\n\n    if (objectA && objectB && typeof objectA === 'object' && typeof objectB === 'object') {\n        if (Array.isArray(objectA) && Array.isArray(objectB)) {\n            return isArrayEqual(objectA, objectB, options);\n        }\n\n        if (Array.isArray(objectA) || Array.isArray(objectB)) {\n            return false;\n        }\n\n        if ((objectA instanceof Date) && (objectB instanceof Date)) {\n            return isDateEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof Date) || (objectB instanceof Date)) {\n            return false;\n        }\n\n        if ((objectA instanceof RegExp) && (objectB instanceof RegExp)) {\n            return isRegExpEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof RegExp) || (objectB instanceof RegExp)) {\n            return false;\n        }\n\n        return isObjectEqual(objectA, objectB, options);\n    }\n\n    return objectA === objectB;\n}\n\nfunction isRegExpEqual(objectA: RegExp, objectB: RegExp): boolean {\n    return objectA.toString() === objectB.toString();\n}\n\nfunction isDateEqual(objectA: Date, objectB: Date): boolean {\n    return objectA.getTime() === objectB.getTime();\n}\n\nfunction isArrayEqual(objectA: any[], objectB: any[], options?: CompareOptions): boolean {\n    if (objectA.length !== objectB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = objectA.length; index < length; index++) {\n        if (!isEqual(objectA[index], objectB[index], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isObjectEqual(\n    objectA: { [key: string]: any },\n    objectB: { [key: string]: any },\n    options?: CompareOptions\n): boolean {\n    const filter = options && options.keyFilter;\n    const keysA = filter ? Object.keys(objectA).filter(filter) : Object.keys(objectA);\n    const keysB = filter ? Object.keys(objectB).filter(filter) : Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = keysA.length; index < length; index++) {\n        const key = keysA[index];\n\n        if (!objectB.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!isEqual(objectA[key], objectB[key], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","module.exports = require(\"@bigcommerce/form-poster\");","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","module.exports = require(\"reselect\");","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadCheckoutAction } from '../checkout';\n\nimport { CurrentCustomer } from './customer';\nimport { InternalCustomerResponseData } from './internal-customer-responses';\n\nexport enum CustomerActionType {\n    SignInCustomerRequested = 'SIGN_IN_CUSTOMER_REQUESTED',\n    SignInCustomerSucceeded = 'SIGN_IN_CUSTOMER_SUCCEEDED',\n    SignInCustomerFailed = 'SIGN_IN_CUSTOMER_FAILED',\n\n    SignOutCustomerRequested = 'SIGN_OUT_CUSTOMER_REQUESTED',\n    SignOutCustomerSucceeded = 'SIGN_OUT_CUSTOMER_SUCCEEDED',\n    SignOutCustomerFailed = 'SIGN_OUT_CUSTOMER_FAILED',\n\n    UpdateCustomerRequested = 'UPDATE_CUSTOMER_REQUESTED',\n    UpdateCustomerSucceeded = 'UPDATE_CUSTOMER_SUCCEEDED',\n    UpdateCustomerFailed = 'UPDATE_CUSTOMER_FAILED',\n}\n\nexport type CustomerAction =\n    UpdateCustomerAction |\n    SignInCustomerAction |\n    SignOutCustomerAction;\n\nexport type SignInCustomerAction =\n    SignInCustomerRequestedAction |\n    SignInCustomerSucceededAction |\n    SignInCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type SignOutCustomerAction =\n    SignOutCustomerRequestedAction |\n    SignOutCustomerSucceededAction |\n    SignOutCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type UpdateCustomerAction =\n    UpdateCustomerRequestedAction |\n    UpdateCustomerSucceededAction |\n    UpdateCustomerFailedAction;\n\nexport interface SignInCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignInCustomerRequested;\n}\n\nexport interface SignInCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignInCustomerSucceeded;\n}\n\nexport interface SignInCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignInCustomerFailed;\n}\n\nexport interface SignOutCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignOutCustomerRequested;\n}\n\nexport interface SignOutCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignOutCustomerSucceeded;\n}\n\nexport interface SignOutCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignOutCustomerFailed;\n}\n\nexport interface UpdateCustomerRequestedAction extends Action {\n    type: CustomerActionType.UpdateCustomerRequested;\n}\n\nexport interface UpdateCustomerSucceededAction extends Action<CurrentCustomer> {\n    type: CustomerActionType.UpdateCustomerSucceeded;\n}\n\nexport interface UpdateCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.UpdateCustomerFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum SpamProtectionActionType {\n    InitializeFailed = 'SPAM_PROTECTION_INITIALIZE_FAILED',\n    InitializeSucceeded = 'SPAM_PROTECTION_INITIALIZE_SUCCEEDED',\n    InitializeRequested = 'SPAM_PROTECTION_INITIALIZE_REQUESTED',\n    ExecuteRequested = 'SPAM_PROTECTION_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'SPAM_PROTECTION_EXECUTE_SUCCEEDED',\n    ExecuteFailed = 'SPAM_PROTECTION_EXECUTE_FAILED',\n}\n\nexport type SpamProtectionAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction |\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction;\n\nexport interface InitializeRequestedAction extends Action {\n    type: SpamProtectionActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: SpamProtectionActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: SpamProtectionActionType.InitializeFailed;\n}\n\nexport interface ExecuteRequestedAction extends Action {\n    type: SpamProtectionActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action<Checkout> {\n    type: SpamProtectionActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action {\n    type: SpamProtectionActionType.ExecuteFailed;\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { createSelector as defaultSelectorCreator } from 'reselect';\n\n/**\n * Decorate selector creators with the ability to memoize the return value of\n * their combiner if it is a function (which effectively works as a partially\n * applied combiner).\n */\nexport default function withMemoizedCombiner<T extends typeof defaultSelectorCreator>(\n    creator: T\n): T {\n    return ((...args: any[]) => {\n        const combiner = args.pop();\n\n        // Reselect's default `createSelector` has many overloads. To avoid having\n        // to redefine all of them, we're using `any` to bypass the typechecker.\n        return (creator as any)(...args, (...combinerArgs: any[]) => {\n            // Although there are many overloads, all of them have the last argument\n            // as the combiner.\n            const result = combiner(...combinerArgs);\n\n            if (typeof result === 'function') {\n                return memoize(result);\n            }\n\n            return result;\n        });\n    }) as T;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ErrorActionType {\n    ClearError = 'CLEAR_ERROR',\n}\n\nexport type ErrorAction = ClearErrorAction;\n\nexport interface ClearErrorAction extends Action {\n    type: ErrorActionType.ClearError;\n    payload: Error;\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadPaymentMethodsAction, LoadPaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\n\nexport default class PaymentMethodActionCreator {\n    constructor(\n        private _requestSender: PaymentMethodRequestSender\n    ) {}\n\n    loadPaymentMethods(options?: RequestOptions): Observable<LoadPaymentMethodsAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodsAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsRequested));\n\n            this._requestSender.loadPaymentMethods(options)\n                .then(response => {\n                    const meta = {\n                        deviceSessionId: response.headers['x-device-session-id'],\n                        sessionHash: response.headers['x-session-hash'],\n                    };\n\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsSucceeded, response.body, meta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodsFailed, response));\n                });\n        });\n    }\n\n    @cachableAction\n    loadPaymentMethod(methodId: string, options?: RequestOptions & ActionOptions): Observable<LoadPaymentMethodAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodRequested, undefined, { methodId }));\n\n            this._requestSender.loadPaymentMethod(methodId, options)\n                .then(response => {\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodSucceeded, response.body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodFailed, response, { methodId }));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport PaymentMethod from './payment-method';\n\nexport default class PaymentMethodRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadPaymentMethods({ timeout }: RequestOptions = {}): Promise<Response<PaymentMethod[]>> {\n        const url = '/api/storefront/payments';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n\n    loadPaymentMethod(methodId: string, { timeout }: RequestOptions = {}): Promise<Response<PaymentMethod>> {\n        const url = `/api/storefront/payments/${methodId}`;\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","const CHECKOUT_DEFAULT_INCLUDES = [\n    'cart.lineItems.physicalItems.options',\n    'cart.lineItems.digitalItems.options',\n    'customer',\n    'customer.customerGroup',\n    'payments',\n    'promotions.banners',\n];\n\nexport default CHECKOUT_DEFAULT_INCLUDES;\n","export const INTERNAL_USE_ONLY = 'This API endpoint is for internal use only and may change in the future';\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { GooglePayCreator } from '../googlepay';\n\nimport { BraintreeClientCreator, BraintreeDataCollectorCreator, BraintreeHostWindow, BraintreePaypalCheckoutCreator, BraintreePaypalCreator, BraintreeThreeDSecureCreator, BraintreeVisaCheckoutCreator } from './braintree';\n\nexport default class BraintreeScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: BraintreeHostWindow = window\n    ) {}\n\n    loadClient(): Promise<BraintreeClientCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/client.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.client) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.client;\n            });\n    }\n\n    load3DS(): Promise<BraintreeThreeDSecureCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/three-d-secure.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.threeDSecure) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.threeDSecure;\n            });\n    }\n\n    loadDataCollector(): Promise<BraintreeDataCollectorCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/data-collector.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.dataCollector) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.dataCollector;\n            });\n    }\n\n    loadPaypal(): Promise<BraintreePaypalCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypal;\n            });\n    }\n\n    loadPaypalCheckout(): Promise<BraintreePaypalCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypalCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypalCheckout;\n            });\n    }\n\n    loadVisaCheckout(): Promise<BraintreeVisaCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/visa-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.visaCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.visaCheckout;\n            });\n    }\n\n    loadGooglePayment(): Promise<GooglePayCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/google-payment.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.googlePayment) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.googlePayment;\n            });\n    }\n}\n","import { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { BraintreeClient, BraintreeDataCollector, BraintreeModule, BraintreePaypal, BraintreePaypalCheckout, BraintreeThreeDSecure, BraintreeVisaCheckout, GooglePayBraintreeSDK } from './braintree';\nimport BraintreeScriptLoader from './braintree-script-loader';\n\nexport default class BraintreeSDKCreator {\n    private _client?: Promise<BraintreeClient>;\n    private _3ds?: Promise<BraintreeThreeDSecure>;\n    private _paypal?: Promise<BraintreePaypal>;\n    private _paypalCheckout?: Promise<BraintreePaypalCheckout>;\n    private _clientToken?: string;\n    private _visaCheckout?: Promise<BraintreeVisaCheckout>;\n    private _dataCollectors: {\n        default?: Promise<BraintreeDataCollector>;\n        paypal?: Promise<BraintreeDataCollector>;\n    } = {};\n    private _googlePay?: Promise<GooglePayBraintreeSDK>;\n\n    constructor(\n        private _braintreeScriptLoader: BraintreeScriptLoader\n    ) {}\n\n    initialize(clientToken: string) {\n        this._clientToken = clientToken;\n    }\n\n    getClient(): Promise<BraintreeClient> {\n        if (!this._clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!this._client) {\n            this._client = this._braintreeScriptLoader.loadClient()\n                .then(client => client.create({ authorization: this._clientToken }));\n        }\n\n        return this._client;\n    }\n\n    getPaypal(): Promise<BraintreePaypal> {\n        if (!this._paypal) {\n            this._paypal = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypal(),\n            ])\n            .then(([client, paypal]) => paypal.create({ client }));\n        }\n\n        return this._paypal;\n    }\n\n    getPaypalCheckout(): Promise<BraintreePaypalCheckout> {\n        if (!this._paypalCheckout) {\n            this._paypalCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypalCheckout(),\n            ])\n                .then(([client, paypalCheckout]) => paypalCheckout.create({ client }));\n        }\n\n        return this._paypalCheckout;\n    }\n\n    get3DS(): Promise<BraintreeThreeDSecure> {\n        if (!this._3ds) {\n            this._3ds = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.load3DS(),\n            ])\n            .then(([client, threeDSecure]) => threeDSecure.create({ client }));\n        }\n\n        return this._3ds;\n    }\n\n    getDataCollector(options?: { paypal: boolean }): Promise<BraintreeDataCollector> {\n        const cacheKey = options && options.paypal ? 'paypal' : 'default';\n        let cached = this._dataCollectors[cacheKey];\n\n        if (!cached) {\n            cached = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadDataCollector(),\n            ])\n            .then(([client, dataCollector]) => dataCollector.create({ client, kount: true, ...options }))\n            .catch(error => {\n                if (error && error.code === 'DATA_COLLECTOR_KOUNT_NOT_ENABLED') {\n                    return { deviceData: undefined, teardown: () => Promise.resolve() };\n                }\n\n                throw error;\n            });\n\n            this._dataCollectors[cacheKey] = cached;\n        }\n\n        return cached;\n    }\n\n    getVisaCheckout(): Promise<BraintreeVisaCheckout> {\n        if (!this._visaCheckout) {\n            this._visaCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadVisaCheckout(),\n            ])\n            .then(([client, visaCheckout]) => visaCheckout.create({ client }));\n        }\n\n        return this._visaCheckout;\n    }\n\n    getGooglePaymentComponent(): Promise<GooglePayBraintreeSDK> {\n        if (!this._googlePay) {\n            this._googlePay = Promise.all ([\n                this.getClient(),\n                this._braintreeScriptLoader.loadGooglePayment(),\n            ])\n                .then(([client, googlePay]) => googlePay.create({ client }));\n        }\n\n        return this._googlePay;\n    }\n\n    teardown(): Promise<void> {\n        return Promise.all([\n            this._teardown(this._3ds),\n            this._teardown(this._dataCollectors.default),\n            this._teardown(this._dataCollectors.paypal),\n            this._teardown(this._visaCheckout),\n            this._teardown(this._googlePay),\n        ]).then(() => {\n            this._3ds = undefined;\n            this._visaCheckout = undefined;\n            this._dataCollectors = {};\n            this._googlePay = undefined;\n        });\n    }\n\n    private _teardown(module?: Promise<BraintreeModule>) {\n        return module ?\n            module.then(mod => mod.teardown()) :\n            Promise.resolve();\n    }\n}\n","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter(gapIndex => unformattedValue.length > gapIndex)\n            .reduce((output, gapIndex, index) => (\n                [\n                    output.slice(0, gapIndex + index),\n                    output.slice(gapIndex + index),\n                ].join(NUMBER_SEPARATOR)\n            ), unformattedValue);\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import StandardError from './standard-error';\n\nexport enum NotInitializedErrorType {\n    CheckoutButtonNotInitialized,\n    CustomerNotInitialized,\n    PaymentNotInitialized,\n    ShippingNotInitialized,\n    SpamProtectionNotInitialized,\n}\n\n/**\n * Throw this error if a method requires a certain initialization call to be\n * made first. Some objects can be constructed but they cannot be used until a\n * separate initialization call is made.\n */\nexport default class NotInitializedError extends StandardError {\n    constructor(\n        public subtype: NotInitializedErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'NotInitializedError';\n        this.type = 'not_initialized';\n    }\n}\n\nfunction getErrorMessage(type: NotInitializedErrorType): string {\n    switch (type) {\n    case NotInitializedErrorType.CustomerNotInitialized:\n        return 'Unable to proceed because the customer step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.PaymentNotInitialized:\n        return 'Unable to proceed because the payment step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.ShippingNotInitialized:\n        return 'Unable to proceed because the shipping step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.SpamProtectionNotInitialized:\n        return 'Unable to proceed because the checkout spam protection has not been initialized.';\n\n    default:\n        return 'Unable to proceed because the required component has not been initialized.';\n    }\n}\n","import { createErrorAction, Action } from '@bigcommerce/data-store';\nimport { concat, of, throwError, Observable } from 'rxjs';\n\nexport default function throwErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    error?: TPayload,\n    meta?: TMeta\n): Observable<Action<TPayload, TMeta, TType>> {\n    if (isErrorAction(error)) {\n        return concat(of(error), throwError(createErrorAction(type, error.payload, meta)));\n    }\n\n    return throwError(createErrorAction(type, error, meta));\n}\n\nfunction isErrorAction(action: any): action is Action {\n    return action && action.type && action.error;\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { memoize } from '@bigcommerce/memoize';\nimport { from, Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nexport default function cacheAction<TFunction extends CreateActionFn>(\n    fn: TFunction\n): TFunction {\n    function decoratedFn(this: any, ...args: any[]) {\n        const action = fn.call(this, ...args);\n\n        if (action instanceof Observable) {\n            return from(action).pipe(shareReplay());\n        }\n\n        if (typeof action === 'function') {\n            return memoize(store => from(action(store)).pipe(shareReplay()));\n        }\n\n        return action;\n    }\n\n    return memoize(decoratedFn as TFunction);\n}\n\ntype CreateActionFn = (...args: any[]) => Observable<Action> | ThunkAction<Action> | Action;\n","import ActionOptions from './action-options';\n\nexport default function isActionOptions(param: any): param is ActionOptions {\n    return param && typeof param.useCache === 'boolean';\n}\n","import cacheAction from './cache-action';\nimport isActionOptions from './is-action-options';\n\nexport default function cachableActionDecorator<TMethod extends (...args: any[]) => any>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<TMethod>\n): TypedPropertyDescriptor<TMethod> {\n    const memoizedMethods = new WeakMap<object, { [key: string]: TMethod }>();\n\n    function decorateMethod(this: object, method: TMethod): TMethod {\n        return ((...args: any[]) => {\n            const lastArg = args[args.length - 1];\n            const { useCache } = isActionOptions(lastArg) ? lastArg : { useCache: false };\n\n            if (!useCache) {\n                return method.call(this, ...args);\n            }\n\n            const instanceMethods = memoizedMethods.get(this) || {};\n\n            if (!memoizedMethods.get(this)) {\n                memoizedMethods.set(this, instanceMethods);\n            }\n\n            if (!instanceMethods[key]) {\n                instanceMethods[key] = cacheAction(method);\n            }\n\n            return instanceMethods[key].call(this, ...args);\n        }) as TMethod;\n    }\n\n    return {\n        get() {\n            if (typeof descriptor.value !== 'function') {\n                throw new Error('Decorator should be used in functions');\n            }\n\n            const value = decorateMethod.call(this, descriptor.value);\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n    };\n}\n","import joinIncludes from './join-includes';\nimport mergeIncludes from './merge-includes';\n\n/**\n * Joins or merges a base list of includes with a set of additional includes.\n */\nexport default function joinOrMergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includeDictionaryOrList: { [key in T]?: boolean } | T[] = []\n): string {\n    return Array.isArray(includeDictionaryOrList) ?\n        joinIncludes([\n            ...baseIncludes,\n            ...includeDictionaryOrList,\n        ]) :\n        mergeIncludes(baseIncludes, includeDictionaryOrList);\n}\n","import { difference, filter, keys, pickBy } from 'lodash';\n\nimport joinIncludes from './join-includes';\n\n/**\n * Merges includes given a list of base includes and a dictionary\n * of includes\n */\nexport default function mergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includesDictionary?: { [key in T]?: boolean }\n): string {\n    const deletions = keys(pickBy(includesDictionary, on => !on));\n    const additions = keys(filter(includesDictionary));\n\n    return joinIncludes([\n            ...difference(baseIncludes, deletions),\n            ...additions,\n        ]);\n}\n","module.exports = require(\"iframe-resizer\");","module.exports = require(\"iframe-resizer/js/iframeResizer.contentWindow\");","import { isPlainObject, omitBy, transform } from 'lodash';\n\nexport default function omitDeep(object: any, predicate: (value: any, key: string) => boolean): any {\n    if (Array.isArray(object)) {\n        return object.map(value => omitDeep(value, predicate));\n    }\n\n    if (isPlainObject(object)) {\n        return transform(omitBy(object, predicate), (result, value, key) => {\n            result[key] = omitDeep(value, predicate);\n        }, {} as { [key: string]: any });\n    }\n\n    return object;\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { CurrentCustomer } from './customer';\nimport CustomerCredentials from './customer-credentials';\nimport { InternalCustomerResponseBody } from './internal-customer-responses';\n\nexport default class CustomerRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    updateCustomer(customer: CurrentCustomer, { timeout }: RequestOptions = {}): Promise<Response<CurrentCustomer>> {\n        const url = '/api/storefront/customer';\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: customer, headers, timeout });\n    }\n\n    signInCustomer(credentials: CustomerCredentials, { timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.post(url, { timeout, body: credentials });\n    }\n\n    signOutCustomer({ timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.delete(url, { timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, merge, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { ConfigActionCreator } from '../config';\n\nimport { CheckoutRequestBody } from './checkout';\nimport { CheckoutActionType, LoadCheckoutAction, UpdateCheckoutAction } from './checkout-actions';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default class CheckoutActionCreator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender,\n        private _configActionCreator: ConfigActionCreator\n    ) {}\n\n    loadCheckout(id: string, options?: RequestOptions): Observable<LoadCheckoutAction> {\n        return concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig({ ...options, useCache: true }),\n                defer(() => this._checkoutRequestSender.loadCheckout(id, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body)))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    loadDefaultCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            this._configActionCreator.loadConfig(),\n            defer(async () => {\n                const state = store.getState();\n                const context = state.config.getContextConfig();\n\n                if (!context || !context.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                const { body } = await this._checkoutRequestSender.loadCheckout(context.checkoutId, options);\n\n                return createAction(CheckoutActionType.LoadCheckoutSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    updateCheckout(\n        body: CheckoutRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateCheckoutAction, InternalCheckoutSelectors> {\n        return store => new Observable(observer => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CheckoutActionType.UpdateCheckoutRequested));\n\n            this._checkoutRequestSender.updateCheckout(checkout.id, body, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CheckoutActionType.UpdateCheckoutSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CheckoutActionType.UpdateCheckoutFailed, response));\n                });\n        });\n    }\n\n    loadCurrentCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return this.loadCheckout(checkout.id, options);\n        };\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { find } from 'lodash';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { Cart } from '../cart';\nimport { CheckoutIncludes, CheckoutParams, CheckoutRequestSender, InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport Consignment, { ConsignmentsRequestBody, ConsignmentAssignmentRequestBody, ConsignmentCreateRequestBody, ConsignmentLineItem, ConsignmentRequestBody, ConsignmentShippingOptionRequestBody, ConsignmentUpdateRequestBody } from './consignment';\nimport { ConsignmentActionType, CreateConsignmentsAction, DeleteConsignmentAction, LoadShippingOptionsAction, UpdateConsignmentAction, UpdateShippingOptionAction } from './consignment-actions';\nimport ConsignmentRequestSender from './consignment-request-sender';\n\nexport default class ConsignmentActionCreator {\n    constructor(\n        private _consignmentRequestSender: ConsignmentRequestSender,\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    unassignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            if (!existingConsignment) {\n                throw new InvalidArgumentError('No consignment found for the specified address');\n            }\n\n            const lineItems = this._removeLineItems(\n                consignment.lineItems,\n                existingConsignment,\n                state.cart.getCart()\n            );\n\n            if (!lineItems.length) {\n                return this.deleteConsignment(existingConsignment.id, options)(store);\n            }\n\n            return this.updateConsignment({\n                id: existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems,\n            }, options)(store);\n        };\n    }\n\n    assignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            return this._createOrUpdateConsignment({\n                id: existingConsignment && existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems: this._addLineItems(\n                    consignment.lineItems,\n                    existingConsignment,\n                    state.cart.getCart()\n                ),\n            }, options)(store);\n        };\n    }\n\n    selectShippingOption(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n            const consignments = state.consignments.getConsignments();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (!consignments || !consignments.length) {\n                throw new MissingDataError(MissingDataErrorType.MissingConsignments);\n            }\n\n            const consignmentUpdateBody = {\n                id: consignments[0].id,\n                shippingOptionId: id,\n            };\n\n            const consignmentMeta = {\n                id: consignments[0].id,\n            };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignmentUpdateBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(\n                        ConsignmentActionType.UpdateShippingOptionSucceeded,\n                        body,\n                        consignmentMeta\n                    ));\n\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(\n                        ConsignmentActionType.UpdateShippingOptionFailed,\n                        response,\n                        consignmentMeta\n                    ));\n                });\n        });\n    }\n\n    loadShippingOptions(options?: RequestOptions): ThunkAction<LoadShippingOptionsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadShippingOptionsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.LoadShippingOptionsRequested));\n\n            this._checkoutRequestSender.loadCheckout(checkout.id, {\n                ...options,\n                params: {\n                    include: [CheckoutIncludes.AvailableShippingOptions],\n                },\n            })\n            .then(({ body }) => {\n                observer.next(createAction(ConsignmentActionType.LoadShippingOptionsSucceeded, body));\n                observer.complete();\n            })\n            .catch(response => {\n                observer.error(createErrorAction(ConsignmentActionType.LoadShippingOptionsFailed, response));\n            });\n        });\n    }\n\n    updateAddress(\n        address: AddressRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const consignment = this._getUpdateAddressRequestBody(address, store);\n            const consignments = store.getState().consignments.getConsignments();\n\n            if (consignments && consignments.length) {\n                (consignment as ConsignmentUpdateRequestBody).id = consignments[0].id;\n            }\n\n            return this._createOrUpdateConsignment(consignment, options)(store);\n        };\n    }\n\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CreateConsignmentsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.CreateConsignmentsRequested));\n\n            this._consignmentRequestSender.createConsignments(checkout.id, consignments, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.CreateConsignmentsSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.CreateConsignmentsFailed, response));\n                });\n        });\n    }\n\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n            const consignmentMeta = { id: consignmentId };\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.DeleteConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.deleteConsignment(checkout.id, consignmentId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.DeleteConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.DeleteConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    updateShippingOption(\n        consignment: ConsignmentShippingOptionRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateShippingOptionSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateShippingOptionFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    private _createOrUpdateConsignment(\n        consignment: ConsignmentCreateRequestBody | ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (this._isUpdateConsignmentRequest(consignment)) {\n                return this.updateConsignment(consignment, options)(store);\n            }\n\n            return this.createConsignments([consignment], options)(store);\n        };\n    }\n\n    private _getUpdateAddressRequestBody(\n        shippingAddress: AddressRequestBody,\n        store: ReadableCheckoutStore\n    ): ConsignmentRequestBody {\n        const state = store.getState();\n        const cart = state.cart.getCart();\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n        const { physicalItems, customItems = [] } = cart.lineItems;\n\n        return {\n            shippingAddress,\n            lineItems: [ ...physicalItems, ...customItems ].map(item => ({\n                itemId: item.id,\n                quantity: item.quantity,\n            })),\n        };\n    }\n\n    private _removeLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return this._hydrateLineItems(consignment.lineItemIds, cart).map(existingItem => {\n            const sharedItem = find(lineItems, lineItem => lineItem.itemId === existingItem.itemId);\n\n            return {\n                ...existingItem,\n                quantity: sharedItem ? (existingItem.quantity - sharedItem.quantity) : existingItem.quantity,\n            };\n        }).filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _addLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment?: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!consignment) {\n            return lineItems;\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return lineItems\n            .concat(this._hydrateLineItems(consignment.lineItemIds, cart))\n            .filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _hydrateLineItems(lineItemIds: string[], cart: Cart): ConsignmentLineItem[] {\n        return lineItemIds.map(itemId => {\n            const item = find(cart.lineItems.physicalItems, lineItem => lineItem.id === itemId);\n\n            return {\n                itemId,\n                quantity: item ? item.quantity : 0,\n            };\n        });\n    }\n\n    private _isUpdateConsignmentRequest(\n        request: ConsignmentRequestBody\n    ): request is ConsignmentUpdateRequestBody {\n        const updateRequest = request as ConsignmentUpdateRequestBody;\n\n        return !!updateRequest.id;\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutParams } from '../checkout';\nimport { joinIncludes, joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport { ConsignmentsRequestBody, ConsignmentUpdateRequestBody } from './consignment';\n\nconst DEFAULT_INCLUDES = [\n        'consignments.availableShippingOptions',\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ];\n\nexport default class ConsignmentRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createConsignments(\n        checkoutId: string,\n        consignments: ConsignmentsRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            body: consignments,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    updateConsignment(\n        checkoutId: string,\n        consignment: ConsignmentUpdateRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const { id, ...body } = consignment;\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            body,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    deleteConsignment(\n        checkoutId: string,\n        consignmentId: string,\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${consignmentId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = joinIncludes(DEFAULT_INCLUDES);\n\n        return this._requestSender.delete(url, { params: { include }, headers, timeout });\n    }\n}\n","export default function getCallbackUrl(origin: string): string {\n    return `${window.location.origin}/checkout.php?action=set_external_checkout&provider=masterpass&gateway=stripe&origin=${origin}`;\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { HostedFormOrderData } from '../hosted-form';\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\nimport Payment, { CreditCardInstrument, HostedCreditCardInstrument, HostedVaultedInstrument, VaultedInstrument } from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    private _cardExpiryFormatter = new CardExpiryFormatter();\n    private _cardNumberFormatter = new CardNumberFormatter();\n\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData &&\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData): PaymentRequestBody {\n        const { authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\n        const consignment = checkout && checkout.consignments[0];\n        const shippingAddress = consignment && consignment.shippingAddress;\n        const shippingOption = consignment && consignment.selectedShippingOption;\n\n        return {\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: this._transformHostedInputValues(values, payment),\n            quoteMeta: {\n                request: {\n                    ...paymentMethodMeta,\n                    geoCountryCode: config && config.context.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: config && pick(config.storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n\n    private _transformHostedInputValues(values: HostedInputValues, payment: HostedCreditCardInstrument | HostedVaultedInstrument): CreditCardInstrument | VaultedInstrument {\n        return 'instrumentId' in payment ?\n            {\n                ...payment,\n                ccCvv: values.cardCodeVerification,\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\n            } :\n            {\n                ...payment,\n                ccCvv: values.cardCode,\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\n                ccName: values.cardName || '',\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\n            };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload, null, target);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","export default function isPrivate(key: string): boolean {\n    return `${key}`.indexOf('$$') === 0 || `${key}`.indexOf('_') === 0;\n}\n","import EmbeddedCheckoutStyles from '../embedded-checkout-styles';\n\nexport enum EmbeddedContentEventType {\n    StyleConfigured = 'STYLE_CONFIGURED',\n}\n\nexport interface EmbeddedContentEventMap {\n    [EmbeddedContentEventType.StyleConfigured]: EmbeddedContentStyleConfiguredEvent;\n}\n\nexport type EmbeddedContentEvent = (\n    EmbeddedContentStyleConfiguredEvent\n);\n\nexport interface EmbeddedContentStyleConfiguredEvent {\n    type: EmbeddedContentEventType.StyleConfigured;\n    payload: EmbeddedCheckoutStyles;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if there is an unexpected error and it is not possible to\n * recover from unless the shopper creates a new checkout session.\n */\nexport default class UnrecoverableError extends RequestError {\n    constructor(response: Response, message?: string) {\n        super(response, {\n            message: message || 'An unexpected error has occurred. The checkout process cannot continue as a result.',\n        });\n\n        this.name = 'UnrecoverableError';\n        this.type = 'unrecoverable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromInternalErrorResponse(\n    response: Response<InternalErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || body.detail || body.title || message,\n        errors: errors.length ?\n            errors.map(message => ({ code: body.type, message })) :\n            [{ code: body.type, message: body.detail || body.title }],\n    });\n}\n\nfunction joinErrors(errors: string[]): string | undefined {\n    return errors.reduce((result: string[], error) => {\n        if (error) {\n            return [...result, error];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { last } from 'lodash';\n\nimport ErrorResponseBody, { InternalErrorResponseBody, StorefrontErrorResponseBody } from './error-response-body';\nimport { mapFromInternalErrorResponse, mapFromPaymentErrorResponse, mapFromStorefrontErrorResponse, RequestError, TimeoutError } from './errors';\n\nexport default class RequestErrorFactory {\n    private _factoryMethods: { [key: string]: ErrorFactoryMethod } = {};\n\n    constructor() {\n        this.register('default', (response, message) => new RequestError(response, { message }));\n        this.register('internal', (response, message) => mapFromInternalErrorResponse(response, message));\n        this.register('storefront', (response, message) => mapFromStorefrontErrorResponse(response, message));\n        this.register('payment', (response, message) => mapFromPaymentErrorResponse(response, message));\n        this.register('timeout', response => new TimeoutError(response));\n    }\n\n    register(type: string, factoryMethod: ErrorFactoryMethod): void {\n        this._factoryMethods[type] = factoryMethod;\n    }\n\n    createError(response: Response, message?: string): RequestError {\n        const factoryMethod = this._factoryMethods[this._getType(response)] || this._factoryMethods.default;\n\n        return factoryMethod(response, message);\n    }\n\n    private _getType(response: Response<ErrorResponseBody>): string {\n        if (response.status === 0) {\n            return 'timeout';\n        }\n\n        if (this._isStorefrontErrorResponseBody(response.body)) {\n            return 'storefront';\n        }\n\n        if (this._isInternalErrorResponseBody(response.body)) {\n            const internalType = last(response.body.type.split('/'));\n\n            return internalType && this._factoryMethods[internalType] ?\n                internalType :\n                'internal';\n        }\n\n        const error = last(response.body && response.body.errors);\n\n        if (error && error.code && this._factoryMethods[error.code]) {\n            return error.code;\n        }\n\n        return 'payment';\n    }\n\n    private _isStorefrontErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is StorefrontErrorResponseBody {\n        const storefrontErrorResponse = errorResponse as StorefrontErrorResponseBody;\n\n        return !this._isInternalErrorResponseBody(errorResponse) &&\n            typeof storefrontErrorResponse.title === 'string' &&\n            typeof storefrontErrorResponse.type === 'string' &&\n            typeof storefrontErrorResponse.status === 'number' &&\n            typeof storefrontErrorResponse.detail === 'string';\n    }\n\n    private _isInternalErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is InternalErrorResponseBody {\n        const internalErrorResponse = errorResponse as InternalErrorResponseBody;\n\n        return typeof internalErrorResponse.errors === 'object' &&\n            typeof internalErrorResponse.title === 'string' &&\n            typeof internalErrorResponse.type === 'string' &&\n            typeof internalErrorResponse.status === 'number';\n    }\n}\n\nexport type ErrorFactoryMethod = (response: Response, message?: string) => RequestError;\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { StorefrontErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromStorefrontErrorResponse(\n    response: Response<StorefrontErrorResponseBody>,\n    message?: string\n): RequestError<StorefrontErrorResponseBody> {\n    const { body } = response;\n\n    return new RequestError(response, {\n        message: message || body.detail || body.title,\n        errors: [{\n            code: body.code || body.type,\n            message: body.detail || body.title,\n        }],\n    });\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { omitDeep } from '../utility';\n\nimport { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default function clearErrorReducer<TState extends { [key: string]: any }, TAction extends Action>(\n    state: TState,\n    action: TAction\n): TState | undefined {\n    if (isClearErrorAction(action)) {\n        return omitDeep(state, value => value === action.payload);\n    }\n\n    return state;\n}\n\nfunction isClearErrorAction(action: Action): action is ClearErrorAction {\n    return action.type === ErrorActionType.ClearError;\n}\n","import isEqual from './is-equal';\n\n/**\n * Replace the current value with a new value if the former is different to the\n * latter.\n */\nexport default function replace<T>(currentValue: T, newValue?: T): T {\n    if (newValue === undefined || isEqual(currentValue, newValue)) {\n        return currentValue;\n    }\n\n    return newValue;\n}\n","import isEqual from './is-equal';\n\n/**\n * Set a new value to an object under a key if the new value is different to the\n * current value of the key.\n */\nexport default function objectSet<T extends { [key: string]: any }, K extends keyof T>(\n    object: T | undefined,\n    key: K,\n    value: T[K]\n): T {\n    if (object && object.hasOwnProperty(key) && isEqual(object[key], value)) {\n        return object;\n    }\n\n    return {\n        ...object as any,\n        [key]: value,\n    };\n}\n","import BillingAddress from './billing-address';\n\nexport default interface BillingAddressState {\n    data?: BillingAddress;\n    errors: BillingAddressErrorsState;\n    statuses: BillingAddressStatusesState;\n}\n\nexport interface BillingAddressErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n    continueAsGuestError?: Error;\n}\n\nexport interface BillingAddressStatusesState {\n    isLoading?: boolean;\n    isUpdating?: boolean;\n    isContinuingAsGuest?: boolean;\n}\n\nexport const DEFAULT_STATE: BillingAddressState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet, replace } from '../common/utility';\nimport { CustomerActionType, UpdateCustomerAction } from '../customer';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport BillingAddress from './billing-address';\nimport { BillingAddressAction, BillingAddressActionType } from './billing-address-actions';\nimport BillingAddressState, { BillingAddressErrorsState, BillingAddressStatusesState, DEFAULT_STATE } from './billing-address-state';\n\nexport default function billingAddressReducer(\n    state: BillingAddressState = DEFAULT_STATE,\n    action: Action\n): BillingAddressState {\n    const reducer = combineReducers<BillingAddressState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: BillingAddress | undefined,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddress | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return replace(data, action.payload && action.payload.billingAddress);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: BillingAddressErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | BillingAddressAction | OrderAction | UpdateCustomerAction\n): BillingAddressErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    case CustomerActionType.UpdateCustomerRequested:\n    case CustomerActionType.UpdateCustomerSucceeded:\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(errors, 'continueAsGuestError', undefined);\n\n    case CustomerActionType.UpdateCustomerFailed:\n    case BillingAddressActionType.ContinueAsGuestFailed:\n        return objectSet(errors, 'continueAsGuestError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: BillingAddressStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | BillingAddressAction | OrderAction | UpdateCustomerAction\n): BillingAddressStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case CustomerActionType.UpdateCustomerRequested:\n        return objectSet(statuses, 'isContinuingAsGuest', true);\n\n    case CustomerActionType.UpdateCustomerSucceeded:\n    case CustomerActionType.UpdateCustomerFailed:\n    case BillingAddressActionType.ContinueAsGuestFailed:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(statuses, 'isContinuingAsGuest', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { isArray } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\nimport replace from './replace';\n\nexport interface ArrayReplaceOptions {\n    matchObject(objectA: any, objectB: any): boolean;\n}\n\nfunction arrayReplace<T>(currentArray: T[] | undefined, newArray: T[], options?: ArrayReplaceOptions): T[];\nfunction arrayReplace<T>(currentArray: T[], newArray?: T[], options?: ArrayReplaceOptions): undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined {\n    const { matchObject = (a: any, b: any) => a.id !== undefined && a.id === b.id } = options || {};\n\n    // Return the new array if the current array does not exist\n    if (!currentArray) {\n        return newArray;\n    }\n\n    // If the new array does not exist, or the current array is strictly equal\n    // to the new array, exit early and return the current array so that the\n    // object reference doesn't change\n    if (!newArray || currentArray === newArray) {\n        return currentArray;\n    }\n\n    // Otherwise, try to replace the items of the current array with the new\n    // array. If the item from the two arrays are the same, keep the current\n    // one. Do it recursively until all arrays are replaced.\n    let sameAsCurrentCount = 0;\n    let sameAsNewCount = 0;\n\n    const countSameAsReplaced = <T>(replacedValue: T, currentValue: T, newValue: T): T => {\n        sameAsCurrentCount += replacedValue === currentValue ? 1 : 0;\n        sameAsNewCount += replacedValue === newValue ? 1 : 0;\n\n        return replacedValue;\n    };\n\n    const result = newArray.map((newItem, index) => {\n        const currentItem = currentArray && currentArray[index];\n\n        if (isPlainObject(currentItem) && isPlainObject(newItem)) {\n            if (matchObject(currentItem, newItem)) {\n                return countSameAsReplaced(\n                    objectMerge(currentItem, newItem),\n                    currentItem,\n                    newItem\n                );\n            }\n\n            return countSameAsReplaced(\n                replace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        if (isArray(currentItem) && isArray(newItem)) {\n            return countSameAsReplaced(\n                arrayReplace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        return countSameAsReplaced(\n            replace(currentItem, newItem),\n            currentItem,\n            newItem\n        );\n    }) as T[];\n\n    // If all items in the result are identical to the current array, and the\n    // current array and the new array have the same size, simply return the\n    // current array instead of the result.\n    if (sameAsCurrentCount === newArray.length && (currentArray && currentArray.length === newArray.length)) {\n        return currentArray;\n    }\n\n    // If all items in the result are identical to the new array, simply return\n    // the new array.\n    if (sameAsNewCount === newArray.length) {\n        return newArray;\n    }\n\n    return result;\n}\n\nexport default arrayReplace;\n","import { isArray } from 'lodash';\n\nimport arrayReplace from './array-replace';\nimport isPlainObject from './is-plain-object';\nimport objectSet from './object-set';\n\nfunction objectMerge<T extends object>(currentObject: T, newObject?: Partial<T>): T;\nfunction objectMerge<T extends object>(currentObject: T | undefined, newObject: Partial<T>): Partial<T>;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | undefined;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | Partial<T> | undefined {\n    if (!currentObject) {\n        return newObject;\n    }\n\n    // If the new object does not exist but the current object does, or the new\n    // object is strictly equal to the current object, return the current object\n    if (!newObject || currentObject === newObject) {\n        return currentObject;\n    }\n\n    // If both objects exist, but some values might be different, perform a merge.\n    // Retain values that are equal and only replace them with the new values if\n    // they are different.\n    return (Object.keys(newObject) as Array<keyof T>)\n        .reduce((result, key) => {\n            const currentValue = result[key];\n            const newValue = newObject[key];\n\n            if (isPlainObject(currentValue) && isPlainObject(newValue)) {\n                return objectSet(result, key, objectMerge(currentValue, newValue));\n            }\n\n            if (isArray(currentValue) && isArray(newValue)) {\n                return objectSet(result, key, arrayReplace(currentValue, newValue) as any);\n            }\n\n            return objectSet(result, key, newValue as any);\n        }, currentObject);\n}\n\nexport default objectMerge;\n","import Cart from './cart';\n\nexport default interface CartState {\n    data?: Cart;\n    errors: CartErrorsState;\n    statuses: CartStatusesState;\n}\n\nexport interface CartErrorsState {\n    loadError?: Error;\n}\n\nexport interface CartStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CartState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport Cart from './cart';\nimport CartState, { CartErrorsState, CartStatusesState, DEFAULT_STATE } from './cart-state';\n\nexport default function cartReducer(\n    state: CartState = DEFAULT_STATE,\n    action: Action\n): CartState {\n    const reducer = combineReducers<CartState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Cart | undefined,\n    action: BillingAddressAction | CheckoutAction | ConsignmentAction | CouponAction | GiftCertificateAction\n): Cart | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectMerge(data, action.payload && action.payload.cart);\n\n    default:\n        return data;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CartStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction\n): CartStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n\nfunction errorsReducer(\n    errors: CartErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction\n): CartErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n","import { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonState {\n    data: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonDataState | undefined\n    };\n    errors: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonErrorsState | undefined\n    };\n    statuses: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonStatusesState | undefined\n    };\n}\n\nexport interface CheckoutButtonDataState {\n    initializedContainers: {\n        [key: string]: boolean;\n    };\n}\n\nexport interface CheckoutButtonErrorsState {\n    initializeError?: Error;\n    deinitializeError?: Error;\n}\n\nexport interface CheckoutButtonStatusesState {\n    isInitializing?: boolean;\n    isDeinitializing?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutButtonState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { CheckoutButtonAction, CheckoutButtonActionType } from './checkout-button-actions';\nimport CheckoutButtonState, { CheckoutButtonDataState, CheckoutButtonErrorsState, CheckoutButtonStatusesState, DEFAULT_STATE } from './checkout-button-state';\n\nconst DEFAULT_DATA_STATE: CheckoutButtonDataState = { initializedContainers: {} };\nconst DEFAULT_ERROR_STATE: CheckoutButtonErrorsState = {};\nconst DEFAULT_STATUS_STATE: CheckoutButtonStatusesState = {};\n\nexport default function checkoutButtonReducer(\n    state: CheckoutButtonState = DEFAULT_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<CheckoutButtonState>({\n        data: combineReducers({\n            [action.meta.methodId]: dataReducer,\n        }),\n        errors: combineReducers({\n            [action.meta.methodId]: errorsReducer,\n        }),\n        statuses: combineReducers({\n            [action.meta.methodId]: statusesReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutButtonDataState = DEFAULT_DATA_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonDataState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        if (!action.meta || !action.meta.containerId) {\n            return data;\n        }\n\n        return objectMerge(data, {\n            initializedContainers: {\n                [action.meta.containerId]: true,\n            },\n        });\n\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(data, 'initializedContainers', {});\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CheckoutButtonErrorsState = DEFAULT_ERROR_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonErrorsState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(errors, 'initializeError', undefined);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n        return objectSet(errors, 'initializeError', action.payload);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(errors, 'deinitializeError', undefined);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n        return objectSet(errors, 'deinitializeError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutButtonStatusesState = DEFAULT_STATUS_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonStatusesState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n        return objectSet(statuses, 'isInitializing', true);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(statuses, 'isInitializing', false);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n        return objectSet(statuses, 'isDeinitializing', true);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(statuses, 'isDeinitializing', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Config from './config';\n\nexport default interface ConfigState {\n    data?: Config;\n    meta?: ConfigMetaState;\n    errors: ConfigErrorsState;\n    statuses: ConfigStatusesState;\n}\n\nexport interface ConfigMetaState {\n    externalSource?: string;\n}\n\nexport interface ConfigErrorsState {\n    loadError?: Error;\n}\n\nexport interface ConfigStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ConfigState = {\n    meta: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport Config from './config';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\nimport ConfigState, { ConfigErrorsState, ConfigStatusesState, DEFAULT_STATE } from './config-state';\n\nexport default function configReducer(\n    state: ConfigState = DEFAULT_STATE,\n    action: Action\n): ConfigState {\n    const reducer = combineReducers<ConfigState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Config | undefined,\n    action: LoadConfigAction\n): Config | undefined {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConfigErrorsState = DEFAULT_STATE.errors,\n    action: LoadConfigAction\n): ConfigErrorsState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConfigStatusesState = DEFAULT_STATE.statuses,\n    action: LoadConfigAction\n): ConfigStatusesState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConfigActionType.LoadConfigSucceeded:\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport Coupon from './coupon';\n\nexport default interface CouponState {\n    data?: Coupon[];\n    errors: CouponErrorsState;\n    statuses: CouponStatusesState;\n}\n\nexport interface CouponErrorsState {\n    applyCouponError?: RequestError<StorefrontErrorResponseBody>;\n    removeCouponError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface CouponStatusesState {\n    isApplyingCoupon?: boolean;\n    isRemovingCoupon?: boolean;\n}\n\nexport const DEFAULT_STATE: CouponState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport Coupon from './coupon';\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport CouponState, { CouponErrorsState, CouponStatusesState, DEFAULT_STATE } from './coupon-state';\n\nexport default function couponReducer(\n    state: CouponState = DEFAULT_STATE,\n    action: Action\n): CouponState {\n    const reducer = combineReducers<CouponState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Coupon[] | undefined,\n    action: CouponAction | CheckoutAction | OrderAction | ConsignmentAction\n): Coupon[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return arrayReplace(data, action.payload && action.payload.coupons);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CouponErrorsState = {},\n    action: CouponAction\n): CouponErrorsState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n    case CouponActionType.ApplyCouponSucceeded:\n        return objectSet(errors, 'applyCouponError', undefined);\n\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(errors, 'applyCouponError', action.payload);\n\n    case CouponActionType.RemoveCouponRequested:\n    case CouponActionType.RemoveCouponSucceeded:\n        return objectSet(errors, 'removeCouponError', undefined);\n\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(errors, 'removeCouponError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CouponStatusesState = {},\n    action: CouponAction\n): CouponStatusesState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n        return objectSet(statuses, 'isApplyingCoupon', true);\n\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(statuses, 'isApplyingCoupon', false);\n\n    case CouponActionType.RemoveCouponRequested:\n        return objectSet(statuses, 'isRemovingCoupon', true);\n\n    case CouponActionType.RemoveCouponSucceeded:\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(statuses, 'isRemovingCoupon', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport GiftCertificate from './gift-certificate';\n\nexport default interface GiftCertificateState {\n    data?: GiftCertificate[];\n    errors: GiftCertificateErrorsState;\n    statuses: GiftCertificateStatusesState;\n}\n\nexport interface GiftCertificateErrorsState {\n    applyGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n    removeGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface GiftCertificateStatusesState {\n    isApplyingGiftCertificate?: boolean;\n    isRemovingGiftCertificate?: boolean;\n}\n\nexport const DEFAULT_STATE: GiftCertificateState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport GiftCertificate from './gift-certificate';\nimport { GiftCertificateAction, GiftCertificateActionType } from './gift-certificate-actions';\nimport GiftCertificateState, { DEFAULT_STATE, GiftCertificateErrorsState, GiftCertificateStatusesState } from './gift-certificate-state';\n\nexport default function giftCertificateReducer(\n    state: GiftCertificateState = DEFAULT_STATE,\n    action: Action\n): GiftCertificateState {\n    const reducer = combineReducers<GiftCertificateState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: GiftCertificate[] | undefined,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificate[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return arrayReplace(data, action.payload && action.payload.giftCertificates);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: GiftCertificateErrorsState = DEFAULT_STATE.errors,\n    action: GiftCertificateAction\n): GiftCertificateErrorsState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n        return objectSet(errors, 'applyGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(errors, 'applyGiftCertificateError', action.payload);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectSet(errors, 'removeGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(errors, 'removeGiftCertificateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: GiftCertificateStatusesState = DEFAULT_STATE.statuses,\n    action: GiftCertificateAction\n): GiftCertificateStatusesState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n        return objectSet(statuses, 'isApplyingGiftCertificate', true);\n\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(statuses, 'isApplyingGiftCertificate', false);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n        return objectSet(statuses, 'isRemovingGiftCertificate', true);\n\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(statuses, 'isRemovingGiftCertificate', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Customer from './customer';\n\nexport default interface CustomerState {\n    data?: Customer;\n}\n\nexport const DEFAULT_STATE: CustomerState = {};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { objectMerge } from '../common/utility';\n\nimport Customer from './customer';\nimport CustomerState, { DEFAULT_STATE } from './customer-state';\n\nexport default function customerReducer(\n    state: CustomerState = DEFAULT_STATE,\n    action: CheckoutAction\n): CustomerState {\n    const reducer = combineReducers<CustomerState, CheckoutAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Customer | undefined,\n    action: CheckoutAction\n): Customer | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectMerge(data, action.payload && action.payload.customer);\n\n    default:\n        return data;\n    }\n}\n","export default interface CustomerStrategyState {\n    data: CustomerStrategyDataState;\n    errors: CustomerStrategyErrorsState;\n    statuses: CustomerStrategyStatusesState;\n}\n\nexport interface CustomerStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface CustomerStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    signInError?: Error;\n    signInMethodId?: string;\n    signOutError?: Error;\n    signOutMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface CustomerStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isSigningIn?: boolean;\n    isSigningOut?: boolean;\n    signInMethodId?: string;\n    signOutMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: CustomerStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { CustomerStrategyAction, CustomerStrategyActionType } from './customer-strategy-actions';\nimport CustomerStrategyState, { CustomerStrategyDataState, CustomerStrategyErrorsState, CustomerStrategyStatusesState, DEFAULT_STATE } from './customer-strategy-state';\n\nexport default function customerStrategyReducer(\n    state: CustomerStrategyState = DEFAULT_STATE,\n    action: Action\n): CustomerStrategyState {\n    const reducer = combineReducers<CustomerStrategyState, CustomerStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CustomerStrategyDataState = DEFAULT_STATE.data,\n    action: CustomerStrategyAction\n): CustomerStrategyDataState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CustomerStrategyErrorsState = DEFAULT_STATE.errors,\n    action: CustomerStrategyAction\n): CustomerStrategyErrorsState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(errors, {\n            signInError: undefined,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n        return objectMerge(errors, {\n            signInError: action.payload,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(errors, {\n            signOutError: undefined,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n        return objectMerge(errors, {\n            signOutError: action.payload,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: CustomerStrategyAction\n): CustomerStrategyStatusesState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n        return objectMerge(statuses, {\n            isSigningIn: true,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(statuses, {\n            isSigningIn: false,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n        return objectMerge(statuses, {\n            isSigningOut: true,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(statuses, {\n            isSigningOut: false,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n         });\n\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n         });\n\n    default:\n        return statuses;\n    }\n}\n","import Country from './country';\n\nexport default interface CountryState {\n    data?: Country[];\n    errors: CountryErrorsState;\n    statuses: CountryStatusesState;\n}\n\nexport interface CountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface CountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\n\nimport Country from './country';\nimport { CountryActionType, LoadCountriesAction } from './country-actions';\nimport CountryState, { CountryErrorsState, CountryStatusesState, DEFAULT_STATE } from './country-state';\n\nexport default function countryReducer(\n    state: CountryState = DEFAULT_STATE,\n    action: Action\n): CountryState {\n    const reducer = combineReducers<CountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadCountriesAction\n): CountryErrorsState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n    case CountryActionType.LoadCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadCountriesAction\n): CountryStatusesState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CountryActionType.LoadCountriesSucceeded:\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport { InternalOrderMeta, InternalOrderPayment } from './internal-order';\nimport Order from './order';\n\nexport default interface OrderState {\n    data?: OrderDataState;\n    meta?: OrderMetaState;\n    errors: OrderErrorsState;\n    statuses: OrderStatusesState;\n}\n\nexport type OrderDataState = Omit<Order, 'billingAddress' | 'coupons'>;\n\nexport interface OrderMetaState extends InternalOrderMeta {\n    token?: string;\n    orderToken?: string;\n    callbackUrl?: string;\n    payment?: InternalOrderPayment;\n}\n\nexport interface OrderErrorsState {\n    loadError?: Error;\n    submitError?: Error;\n    finalizeError?: Error;\n}\n\nexport interface OrderStatusesState {\n    isLoading?: boolean;\n    isSubmitting?: boolean;\n    isFinalizing?: boolean;\n}\n\nexport const DEFAULT_STATE: OrderState = {\n    errors: {},\n    meta: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { OrderAction, OrderActionType } from './order-actions';\nimport OrderState, { DEFAULT_STATE, OrderDataState, OrderErrorsState, OrderMetaState, OrderStatusesState } from './order-state';\n\nexport default function orderReducer(\n    state: OrderState = DEFAULT_STATE,\n    action: Action\n): OrderState {\n    const reducer = combineReducers<OrderState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: OrderDataState | undefined,\n    action: OrderAction\n): OrderDataState | undefined {\n    switch (action.type) {\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n        return objectMerge(data, omit(action.payload, ['billingAddress', 'coupons'])) as OrderDataState;\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: OrderMetaState | undefined,\n    action: OrderAction\n): OrderMetaState | undefined {\n    switch (action.type) {\n    case OrderActionType.FinalizeOrderSucceeded:\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectMerge(meta, {\n            ...action.meta,\n            callbackUrl: action.payload && action.payload.order.callbackUrl,\n            orderToken: action.payload && action.payload.order.token,\n            payment: action.payload && action.payload.order && action.payload.order.payment,\n        });\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: OrderErrorsState = DEFAULT_STATE.errors,\n    action: OrderAction\n): OrderErrorsState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: OrderStatusesState = DEFAULT_STATE.statuses,\n    action: OrderAction\n): OrderStatusesState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentAction, PaymentActionType } from './payment-actions';\nimport PaymentResponseBody from './payment-response-body';\nimport PaymentState from './payment-state';\n\nexport default function paymentReducer(state: PaymentState = {}, action: PaymentAction): PaymentState {\n    const reducer = combineReducers<PaymentState, PaymentAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: PaymentResponseBody | undefined, action: PaymentAction): PaymentResponseBody | undefined {\n    switch (action.type) {\n    case PaymentActionType.SubmitPaymentSucceeded:\n        return action.payload;\n\n    default:\n        return data;\n    }\n}\n","import PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport default interface PaymentMethodState {\n    data?: PaymentMethod[];\n    meta?: PaymentMethodMeta;\n    errors: PaymentMethodErrorsState;\n    statuses: PaymentMethodStatusesState;\n}\n\nexport interface PaymentMethodErrorsState {\n    loadMethodId?: string;\n    loadError?: Error;\n    loadMethodError?: Error;\n}\n\nexport interface PaymentMethodStatusesState {\n    loadMethodId?: string;\n    isLoading?: boolean;\n    isLoadingMethod?: boolean;\n}\n\nexport const DEFAULT_STATE: PaymentMethodState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, mergeOrPush, objectMerge, objectSet } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport { PaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE, PaymentMethodErrorsState, PaymentMethodStatusesState } from './payment-method-state';\n\nexport default function paymentMethodReducer(\n    state: PaymentMethodState = DEFAULT_STATE,\n    action: Action\n): PaymentMethodState {\n    const reducer = combineReducers<PaymentMethodState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentMethod[] | undefined,\n    action: PaymentMethodAction\n): PaymentMethod[] | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return mergeOrPush(data || [], action.payload, action.payload && {\n            id: action.payload.id,\n            gateway: action.payload.gateway,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return arrayReplace(data, action.payload, {\n            matchObject: (methodA, methodB) => (\n                methodA.id === methodB.id && methodA.gateway === methodB.gateway\n            ),\n        });\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: PaymentMethodMeta | undefined,\n    action: PaymentMethodAction\n): PaymentMethodMeta | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: PaymentMethodErrorsState = DEFAULT_STATE.errors,\n    action: PaymentMethodAction\n): PaymentMethodErrorsState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return objectMerge(errors, {\n            loadMethodId: undefined,\n            loadMethodError: undefined,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(errors, {\n            loadMethodId: action.meta.methodId,\n            loadMethodError: action.payload,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentMethodStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentMethodAction\n): PaymentMethodStatusesState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n        return objectMerge(statuses, {\n            isLoadingMethod: true,\n            loadMethodId: action.meta.methodId,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(statuses, {\n            isLoadingMethod: false,\n            loadMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { findIndex, pick, pickBy, ValueKeyIteratee } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\n\n/**\n * Push an item to an array if it doesn't exist in the array. Otherwise, merge\n * with the existing item in the array. This function always returns a new array.\n */\nexport default function mergeOrPush<T>(\n    array: T[],\n    item?: T,\n    predicate?: ValueKeyIteratee<T>\n): T[] {\n    if (!item) {\n        return array;\n    }\n\n    const defaultPredicate = pick(item, 'id');\n    const index = findIndex(array, typeof predicate === 'object' ? pickBy(predicate) : (predicate || defaultPredicate));\n    const newArray = [...array];\n\n    if (index === -1) {\n        newArray.push(item);\n    } else {\n        const existingItem = array[index];\n\n        newArray[index] = isPlainObject(existingItem) && isPlainObject(item) ?\n            objectMerge(existingItem, item) :\n            item;\n    }\n\n    return newArray;\n}\n","export default interface PaymentStrategyState {\n    data: PaymentStrategyDataState;\n    errors: PaymentStrategyErrorsState;\n    statuses: PaymentStrategyStatusesState;\n}\n\nexport interface PaymentStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface PaymentStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    executeError?: Error;\n    executeMethodId?: string;\n    finalizeError?: Error;\n    finalizeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface PaymentStrategyStatusesState {\n    deinitializeMethodId?: string;\n    executeMethodId?: string;\n    finalizeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isExecuting?: boolean;\n    isFinalizing?: boolean;\n    isInitializing?: boolean;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: PaymentStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { PaymentStrategyAction, PaymentStrategyActionType } from './payment-strategy-actions';\nimport PaymentStrategyState, { DEFAULT_STATE, PaymentStrategyDataState, PaymentStrategyErrorsState, PaymentStrategyStatusesState } from './payment-strategy-state';\n\nexport default function paymentStrategyReducer(\n    state: PaymentStrategyState = DEFAULT_STATE,\n    action: Action\n): PaymentStrategyState {\n    const reducer = combineReducers<PaymentStrategyState, PaymentStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentStrategyDataState = DEFAULT_STATE.data,\n    action: PaymentStrategyAction\n): PaymentStrategyDataState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: PaymentStrategyErrorsState = DEFAULT_STATE.errors,\n    action: PaymentStrategyAction\n): PaymentStrategyErrorsState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(errors, {\n            executeError: undefined,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n        return objectMerge(errors, {\n            executeError: action.payload,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(errors, {\n            finalizeError: undefined,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n        return objectMerge(errors, {\n            finalizeError: action.payload,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentStrategyAction\n): PaymentStrategyStatusesState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n        return objectMerge(statuses, {\n            isExecuting: true,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(statuses, {\n            isExecuting: false,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n        return objectMerge(statuses, {\n            isFinalizing: true,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(statuses, {\n            isFinalizing: false,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import PaymentInstrument, { VaultAccessToken } from './instrument';\n\nexport default interface InstrumentState {\n    data?: PaymentInstrument[];\n    meta?: InstrumentMeta;\n    errors: InstrumentErrorState;\n    statuses: InstrumentStatusState;\n}\n\nexport interface InstrumentErrorState {\n    deleteError?: Error;\n    failedInstrument?: string;\n    loadError?: Error;\n    vaultError?: Error;\n}\n\nexport interface InstrumentStatusState {\n    isDeleting?: boolean;\n    isLoading?: boolean;\n    isVaulting?: boolean;\n    deletingInstrument?: string;\n}\n\nexport type InstrumentMeta = VaultAccessToken;\n\nexport const DEFAULT_STATE = {\n    data: [],\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../../common/utility';\n\nimport PaymentInstrument from './instrument';\nimport { InstrumentAction, InstrumentActionType } from './instrument-actions';\nimport InstrumentState, { DEFAULT_STATE, InstrumentErrorState, InstrumentMeta, InstrumentStatusState } from './instrument-state';\n\nexport default function instrumentReducer(\n    state: InstrumentState = DEFAULT_STATE,\n    action: Action\n): InstrumentState {\n    const reducer = combineReducers<InstrumentState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentInstrument[] = DEFAULT_STATE.data,\n    action: InstrumentAction\n): PaymentInstrument[] {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return arrayReplace(data, action.payload && action.payload.vaultedInstruments || []);\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: InstrumentMeta | undefined,\n    action: InstrumentAction\n): InstrumentMeta | undefined {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: InstrumentErrorState = DEFAULT_STATE.errors,\n    action: InstrumentAction\n): InstrumentErrorState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(errors, {\n            deleteError: undefined,\n            failedInstrument: undefined,\n        });\n\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(errors, {\n            deleteError: action.payload,\n            failedInstrument: action.meta.instrumentId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: InstrumentStatusState = DEFAULT_STATE.statuses,\n    action: InstrumentAction\n): InstrumentStatusState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n        return objectMerge(statuses, {\n            isDeleting: true,\n            deletingInstrument: action.meta.instrumentId,\n        });\n\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(statuses, {\n            isDeleting: false,\n            deletingInstrument: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { AmazonPayRemoteCheckout } from './methods';\n\nexport default interface RemoteCheckoutState {\n    data: RemoteCheckoutStateData;\n}\n\nexport interface RemoteCheckoutStateData {\n    amazon?: AmazonPayRemoteCheckout;\n}\n\nexport const DEFAULT_STATE: RemoteCheckoutState = {\n    data: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport RemoteCheckout from './remote-checkout';\nimport { RemoteCheckoutAction, RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default function remoteCheckoutReducer(\n    state: RemoteCheckoutState = DEFAULT_STATE,\n    action: RemoteCheckoutAction\n): RemoteCheckoutState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<RemoteCheckoutState>({\n        data: combineReducers<RemoteCheckoutStateData>({\n            [action.meta.methodId]: dataReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: RemoteCheckout,\n    action: RemoteCheckoutAction\n): RemoteCheckout {\n    switch (action.type) {\n    case RemoteCheckoutActionType.InitializeRemoteBillingSucceeded:\n        return objectSet(data, 'billing' as any, action.payload && action.payload.billing);\n\n    case RemoteCheckoutActionType.InitializeRemoteShippingSucceeded:\n        return objectSet(data, 'shipping' as any, action.payload && action.payload.shipping);\n\n    case RemoteCheckoutActionType.LoadRemoteSettingsSucceeded:\n        return objectSet(data, 'settings', action.payload);\n\n    case RemoteCheckoutActionType.UpdateRemoteCheckout:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n","import Consignment from './consignment';\n\nexport default interface ConsignmentState {\n    data?: Consignment[];\n    errors: ConsignmentErrorsState;\n    statuses: ConsignmentStatusesState;\n}\n\nexport interface ConsignmentErrorsState {\n    loadError?: Error;\n    loadShippingOptionsError?: Error;\n    createError?: Error;\n    updateError: { [key: string]: Error | undefined };\n    deleteError: { [key: string]: Error | undefined };\n    updateShippingOptionError: { [key: string]: Error | undefined };\n}\n\nexport interface ConsignmentStatusesState {\n    isLoading?: boolean;\n    isLoadingShippingOptions?: boolean;\n    isCreating?: boolean;\n    isUpdating: { [key: string]: boolean };\n    isDeleting: { [key: string]: boolean };\n    isUpdatingShippingOption: { [key: string]: boolean };\n}\n\nexport const DEFAULT_STATE: ConsignmentState = {\n    errors: {\n        updateShippingOptionError: {},\n        updateError: {},\n        deleteError: {},\n    },\n    statuses: {\n        isUpdating: {},\n        isUpdatingShippingOption: {},\n        isDeleting: {},\n    },\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType } from '../coupon';\nimport { CustomerAction, CustomerActionType } from '../customer';\n\nimport Consignment from './consignment';\nimport { ConsignmentAction, ConsignmentActionType } from './consignment-actions';\nimport ConsignmentState, { ConsignmentErrorsState, ConsignmentStatusesState, DEFAULT_STATE } from './consignment-state';\n\nexport default function consignmentReducer(\n    state: ConsignmentState = DEFAULT_STATE,\n    action: Action\n): ConsignmentState {\n    const reducer = combineReducers<ConsignmentState, ConsignmentAction | CheckoutAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Consignment[] | undefined,\n    action: ConsignmentAction | CheckoutAction | CouponAction | CustomerAction\n): Consignment[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n        return arrayReplace(data, action.payload && action.payload.consignments);\n\n    case CustomerActionType.SignOutCustomerSucceeded:\n        return arrayReplace(data, []);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConsignmentErrorsState = DEFAULT_STATE.errors,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n        return objectSet(errors, 'createError', undefined);\n\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(errors, 'createError', action.payload);\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConsignmentStatusesState = DEFAULT_STATE.statuses,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(statuses, 'isLoadingShippingOptions', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(statuses, 'isLoadingShippingOptions', false);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n        return objectSet(statuses, 'isCreating', true);\n\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(statuses, 'isCreating', false);\n\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    default:\n        return statuses;\n    }\n}\n","import { Country } from '../geography';\n\nexport default interface ShippingCountryState {\n    data?: Country[];\n    errors: ShippingCountryErrorsState;\n    statuses: ShippingCountryStatusesState;\n}\n\nexport interface ShippingCountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface ShippingCountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ShippingCountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { Country } from '../geography';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryState, { DEFAULT_STATE, ShippingCountryErrorsState, ShippingCountryStatusesState } from './shipping-country-state';\n\nexport default function shippingCountryReducer(\n    state: ShippingCountryState = DEFAULT_STATE,\n    action: Action\n): ShippingCountryState {\n    const reducer = combineReducers<ShippingCountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadShippingCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ShippingCountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadShippingCountriesAction\n): ShippingCountryErrorsState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingCountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadShippingCountriesAction\n): ShippingCountryStatusesState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default interface ShippingStrategyState {\n    data: ShippingStrategyDataState;\n    errors: ShippingStrategyErrorsState;\n    statuses: ShippingStrategyStatusesState;\n}\n\nexport interface ShippingStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface ShippingStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    updateAddressError?: Error;\n    updateAddressMethodId?: string;\n    selectOptionError?: Error;\n    selectOptionMethodId?: string;\n}\n\nexport interface ShippingStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isUpdatingAddress?: boolean;\n    isSelectingOption?: boolean;\n    updateAddressMethodId?: string;\n    selectOptionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: ShippingStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { ShippingStrategyAction, ShippingStrategyActionType } from './shipping-strategy-actions';\nimport ShippingStrategyState, { DEFAULT_STATE, ShippingStrategyDataState, ShippingStrategyErrorsState, ShippingStrategyStatusesState } from './shipping-strategy-state';\n\nexport default function shippingStrategyReducer(\n    state: ShippingStrategyState = DEFAULT_STATE,\n    action: Action\n): ShippingStrategyState {\n    const reducer = combineReducers<ShippingStrategyState, ShippingStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: ShippingStrategyDataState = DEFAULT_STATE.data,\n    action: ShippingStrategyAction\n): ShippingStrategyDataState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: ShippingStrategyErrorsState = DEFAULT_STATE.errors,\n    action: ShippingStrategyAction\n): ShippingStrategyErrorsState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(errors, {\n            updateAddressError: undefined,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n        return objectMerge(errors, {\n            updateAddressError: action.payload,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(errors, {\n            selectOptionError: undefined,\n            selectOptionMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n        return objectMerge(errors, {\n            selectOptionError: action.payload,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: ShippingStrategyAction\n): ShippingStrategyStatusesState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n        return objectMerge(statuses, {\n            isUpdatingAddress: true,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(statuses, {\n            isUpdatingAddress: false,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n        return objectMerge(statuses, {\n            isSelectingOption: true,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(statuses, {\n            isSelectingOption: false,\n            selectOptionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet } from '../common/utility';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditState, { StoreCreditErrorsState, StoreCreditStatusesState } from './store-credit-state';\n\nconst DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function storeCreditReducer(\n    state: StoreCreditState = DEFAULT_STATE,\n    action: Action\n): StoreCreditState {\n    const reducer = combineReducers<StoreCreditState>({\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: StoreCreditErrorsState = DEFAULT_STATE.errors,\n    action: StoreCreditAction\n): StoreCreditErrorsState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n        return objectSet(errors, 'applyError', undefined);\n\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(errors, 'applyError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: StoreCreditStatusesState = DEFAULT_STATE.statuses,\n    action: StoreCreditAction\n): StoreCreditStatusesState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n        return objectSet(statuses, 'isApplying', true);\n\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(statuses, 'isApplying', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport Checkout from './checkout';\n\nexport default interface CheckoutState {\n    data?: CheckoutDataState;\n    errors: CheckoutErrorsState;\n    statuses: CheckoutStatusesState;\n}\n\nexport type CheckoutDataState = Omit<Checkout, 'billingAddress' | 'cart' | 'consignments' | 'coupons' | 'giftCertificates'>;\n\nexport interface CheckoutErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n}\n\nexport interface CheckoutStatusesState {\n    isExecutingSpamCheck?: boolean;\n    isLoading?: boolean;\n    isUpdating?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\nimport { SpamProtectionAction, SpamProtectionActionType } from '../spam-protection';\nimport { StoreCreditAction, StoreCreditActionType } from '../store-credit';\n\nimport { CheckoutAction, CheckoutActionType } from './checkout-actions';\nimport CheckoutState, { CheckoutDataState, CheckoutErrorsState, CheckoutStatusesState, DEFAULT_STATE } from './checkout-state';\n\nexport default function checkoutReducer(\n    state: CheckoutState = DEFAULT_STATE,\n    action: Action\n): CheckoutState {\n    const reducer = combineReducers<CheckoutState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutDataState | undefined,\n    action: CheckoutAction | BillingAddressAction | ConsignmentAction | CouponAction |\n        GiftCertificateAction | OrderAction | SpamProtectionAction | StoreCreditAction\n): CheckoutDataState | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case SpamProtectionActionType.ExecuteSucceeded:\n        return objectMerge(data, omit(action.payload, [\n            'billingAddress',\n            'cart',\n            'consignments',\n            'customer',\n            'coupons',\n            'giftCertificates',\n        ])) as CheckoutDataState;\n\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectSet(data, 'orderId', action.payload && action.payload.order.orderId) ;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CheckoutErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | OrderAction\n): CheckoutErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | OrderAction | SpamProtectionAction\n): CheckoutStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case SpamProtectionActionType.ExecuteRequested:\n        return objectSet(statuses, 'isExecutingSpamCheck', true);\n\n    case SpamProtectionActionType.ExecuteFailed:\n    case SpamProtectionActionType.ExecuteSucceeded:\n        return objectSet(statuses, 'isExecutingSpamCheck', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default function guard<T>(value: T, errorFactory?: () => Error): NonNullable<T> {\n    if (value === undefined || value === null) {\n        throw errorFactory ? errorFactory() : new Error('An unexpected error has occurred.');\n    }\n\n    return value as NonNullable<T>;\n}\n","import { deepFreeze } from '@bigcommerce/data-store';\n\n// tslint:disable-next-line:ban-types\ntype FunctionProperties<T> = { [K in keyof T]: T[K] extends Function ? T[K] : never };\n\nexport default function createFreezeProxy<T extends object>(target: T): T {\n    return createProxy(target, (target, name) =>\n        (...args: any[]) => deepFreeze(target[name].call(target, ...args))\n    );\n}\n\nexport function createFreezeProxies<T extends object, TMap extends { [key: string]: T }>(map: TMap): TMap {\n    return Object.keys(map)\n        .reduce((result, key) => {\n            result[key] = createFreezeProxy(map[key]);\n\n            return result;\n        }, {} as { [key: string]: T }) as TMap;\n}\n\nfunction createProxy<T extends object>(target: T, trap: (target: FunctionProperties<T>, name: keyof FunctionProperties<T>, proxy: T) => any): T {\n    const proxy = Object.create(target);\n\n    traversePrototypeOf(target, prototype => {\n        Object.getOwnPropertyNames(prototype)\n            .forEach(name => {\n                if (name === 'constructor' || typeof proxy[name] !== 'function' || name.charAt(0) === '_') {\n                    return;\n                }\n\n                proxy[name] = trap(target as FunctionProperties<T>, name as keyof T, proxy);\n            });\n    });\n\n    return proxy;\n}\n\nfunction traversePrototypeOf(target: object, iteratee: (prototype: object) => void): void {\n    let prototype = Object.getPrototypeOf(target);\n\n    while (prototype) {\n        iteratee(prototype);\n\n        prototype = Object.getPrototypeOf(prototype);\n    }\n}\n","import PaymentInstrument from './instrument';\n\ninterface SupportedInstruments {\n    [key: string]: Pick<PaymentInstrument, 'method' | 'provider'>;\n}\n\nconst supportedInstruments: SupportedInstruments = {\n    'adyenv2.scheme': {\n        provider: 'adyenv2',\n        method: 'scheme',\n    },\n    'adyenv2.bcmc': {\n        provider: 'adyenv2',\n        method: 'bcmc',\n    },\n    braintree: {\n        provider: 'braintree',\n        method: 'credit_card',\n    },\n    braintreepaypal: {\n        provider: 'braintree',\n        method: 'paypal',\n    },\n    authorizenet: {\n        provider: 'authorizenet',\n        method: 'credit_card',\n    },\n    stripe: {\n        provider: 'stripe',\n        method: 'credit_card',\n    },\n    stripev3: {\n        provider: 'stripev3',\n        method: 'credit_card',\n    },\n    cybersource: {\n        provider: 'cybersource',\n        method: 'credit_card',\n    },\n    converge: {\n        provider: 'converge',\n        method: 'credit_card',\n    },\n    bluesnapv2: {\n        provider: 'bluesnapv2',\n        method: 'credit_card',\n    },\n    paymetric: {\n        provider: 'paymetric',\n        method: 'credit_card',\n    },\n    'barclaycard.credit_card': {\n        provider: 'barclaycard',\n        method: 'credit_card',\n    },\n};\n\nexport default supportedInstruments;\n","import { identity, isEqual, pickBy } from 'lodash';\n\nimport Address from './address';\n\nexport default function isAddressEqual(addressA: Partial<Address>, addressB: Partial<Address>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<Address>): Partial<Address> {\n    return pickBy({\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.address1,\n        address2: address.address2,\n        city: address.city,\n        stateOrProvince: address.stateOrProvince,\n        countryCode: address.countryCode,\n        postalCode: address.postalCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    }, identity);\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport default interface StoreCreditState {\n    errors: StoreCreditErrorsState;\n    statuses: StoreCreditStatusesState;\n}\n\nexport interface StoreCreditErrorsState {\n    applyError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface StoreCreditStatusesState {\n    isApplying?: boolean;\n}\n\nexport const DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n","import { createBillingAddressSelectorFactory } from '../billing';\nimport { createCartSelectorFactory } from '../cart';\nimport { createCheckoutButtonSelectorFactory } from '../checkout-buttons';\nimport { createFreezeProxies } from '../common/utility';\nimport { createConfigSelectorFactory } from '../config';\nimport { createCouponSelectorFactory, createGiftCertificateSelectorFactory } from '../coupon';\nimport { createCustomerSelectorFactory, createCustomerStrategySelectorFactory } from '../customer';\nimport { createFormSelectorFactory } from '../form';\nimport { createCountrySelectorFactory } from '../geography';\nimport { createOrderSelectorFactory } from '../order';\nimport { createPaymentMethodSelectorFactory, createPaymentSelectorFactory, createPaymentStrategySelectorFactory } from '../payment';\nimport { createInstrumentSelectorFactory } from '../payment/instrument';\nimport { createRemoteCheckoutSelectorFactory } from '../remote-checkout';\nimport { createConsignmentSelectorFactory, createShippingAddressSelectorFactory, createShippingCountrySelectorFactory, createShippingStrategySelectorFactory } from '../shipping';\nimport { createStoreCreditSelectorFactory } from '../store-credit';\n\nimport { createCheckoutSelectorFactory } from './checkout-selector';\nimport { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type InternalCheckoutSelectorsFactory = (\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n) => InternalCheckoutSelectors;\n\nexport function createInternalCheckoutSelectorsFactory(): InternalCheckoutSelectorsFactory {\n    const createBillingAddressSelector = createBillingAddressSelectorFactory();\n    const createCartSelector = createCartSelectorFactory();\n    const createCheckoutButtonSelector = createCheckoutButtonSelectorFactory();\n    const createConfigSelector = createConfigSelectorFactory();\n    const createCountrySelector = createCountrySelectorFactory();\n    const createCouponSelector = createCouponSelectorFactory();\n    const createCustomerSelector = createCustomerSelectorFactory();\n    const createCustomerStrategySelector = createCustomerStrategySelectorFactory();\n    const createGiftCertificateSelector = createGiftCertificateSelectorFactory();\n    const createInstrumentSelector = createInstrumentSelectorFactory();\n    const createFormSelector = createFormSelectorFactory();\n    const createPaymentMethodSelector = createPaymentMethodSelectorFactory();\n    const createPaymentStrategySelector = createPaymentStrategySelectorFactory();\n    const createRemoteCheckoutSelector = createRemoteCheckoutSelectorFactory();\n    const createShippingAddressSelector = createShippingAddressSelectorFactory();\n    const createShippingCountrySelector = createShippingCountrySelectorFactory();\n    const createShippingStrategySelector = createShippingStrategySelectorFactory();\n    const createConsignmentSelector = createConsignmentSelectorFactory();\n    const createCheckoutSelector = createCheckoutSelectorFactory();\n    const createOrderSelector = createOrderSelectorFactory();\n    const createPaymentSelector = createPaymentSelectorFactory();\n    const createStoreCreditSelector = createStoreCreditSelectorFactory();\n\n    return (state, options = {}) => {\n        const billingAddress = createBillingAddressSelector(state.billingAddress);\n        const cart = createCartSelector(state.cart);\n        const checkoutButton = createCheckoutButtonSelector(state.checkoutButton);\n        const config = createConfigSelector(state.config);\n        const countries = createCountrySelector(state.countries);\n        const coupons = createCouponSelector(state.coupons);\n        const customer = createCustomerSelector(state.customer);\n        const customerStrategies = createCustomerStrategySelector(state.customerStrategies);\n        const form = createFormSelector(state.config);\n        const giftCertificates = createGiftCertificateSelector(state.giftCertificates);\n        const instruments = createInstrumentSelector(state.instruments);\n        const paymentMethods = createPaymentMethodSelector(state.paymentMethods);\n        const paymentStrategies = createPaymentStrategySelector(state.paymentStrategies);\n        const remoteCheckout = createRemoteCheckoutSelector(state.remoteCheckout);\n        const shippingAddress = createShippingAddressSelector(state.consignments);\n        const shippingCountries = createShippingCountrySelector(state.shippingCountries);\n        const shippingStrategies = createShippingStrategySelector(state.shippingStrategies);\n        const storeCredit = createStoreCreditSelector(state.storeCredit);\n\n        // Compose selectors\n        const consignments = createConsignmentSelector(state.consignments, cart);\n        const checkout = createCheckoutSelector(state.checkout, billingAddress, cart, consignments, coupons, customer, giftCertificates);\n        const order = createOrderSelector(state.order, billingAddress, coupons);\n        const payment = createPaymentSelector(checkout, order);\n\n        const selectors = {\n            billingAddress,\n            cart,\n            checkout,\n            checkoutButton,\n            config,\n            consignments,\n            countries,\n            coupons,\n            customer,\n            customerStrategies,\n            form,\n            giftCertificates,\n            instruments,\n            order,\n            payment,\n            paymentMethods,\n            paymentStrategies,\n            remoteCheckout,\n            shippingAddress,\n            shippingCountries,\n            shippingStrategies,\n            storeCredit,\n        };\n\n        return options.shouldWarnMutation ? createFreezeProxies(selectors) : selectors;\n    };\n}\n\nexport default function createInternalCheckoutSelectors(\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n): InternalCheckoutSelectors {\n    return createInternalCheckoutSelectorsFactory()(state, options);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport BillingAddress from './billing-address';\nimport BillingAddressState, { DEFAULT_STATE } from './billing-address-state';\n\nexport default interface BillingAddressSelector {\n    getBillingAddress(): BillingAddress | undefined;\n    getBillingAddressOrThrow(): BillingAddress;\n    getUpdateError(): Error | undefined;\n    getContinueAsGuestError(): Error | undefined;\n    getLoadError(): Error | undefined;\n    isUpdating(): boolean;\n    isContinuingAsGuest(): boolean;\n    isLoading(): boolean;\n}\n\nexport type BillingAddressSelectorFactory = (state: BillingAddressState) => BillingAddressSelector;\n\nexport function createBillingAddressSelectorFactory(): BillingAddressSelectorFactory {\n    const getBillingAddress = createSelector(\n        (state: BillingAddressState) => state.data,\n        data => () => data\n    );\n\n    const getBillingAddressOrThrow = createSelector(\n        getBillingAddress,\n        getBillingAddress => () => {\n            return guard(getBillingAddress(), () => new MissingDataError(MissingDataErrorType.MissingBillingAddress));\n        }\n    );\n\n    const getUpdateError = createSelector(\n        (state: BillingAddressState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const getContinueAsGuestError = createSelector(\n        (state: BillingAddressState) => state.errors.continueAsGuestError,\n        error => () => error\n    );\n\n    const getLoadError = createSelector(\n        (state: BillingAddressState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isUpdating = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isUpdating,\n        status => () => status\n    );\n\n    const isContinuingAsGuest = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isContinuingAsGuest,\n        status => () => status\n    );\n\n    const isLoading = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: BillingAddressState = DEFAULT_STATE\n    ): BillingAddressSelector => {\n        return {\n            getBillingAddress: getBillingAddress(state),\n            getBillingAddressOrThrow: getBillingAddressOrThrow(state),\n            getUpdateError: getUpdateError(state),\n            getContinueAsGuestError: getContinueAsGuestError(state),\n            getLoadError: getLoadError(state),\n            isUpdating: isUpdating(state),\n            isContinuingAsGuest: isContinuingAsGuest(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoize, memoizeOne } from '@bigcommerce/memoize';\nimport { find, some, values } from 'lodash';\n\nimport { createSelector } from '../common/selector';\n\nimport CheckoutButtonState, { DEFAULT_STATE } from './checkout-button-state';\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonSelector {\n    getState(): CheckoutButtonState;\n    isInitializing(methodId?: CheckoutButtonMethodType): boolean;\n    isInitialized(methodId: CheckoutButtonMethodType, containerId?: string): boolean;\n    isDeinitializing(methodId?: CheckoutButtonMethodType): boolean;\n    getInitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n    getDeinitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n}\n\nexport type CheckoutButtonSelectorFactory = (state: CheckoutButtonState) => CheckoutButtonSelector;\n\nexport function createCheckoutButtonSelectorFactory(): CheckoutButtonSelectorFactory {\n    const getState = createSelector(\n        (state: CheckoutButtonState) => state,\n        state => () => state\n    );\n\n    const isInitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isInitializing) === true;\n            }\n\n            return some(statuses, { isInitializing: true });\n        })\n    );\n\n    const isInitialized = createSelector(\n        (state: CheckoutButtonState) => state.data,\n        data => memoize((methodId: CheckoutButtonMethodType, containerId?: string) => {\n            const method = data[methodId];\n\n            if (!method) {\n                return false;\n            }\n\n            if (!containerId) {\n                return some(method.initializedContainers, isInitialized => isInitialized === true);\n            }\n\n            return method.initializedContainers[containerId] === true;\n        })\n    );\n\n    const isDeinitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isDeinitializing) === true;\n            }\n\n            return some(statuses, { isDeinitializing: true });\n        })\n    );\n\n    const getInitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.initializeError));\n\n            return method && method.initializeError;\n        })\n    );\n\n    const getDeinitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.deinitializeError));\n\n            return method && method.deinitializeError;\n        })\n    );\n\n    return memoizeOne((\n        state: CheckoutButtonState = DEFAULT_STATE\n    ): CheckoutButtonSelector => {\n        return {\n            getState: getState(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isDeinitializing: isDeinitializing(state),\n            getInitializeError: getInitializeError(state),\n            getDeinitializeError: getDeinitializeError(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport Coupon from './coupon';\nimport CouponState, { DEFAULT_STATE } from './coupon-state';\n\nexport default interface CouponSelector {\n    getCoupons(): Coupon[] | undefined;\n    getRemoveError(): RequestError | undefined;\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type CouponSelectorFactory = (state: CouponState) => CouponSelector;\n\nexport function createCouponSelectorFactory(): CouponSelectorFactory {\n    const getCoupons = createSelector(\n        (state: CouponState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: CouponState) => state.errors.removeCouponError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: CouponState) => state.errors.applyCouponError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: CouponState) => !!state.statuses.isApplyingCoupon,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: CouponState) => !!state.statuses.isRemovingCoupon,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CouponState = DEFAULT_STATE\n    ): CouponSelector => {\n        return {\n            getCoupons: getCoupons(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Customer from './customer';\nimport CustomerState, { DEFAULT_STATE } from './customer-state';\n\nexport default interface CustomerSelector {\n    getCustomer(): Customer | undefined;\n}\n\nexport type CustomerSelectorFactory = (state: CustomerState) => CustomerSelector;\n\nexport function createCustomerSelectorFactory(): CustomerSelectorFactory {\n    const getCustomer = createSelector(\n        (state: CustomerState) => state.data,\n        customer => () => customer\n    );\n\n    return memoizeOne((\n        state: CustomerState = DEFAULT_STATE\n    ): CustomerSelector => {\n        return {\n            getCustomer: getCustomer(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default interface RemoteCheckoutSelector {\n    getCheckout<TMethodId extends keyof RemoteCheckoutStateData>(\n        methodId: TMethodId\n    ): RemoteCheckoutStateData[TMethodId] | undefined;\n}\n\nexport type RemoteCheckoutSelectorFactory = (state: RemoteCheckoutState) => RemoteCheckoutSelector;\n\nexport function createRemoteCheckoutSelectorFactory(): RemoteCheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: RemoteCheckoutState) => state.data,\n        data => <TMethodId extends keyof RemoteCheckoutStateData>(methodId: TMethodId) => {\n            return data[methodId];\n        }\n    );\n\n    return memoizeOne((\n        state: RemoteCheckoutState = DEFAULT_STATE\n    ): RemoteCheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { Address } from '../address';\nimport { createSelector } from '../common/selector';\n\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\n\nexport default interface ShippingAddressSelector {\n    getShippingAddress(): Address | undefined;\n}\n\nexport type ShippingAddressSelectorFactory = (state: ConsignmentState) => ShippingAddressSelector;\n\nexport function createShippingAddressSelectorFactory(): ShippingAddressSelectorFactory {\n    const getShippingAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (!consignments || !consignments[0]) {\n                return;\n            }\n\n            return consignments[0].shippingAddress;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE\n    ): ShippingAddressSelector => {\n        return {\n            getShippingAddress: getShippingAddress(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { CheckoutSelector } from '../checkout';\nimport { createSelector } from '../common/selector';\nimport { GatewayOrderPayment, OrderSelector } from '../order';\n\nimport PaymentMethod from './payment-method';\nimport { HOSTED } from './payment-method-types';\nimport { ACKNOWLEDGE, FINALIZE } from './payment-status-types';\n\nexport default interface PaymentSelector {\n    getPaymentId(): { providerId: string; gatewayId?: string } | undefined;\n    getPaymentStatus(): string | undefined;\n    getPaymentToken(): string | undefined;\n    getPaymentRedirectUrl(): string | undefined;\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n    isPaymentDataSubmitted(paymentMethod?: PaymentMethod): boolean;\n}\n\nexport type PaymentSelectorFactory = (\n    checkout: CheckoutSelector,\n    order: OrderSelector\n) => PaymentSelector;\n\ninterface PaymentSelectorDependencies {\n    checkout: CheckoutSelector;\n    order: OrderSelector;\n}\n\nexport function createPaymentSelectorFactory(): PaymentSelectorFactory {\n    const getInternalPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.payment;\n        }\n    );\n\n    const getGatewayPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrder,\n        getOrder => () => {\n            const order = getOrder();\n\n            return find(order && order.payments, ({ providerId }) =>\n                providerId !== 'giftcertificate' && providerId !== 'storecredit'\n            ) as GatewayOrderPayment;\n        }\n    );\n\n    const getHostedPayment = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getCheckout,\n        getCheckout => () => {\n            const checkout = getCheckout();\n\n            return find(checkout && checkout.payments, ({ providerType }) =>\n                providerType === HOSTED\n            );\n        }\n    );\n\n    const getPaymentId = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.id) {\n                return {\n                    providerId: internalPayment.id,\n                    gatewayId: internalPayment.gateway,\n                };\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment && payment.providerId) {\n                return {\n                    providerId: payment.providerId,\n                    gatewayId: payment.gatewayId,\n                };\n            }\n        }\n    );\n\n    const getPaymentStatus = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.status) {\n                return internalPayment.status.replace('PAYMENT_STATUS_', '');\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment) {\n                return payment.detail.step;\n            }\n        }\n    );\n\n    const getPaymentToken = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.token;\n        }\n    );\n\n    const getPaymentRedirectUrl = createSelector(\n        getInternalPayment,\n        getInternalPayment => () => {\n            const payment = getInternalPayment();\n\n            return payment && payment.redirectUrl;\n        }\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getOutstandingBalance,\n        getOutstandingBalance => (useStoreCredit: boolean = false) => {\n            const grandTotal = getOutstandingBalance(useStoreCredit);\n\n            return grandTotal ? grandTotal > 0 : false;\n        }\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        getPaymentStatus,\n        getPaymentStatus => (paymentMethod?: PaymentMethod) => {\n            if (paymentMethod && paymentMethod.nonce) {\n                return true;\n            }\n\n            return getPaymentStatus() === ACKNOWLEDGE || getPaymentStatus() === FINALIZE;\n        }\n    );\n\n    return memoizeOne((\n        checkout: CheckoutSelector,\n        order: OrderSelector\n    ): PaymentSelector => {\n        return {\n            getPaymentId: getPaymentId({ checkout, order }),\n            getPaymentStatus: getPaymentStatus({ checkout, order }),\n            getPaymentToken: getPaymentToken({ checkout, order }),\n            getPaymentRedirectUrl: getPaymentRedirectUrl({ checkout, order }),\n            isPaymentDataRequired: isPaymentDataRequired({ checkout, order }),\n            isPaymentDataSubmitted: isPaymentDataSubmitted({ checkout, order }),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Cart from './cart';\nimport CartState, { DEFAULT_STATE } from './cart-state';\n\nexport default interface CartSelector {\n    getCart(): Cart | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CartSelectorFactory = (state: CartState) => CartSelector;\n\nexport function createCartSelectorFactory() {\n    const getCart = createSelector(\n        (state: CartState) => state.data,\n        cart => () => cart\n    );\n\n    const getLoadError = createSelector(\n        (state: CartState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CartState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CartState = DEFAULT_STATE\n    ): CartSelector => {\n        return {\n            getCart: getCart(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Config, { ContextConfig, StoreConfig } from './config';\nimport ConfigState, { DEFAULT_STATE } from './config-state';\n\nexport default interface ConfigSelector {\n    getConfig(): Config | undefined;\n    getStoreConfig(): StoreConfig | undefined;\n    getContextConfig(): ContextConfig | undefined;\n    getExternalSource(): string | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ConfigSelectorFactory = (state: ConfigState) => ConfigSelector;\n\nexport function createConfigSelectorFactory(): ConfigSelectorFactory {\n\n    const getConfig = createSelector(\n        (state: ConfigState) => state.data,\n        data => () => data\n    );\n\n    const getStoreConfig = createSelector(\n        (state: ConfigState) => state.data && state.data.storeConfig,\n        data => () => data\n    );\n\n    const getContextConfig = createSelector(\n        (state: ConfigState) => state.data && state.data.context,\n        data => () => data\n    );\n\n    const getExternalSource = createSelector(\n        (state: ConfigState) => state.meta && state.meta.externalSource,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ConfigState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ConfigState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: ConfigState = DEFAULT_STATE\n    ): ConfigSelector => {\n        return {\n            getConfig: getConfig(state),\n            getStoreConfig: getStoreConfig(state),\n            getContextConfig: getContextConfig(state),\n            getExternalSource: getExternalSource(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Country from './country';\nimport CountryState, { DEFAULT_STATE } from './country-state';\n\nexport default interface CountrySelector {\n    getCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CountrySelectorFactory = (state: CountryState) => CountrySelector;\n\nexport function createCountrySelectorFactory(): CountrySelectorFactory {\n    const getCountries = createSelector(\n        (state: CountryState) => state.data,\n        countries => () => countries\n    );\n\n    const getLoadError = createSelector(\n        (state: CountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CountryState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CountryState = DEFAULT_STATE\n    ): CountrySelector => {\n        return {\n            getCountries: getCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport CustomerStrategyState, { DEFAULT_STATE } from './customer-strategy-state';\n\nexport default interface CustomerStrategySelector {\n    getSignInError(methodId?: string): Error | undefined;\n    getSignOutError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    getWidgetInteractionError(methodId?: string): Error | undefined;\n    isSigningIn(methodId?: string): boolean;\n    isSigningOut(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type CustomerStrategySelectorFactory = (state: CustomerStrategyState) => CustomerStrategySelector;\n\nexport function createCustomerStrategySelectorFactory(): CustomerStrategySelectorFactory {\n    const getSignInError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signInMethodId,\n        (state: CustomerStrategyState) => state.errors.signInError,\n        (signInMethodId, signInError) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return;\n            }\n\n            return signInError;\n        }\n    );\n\n    const getSignOutError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signOutMethodId,\n        (state: CustomerStrategyState) => state.errors.signOutError,\n        (signOutMethodId, signOutError) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return;\n            }\n\n            return signOutError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: CustomerStrategyState) => state.errors.initializeMethodId,\n        (state: CustomerStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getWidgetInteractionError = createSelector(\n        (state: CustomerStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isSigningIn = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signInMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningIn,\n        (signInMethodId, isSigningIn) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningIn;\n        }\n    );\n\n    const isSigningOut = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signOutMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningOut,\n        (signOutMethodId, isSigningOut) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningOut;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: CustomerStrategyState) => state.statuses.initializeMethodId,\n        (state: CustomerStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: CustomerStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: CustomerStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: CustomerStrategyState = DEFAULT_STATE\n    ): CustomerStrategySelector => {\n        return {\n            getSignInError: getSignInError(state),\n            getSignOutError: getSignOutError(state),\n            getInitializeError: getInitializeError(state),\n            getWidgetInteractionError: getWidgetInteractionError(state),\n            isSigningIn: isSigningIn(state),\n            isSigningOut: isSigningOut(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport GiftCertificate from './gift-certificate';\nimport GiftCertificateState, { DEFAULT_STATE } from './gift-certificate-state';\n\nexport default interface GiftCertificateSelector {\n    getGiftCertificates(): GiftCertificate[] | undefined;\n    getRemoveError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    getApplyError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type GiftCertificateSelectorFactory = (state: GiftCertificateState) => GiftCertificateSelector;\n\nexport function createGiftCertificateSelectorFactory(): GiftCertificateSelectorFactory {\n    const getGiftCertificates = createSelector(\n        (state: GiftCertificateState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: GiftCertificateState) => state.errors.removeGiftCertificateError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: GiftCertificateState) => state.errors.applyGiftCertificateError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isApplyingGiftCertificate,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isRemovingGiftCertificate,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: GiftCertificateState = DEFAULT_STATE\n    ): GiftCertificateSelector => {\n        return {\n            getGiftCertificates: getGiftCertificates(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { filter, flatMap, isMatch, values } from 'lodash';\n\nimport { createSelector } from '../../common/selector';\nimport PaymentMethod from '../payment-method';\n\nimport PaymentInstrument, { CardInstrument } from './instrument';\nimport InstrumentState, { DEFAULT_STATE, InstrumentMeta } from './instrument-state';\nimport supportedInstruments from './supported-payment-instruments';\n\nexport default interface InstrumentSelector {\n    getCardInstrument(instrumentId: string): CardInstrument | undefined;\n    // TODO: Rename to `getCardInstruments`\n    getInstruments(): CardInstrument[] | undefined;\n    getInstrumentsByPaymentMethod(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n    getInstrumentsMeta(): InstrumentMeta | undefined;\n    getLoadError(): Error | undefined;\n    getDeleteError(instrumentId?: string): Error | undefined;\n    isLoading(): boolean ;\n    isDeleting(instrumentId?: string): boolean;\n}\n\nexport type InstrumentSelectorFactory = (state: InstrumentState) => InstrumentSelector;\n\nexport function createInstrumentSelectorFactory(): InstrumentSelectorFactory {\n    const getInstrumentsByPaymentMethod = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => (paymentMethod: PaymentMethod) => {\n            if (!instruments) {\n                return;\n            }\n\n            const paymentMethodKey = paymentMethod.gateway ? `${paymentMethod.gateway}.${paymentMethod.id}` : paymentMethod.id;\n\n            const currentMethod = supportedInstruments[paymentMethodKey];\n\n            if (!currentMethod) {\n                return [];\n            }\n\n            return filter<PaymentInstrument>(instruments, currentMethod);\n        }\n    );\n\n    const getCardInstrument = createSelector(\n        (state: InstrumentState) => state.data,\n        (instruments = []) => (instrumentId: string) => {\n            const cards = values(supportedInstruments);\n\n            return instruments.find((instrument): instrument is CardInstrument =>\n                instrument.bigpayToken === instrumentId &&\n                instrument.method === 'credit_card' &&\n                cards.some(card => isMatch(instrument, card))\n            );\n        }\n    );\n\n    const getInstruments = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => () => {\n            if (!instruments) {\n                return;\n            }\n\n            const cardInstruments = flatMap(supportedInstruments, card =>\n                filter(instruments, (instrument: PaymentInstrument): instrument is CardInstrument => {\n                    return card.method === 'credit_card' && isMatch(instrument, card);\n                })\n            );\n\n            return cardInstruments;\n        }\n    );\n\n    const getInstrumentsMeta = createSelector(\n        (state: InstrumentState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: InstrumentState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getDeleteError = createSelector(\n        (state: InstrumentState) => state.errors.failedInstrument,\n        (state: InstrumentState) => state.errors.deleteError,\n        (failedInstrument, deleteError) => (instrumentId?: string) => {\n            if (instrumentId && failedInstrument !== instrumentId) {\n                return;\n            }\n\n            return deleteError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: InstrumentState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isDeleting = createSelector(\n        (state: InstrumentState) => state.statuses.deletingInstrument,\n        (state: InstrumentState) => state.statuses.isDeleting,\n        (deletingInstrument, isDeleting) => (instrumentId?: string) => {\n            if (instrumentId && deletingInstrument !== instrumentId) {\n                return false;\n            }\n\n            return !!isDeleting;\n        }\n    );\n\n    return memoizeOne((\n        state: InstrumentState = DEFAULT_STATE\n    ): InstrumentSelector => {\n        return {\n            getCardInstrument: getCardInstrument(state),\n            getInstruments: getInstruments(state),\n            getInstrumentsByPaymentMethod: getInstrumentsByPaymentMethod(state),\n            getInstrumentsMeta: getInstrumentsMeta(state),\n            getLoadError: getLoadError(state),\n            getDeleteError: getDeleteError(state),\n            isLoading: isLoading(state),\n            isDeleting: isDeleting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { createSelector } from '../common/selector';\nimport { ConfigState, DEFAULT_STATE } from '../config';\nimport { Country } from '../geography';\n\nimport FormField from './form-field';\n\nexport default interface FormSelector {\n    getShippingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n    getBillingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n}\n\nexport type FormSelectorFactory = (state: ConfigState) => FormSelector;\n\nexport function createFormSelectorFactory(): FormSelectorFactory {\n    const getShippingAddressFields = createSelector(\n        (state: ConfigState) => state.data,\n        config => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = config ? config.storeConfig.formFields.shippingAddressFields : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    const getBillingAddressFields = createSelector(\n        (state: ConfigState) => state.data,\n        config => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = config ? config.storeConfig.formFields.billingAddressFields : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    function processField(field: FormField, countries: Country[], selectedCountry?: Country): FormField {\n        if (field.name === 'countryCode') {\n            return processCountry(field, countries, selectedCountry);\n        }\n\n        if (field.name === 'stateOrProvince') {\n            return processProvince(field, selectedCountry);\n        }\n\n        if (field.name === 'postalCode') {\n            return processsPostCode(field, selectedCountry);\n        }\n\n        return field;\n    }\n\n    function processCountry(field: FormField, countries: Country[] = [], country?: Country): FormField {\n        if (!countries.length) {\n            return field;\n        }\n\n        const { code = '' } = country || {};\n        const items = countries.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            options: { items },\n            default: code,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processProvince(field: FormField, country?: Country): FormField {\n        const { subdivisions = [], requiresState } = country || {};\n\n        if (!subdivisions.length) {\n            return {\n                ...field,\n                required: requiresState == null ? false : requiresState,\n            };\n        }\n\n        const items = subdivisions.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            name: 'stateOrProvinceCode',\n            options: { items },\n            required: requiresState == null ? true : requiresState,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processsPostCode(field: FormField, country?: Country): FormField {\n        const { hasPostalCodes = [] } = country || {};\n\n        if (hasPostalCodes === undefined) {\n            return field;\n        }\n\n        return { ...field, required: Boolean(hasPostalCodes) };\n    }\n\n    return memoizeOne((\n        state: ConfigState = DEFAULT_STATE\n    ): FormSelector => {\n        return {\n            getShippingAddressFields: getShippingAddressFields(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE } from './payment-method-state';\n\nexport default interface PaymentMethodSelector {\n    getPaymentMethods(): PaymentMethod[] | undefined;\n    getPaymentMethodsMeta(): PaymentMethodMeta | undefined;\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n    getPaymentMethodOrThrow(methodId: string, gatewayId ?: string): PaymentMethod;\n    getLoadError(): Error | undefined;\n    getLoadMethodError(methodId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingMethod(methodId?: string): boolean;\n}\n\nexport type PaymentMethodSelectorFactory = (state: PaymentMethodState) => PaymentMethodSelector;\n\nexport function createPaymentMethodSelectorFactory(): PaymentMethodSelectorFactory {\n    const getPaymentMethods = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => () => paymentMethods\n    );\n\n    const getPaymentMethodsMeta = createSelector(\n        (state: PaymentMethodState) => state.meta,\n        meta => () => meta\n    );\n\n    const getPaymentMethod = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => (methodId: string, gatewayId?: string) => {\n            return gatewayId ?\n                find(paymentMethods, { id: methodId, gateway: gatewayId }) :\n                find(paymentMethods, { id: methodId });\n        }\n    );\n\n    const getPaymentMethodOrThrow = createSelector(\n        getPaymentMethod,\n        getPaymentMethod => (methodId: string, gatewayId?: string) => {\n            return guard(getPaymentMethod(methodId, gatewayId), () => new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getLoadMethodError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadMethodId,\n        (state: PaymentMethodState) => state.errors.loadMethodError,\n        (loadMethodId, loadMethodError) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return;\n            }\n\n            return loadMethodError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: PaymentMethodState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isLoadingMethod = createSelector(\n        (state: PaymentMethodState) => state.statuses.loadMethodId,\n        (state: PaymentMethodState) => state.statuses.isLoadingMethod,\n        (loadMethodId, isLoadingMethod) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isLoadingMethod;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentMethodState = DEFAULT_STATE\n    ): PaymentMethodSelector => {\n        return {\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethodsMeta: getPaymentMethodsMeta(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getPaymentMethodOrThrow: getPaymentMethodOrThrow(state),\n            getLoadError: getLoadError(state),\n            getLoadMethodError: getLoadMethodError(state),\n            isLoading: isLoading(state),\n            isLoadingMethod: isLoadingMethod(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport PaymentStrategyState, { DEFAULT_STATE } from './payment-strategy-state';\n\nexport default interface PaymentStrategySelector {\n    getInitializeError(methodId?: string): Error | undefined;\n    getExecuteError(methodId?: string): Error | undefined;\n    getFinalizeError(methodId?: string): Error | undefined;\n    getWidgetInteractingError(methodId?: string): Error | undefined;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isExecuting(methodId?: string): boolean;\n    isFinalizing(methodId?: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type PaymentStrategySelectorFactory = (state: PaymentStrategyState) => PaymentStrategySelector;\n\nexport function createPaymentStrategySelectorFactory(): PaymentStrategySelectorFactory {\n    const getInitializeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.initializeMethodId,\n        (state: PaymentStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getExecuteError = createSelector(\n        (state: PaymentStrategyState) => state.errors.executeMethodId,\n        (state: PaymentStrategyState) => state.errors.executeError,\n        (executeMethodId, executeError) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return;\n            }\n\n            return executeError;\n        }\n    );\n\n    const getFinalizeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.finalizeMethodId,\n        (state: PaymentStrategyState) => state.errors.finalizeError,\n        (finalizeMethodId, finalizeError) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return;\n            }\n\n            return finalizeError;\n        }\n    );\n\n    const getWidgetInteractingError = createSelector(\n        (state: PaymentStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.initializeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: PaymentStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isExecuting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.executeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isExecuting,\n        (executeMethodId, isExecuting) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isExecuting;\n        }\n    );\n\n    const isFinalizing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.finalizeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isFinalizing,\n        (finalizeMethodId, isFinalizing) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isFinalizing;\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentStrategyState = DEFAULT_STATE\n    ): PaymentStrategySelector => {\n        return {\n            getInitializeError: getInitializeError(state),\n            getExecuteError: getExecuteError(state),\n            getFinalizeError: getFinalizeError(state),\n            getWidgetInteractingError: getWidgetInteractingError(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isExecuting: isExecuting(state),\n            isFinalizing: isFinalizing(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport ShippingCountryState, { DEFAULT_STATE } from './shipping-country-state';\n\nexport default interface ShippingCountrySelector {\n    getShippingCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ShippingCountrySelectorFactory = (state: ShippingCountryState) => ShippingCountrySelector;\n\nexport function createShippingCountrySelectorFactory(): ShippingCountrySelectorFactory {\n    const getShippingCountries = createSelector(\n        (state: ShippingCountryState) => state.data,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ShippingCountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ShippingCountryState) => state.statuses.isLoading,\n        status => () => !!status\n    );\n\n    return memoizeOne((\n        state: ShippingCountryState = DEFAULT_STATE\n    ): ShippingCountrySelector => {\n        return {\n            getShippingCountries: getShippingCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport ShippingStrategyState, { DEFAULT_STATE } from './shipping-strategy-state';\n\nexport default interface ShippingStrategySelector {\n    getUpdateAddressError(methodId?: string): Error | undefined;\n    getSelectOptionError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    isUpdatingAddress(methodId?: string): boolean;\n    isSelectingOption(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n}\n\nexport type ShippingStrategySelectorFactory = (state: ShippingStrategyState) => ShippingStrategySelector;\n\nexport function createShippingStrategySelectorFactory(): ShippingStrategySelectorFactory {\n    const getUpdateAddressError = createSelector(\n        (state: ShippingStrategyState) => state.errors.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.errors.updateAddressError,\n        (updateAddressMethodId, updateAddressError) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return;\n            }\n\n            return updateAddressError;\n        }\n    );\n\n    const getSelectOptionError = createSelector(\n        (state: ShippingStrategyState) => state.errors.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.errors.selectOptionError,\n        (selectOptionMethodId, selectOptionError) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return;\n            }\n\n            return selectOptionError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: ShippingStrategyState) => state.errors.initializeMethodId,\n        (state: ShippingStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const isUpdatingAddress = createSelector(\n        (state: ShippingStrategyState) => state.statuses.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.statuses.isUpdatingAddress,\n        (updateAddressMethodId, isUpdatingAddress) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isUpdatingAddress;\n        }\n    );\n\n    const isSelectingOption = createSelector(\n        (state: ShippingStrategyState) => state.statuses.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.statuses.isSelectingOption,\n        (selectOptionMethodId, isSelectingOption) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSelectingOption;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: ShippingStrategyState) => state.statuses.initializeMethodId,\n        (state: ShippingStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: ShippingStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: ShippingStrategyState = DEFAULT_STATE\n    ): ShippingStrategySelector => {\n        return {\n            getUpdateAddressError: getUpdateAddressError(state),\n            getSelectOptionError: getSelectOptionError(state),\n            getInitializeError: getInitializeError(state),\n            isUpdatingAddress: isUpdatingAddress(state),\n            isSelectingOption: isSelectingOption(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { isAddressEqual, AddressRequestBody } from '../address';\nimport { CartSelector, PhysicalItem } from '../cart';\nimport { createSelector } from '../common/selector';\n\nimport Consignment from './consignment';\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\nimport ShippingOption from './shipping-option';\n\nexport default interface ConsignmentSelector {\n    getConsignments(): Consignment[] | undefined;\n    getConsignmentById(id: string): Consignment | undefined;\n    getConsignmentByAddress(address: AddressRequestBody): Consignment | undefined;\n    getShippingOption(): ShippingOption | undefined;\n    getLoadError(): Error | undefined;\n    getCreateError(): Error | undefined;\n    getLoadShippingOptionsError(): Error | undefined;\n    getUnassignedItems(): PhysicalItem[];\n    getUpdateError(consignmentId?: string): Error | undefined;\n    getDeleteError(consignmentId?: string): Error | undefined;\n    getItemAssignmentError(address: AddressRequestBody): Error | undefined;\n    getUpdateShippingOptionError(consignmentId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingShippingOptions(): boolean;\n    isCreating(): boolean;\n    isUpdating(consignmentId?: string): boolean;\n    isDeleting(consignmentId?: string): boolean;\n    isAssigningItems(address: AddressRequestBody): boolean;\n    isUpdatingShippingOption(consignmentId?: string): boolean;\n}\n\nexport type ConsignmentSelectorFactory = (\n    state: ConsignmentState,\n    cart: CartSelector\n) => ConsignmentSelector;\n\ninterface ConsignmentSelectorDependencies {\n    cart: CartSelector;\n}\n\nexport function createConsignmentSelectorFactory(): ConsignmentSelectorFactory {\n    const getConsignments = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => consignments\n    );\n\n    const getConsignmentById = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (id: string) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, { id });\n        }\n    );\n\n    const getConsignmentByAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (address: AddressRequestBody) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, consignment =>\n                isAddressEqual(consignment.shippingAddress, address)\n            );\n        }\n    );\n\n    const getShippingOption = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (consignments && consignments.length) {\n                return consignments[0].selectedShippingOption;\n            }\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: ConsignmentState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getCreateError = createSelector(\n        (state: ConsignmentState) => state.errors.createError,\n        error => () => error\n    );\n\n    const getLoadShippingOptionsError = createSelector(\n        (state: ConsignmentState) => state.errors.loadShippingOptionsError,\n        error => () => error\n    );\n\n    const getUnassignedItems = createSelector(\n        getConsignments,\n        (_: ConsignmentState, { cart }: ConsignmentSelectorDependencies) => cart.getCart,\n        (getConsignments, getCart) => () => {\n            const cart = getCart();\n\n            if (!cart) {\n                return [];\n            }\n\n            const assignedLineItemIds = (getConsignments() || []).reduce(\n                (itemIds, consignment) => itemIds.concat(consignment.lineItemIds),\n                [] as string[]\n            );\n\n            return (cart.lineItems.physicalItems || []).filter(\n                item => assignedLineItemIds.indexOf(item.id as string) < 0\n            );\n        }\n    );\n\n    const getUpdateError = createSelector(\n        (state: ConsignmentState) => state.errors.updateError,\n        updateError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateError[consignmentId];\n            }\n\n            return find(updateError);\n        }\n    );\n\n    const getDeleteError = createSelector(\n        (state: ConsignmentState) => state.errors.deleteError,\n        deleteError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return deleteError[consignmentId];\n            }\n\n            return find(deleteError);\n        }\n    );\n\n    const getItemAssignmentError = createSelector(\n        getConsignmentByAddress,\n        getUpdateError,\n        getCreateError,\n        (getConsignmentByAddress, getUpdateError, getCreateError) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? getUpdateError(consignment.id) : getCreateError();\n        }\n    );\n\n    const getUpdateShippingOptionError = createSelector(\n        (state: ConsignmentState) => state.errors.updateShippingOptionError,\n        updateShippingOptionError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateShippingOptionError[consignmentId];\n            }\n\n            return find(updateShippingOptionError);\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isLoadingShippingOptions = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoadingShippingOptions,\n        isLoadingShippingOptions => () => isLoadingShippingOptions === true\n    );\n\n    const isCreating = createSelector(\n        (state: ConsignmentState) => state.statuses.isCreating,\n        isCreating => () => isCreating === true\n    );\n\n    const isUpdating = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdating,\n        isUpdating => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdating[consignmentId] === true;\n            }\n\n            return find(isUpdating) === true;\n        }\n    );\n\n    const isDeleting = createSelector(\n        (state: ConsignmentState) => state.statuses.isDeleting,\n        isDeleting => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isDeleting[consignmentId] === true;\n            }\n\n            return find(isDeleting) === true;\n        }\n    );\n\n    const isAssigningItems = createSelector(\n        getConsignmentByAddress,\n        isUpdating,\n        isCreating,\n        (getConsignmentByAddress, isUpdating, isCreating) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? isUpdating(consignment.id) : isCreating();\n        }\n    );\n\n    const isUpdatingShippingOption = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdatingShippingOption,\n        isUpdatingShippingOption => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdatingShippingOption[consignmentId] === true;\n            }\n\n            return find(isUpdatingShippingOption) === true;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE,\n        cart: CartSelector\n    ): ConsignmentSelector => {\n        return {\n            getConsignments: getConsignments(state),\n            getConsignmentById: getConsignmentById(state),\n            getConsignmentByAddress: getConsignmentByAddress(state),\n            getShippingOption: getShippingOption(state),\n            getLoadError: getLoadError(state),\n            getCreateError: getCreateError(state),\n            getLoadShippingOptionsError: getLoadShippingOptionsError(state),\n            getUnassignedItems: getUnassignedItems(state, { cart }),\n            getUpdateError: getUpdateError(state),\n            getDeleteError: getDeleteError(state),\n            getItemAssignmentError: getItemAssignmentError(state),\n            getUpdateShippingOptionError: getUpdateShippingOptionError(state),\n            isLoading: isLoading(state),\n            isLoadingShippingOptions: isLoadingShippingOptions(state),\n            isCreating: isCreating(state),\n            isUpdating: isUpdating(state),\n            isDeleting: isDeleting(state),\n            isAssigningItems: isAssigningItems(state),\n            isUpdatingShippingOption: isUpdatingShippingOption(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector } from '../customer';\nimport { ConsignmentSelector } from '../shipping';\n\nimport Checkout from './checkout';\nimport CheckoutState, { DEFAULT_STATE } from './checkout-state';\n\nexport default interface CheckoutSelector {\n    getCheckout(): Checkout | undefined;\n    getCheckoutOrThrow(): Checkout;\n    getOutstandingBalance(useStoreCredit?: boolean): number | undefined;\n    getLoadError(): Error | undefined;\n    getUpdateError(): Error | undefined;\n    isExecutingSpamCheck(): boolean;\n    isLoading(): boolean;\n    isUpdating(): boolean;\n}\n\nexport type CheckoutSelectorFactory = (\n    state: CheckoutState,\n    billingAddress: BillingAddressSelector,\n    cart: CartSelector,\n    consignments: ConsignmentSelector,\n    coupons: CouponSelector,\n    customer: CustomerSelector,\n    giftCertificates: GiftCertificateSelector\n) => CheckoutSelector;\n\ninterface CheckoutSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    cart: CartSelector;\n    consignments: ConsignmentSelector;\n    coupons: CouponSelector;\n    customer: CustomerSelector;\n    giftCertificates: GiftCertificateSelector;\n}\n\nexport function createCheckoutSelectorFactory(): CheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: CheckoutState) => state.data,\n        (_: CheckoutState, { billingAddress }: CheckoutSelectorDependencies) => billingAddress.getBillingAddress,\n        (_: CheckoutState, { cart }: CheckoutSelectorDependencies) => cart.getCart,\n        (_: CheckoutState, { customer }: CheckoutSelectorDependencies) => customer.getCustomer,\n        (_: CheckoutState, { consignments }: CheckoutSelectorDependencies) => consignments.getConsignments,\n        (_: CheckoutState, { coupons }: CheckoutSelectorDependencies) => coupons.getCoupons,\n        (_: CheckoutState, { giftCertificates }: CheckoutSelectorDependencies) => giftCertificates.getGiftCertificates,\n        (data, getBillingAddress, getCart, getCustomer, getConsignments, getCoupons, getGiftCertificates) => () => {\n            const billingAddress = getBillingAddress();\n            const cart = getCart();\n            const customer = getCustomer();\n            const consignments = getConsignments() || [];\n            const coupons = getCoupons() || [];\n            const giftCertificates = getGiftCertificates() || [];\n\n            if (!data || !cart || !customer) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                cart,\n                customer,\n                consignments,\n                coupons,\n                giftCertificates,\n            };\n        }\n    );\n\n    const getCheckoutOrThrow = createSelector(\n        getCheckout,\n        getCheckout => () => {\n            return guard(getCheckout(), () => new MissingDataError(MissingDataErrorType.MissingCheckout));\n        }\n    );\n\n    const getOutstandingBalance = createSelector(\n        getCheckout,\n        getCheckout => (useStoreCredit?: boolean) => {\n            const checkout = getCheckout();\n\n            if (!checkout) {\n                return;\n            }\n\n            const grandTotal = checkout.grandTotal || 0;\n            const storeCredit = checkout.customer.storeCredit || 0;\n\n            return useStoreCredit ? Math.max(grandTotal - storeCredit, 0) : checkout.outstandingBalance;\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: CheckoutState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getUpdateError = createSelector(\n        (state: CheckoutState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const isExecutingSpamCheck = createSelector(\n        (state: CheckoutState) => state.statuses.isExecutingSpamCheck,\n        isExecutingSpamCheck => () => isExecutingSpamCheck === true\n    );\n\n    const isLoading = createSelector(\n        (state: CheckoutState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isUpdating = createSelector(\n        (state: CheckoutState) => state.statuses.isUpdating,\n        isUpdating => () => isUpdating === true\n    );\n\n    return memoizeOne((\n        state: CheckoutState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        cart: CartSelector,\n        consignments: ConsignmentSelector,\n        coupons: CouponSelector,\n        customer: CustomerSelector,\n        giftCertificates: GiftCertificateSelector\n    ): CheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getCheckoutOrThrow: getCheckoutOrThrow(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getOutstandingBalance: getOutstandingBalance(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getLoadError: getLoadError(state),\n            getUpdateError: getUpdateError(state),\n            isExecutingSpamCheck: isExecutingSpamCheck(state),\n            isLoading: isLoading(state),\n            isUpdating: isUpdating(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\nimport { CouponSelector } from '../coupon';\n\nimport Order from './order';\nimport OrderState, { DEFAULT_STATE, OrderMetaState } from './order-state';\n\nexport default interface OrderSelector {\n    getOrder(): Order | undefined;\n    getOrderOrThrow(): Order;\n    getOrderMeta(): OrderMetaState | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type OrderSelectorFactory = (\n    state: OrderState,\n    billingAddress: BillingAddressSelector,\n    coupons: CouponSelector\n) => OrderSelector;\n\ninterface OrderSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    coupons: CouponSelector;\n}\n\nexport function createOrderSelectorFactory(): OrderSelectorFactory {\n    const getOrder = createSelector(\n        (state: OrderState) => state.data,\n        (_: OrderState, { billingAddress }: OrderSelectorDependencies) => billingAddress.getBillingAddress(),\n        (_: OrderState, { coupons }: OrderSelectorDependencies) => coupons.getCoupons(),\n        (data, billingAddress, coupons = []) => () => {\n            if (!data || !billingAddress) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                coupons,\n            };\n        }\n    );\n\n    const getOrderOrThrow = createSelector(\n        getOrder,\n        getOrder => () => {\n            return guard(getOrder(), () => new MissingDataError(MissingDataErrorType.MissingOrder));\n        }\n    );\n\n    const getOrderMeta = createSelector(\n        (state: OrderState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: OrderState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: OrderState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: OrderState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        coupons: CouponSelector\n    ): OrderSelector => {\n        return {\n            getOrder: getOrder(state, { billingAddress, coupons }),\n            getOrderOrThrow: getOrderOrThrow(state, { billingAddress, coupons }),\n            getOrderMeta: getOrderMeta(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport StoreCreditState, { DEFAULT_STATE } from './store-credit-state';\n\nexport default interface StoreCreditSelector {\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n}\n\nexport type StoreCreditSelectorFactory = (state: StoreCreditState) => StoreCreditSelector;\n\nexport function createStoreCreditSelectorFactory(): StoreCreditSelectorFactory {\n    const getApplyError = createSelector(\n        (state: StoreCreditState) => state.errors.applyError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: StoreCreditState) => !!state.statuses.isApplying,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: StoreCreditState = DEFAULT_STATE\n    ): StoreCreditSelector => {\n        return {\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n        };\n    });\n}\n","import { createDataStore } from '@bigcommerce/data-store';\n\nimport { createRequestErrorFactory } from '../common/error';\n\nimport CheckoutStore, { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport createActionTransformer from './create-action-transformer';\nimport createCheckoutStoreReducer from './create-checkout-store-reducer';\nimport { createInternalCheckoutSelectorsFactory } from './create-internal-checkout-selectors';\n\nexport default function createCheckoutStore(\n    initialState: Partial<CheckoutStoreState> = {},\n    options?: CheckoutStoreOptions\n): CheckoutStore {\n    const actionTransformer = createActionTransformer(createRequestErrorFactory());\n    const createInternalCheckoutSelectors = createInternalCheckoutSelectorsFactory();\n    const stateTransformer = (state: CheckoutStoreState) => createInternalCheckoutSelectors(state);\n\n    return createDataStore(\n        createCheckoutStoreReducer(),\n        initialState,\n        { actionTransformer, stateTransformer, ...options }\n    );\n}\n","import { Action } from '@bigcommerce/data-store';\nimport { from, Observable, Subscribable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { RequestErrorFactory } from '../common/error';\n\nexport default function createActionTransformer(\n    requestErrorFactory: RequestErrorFactory\n): (action: Subscribable<Action>) => Observable<Action> {\n    return action$ => from(action$).pipe(catchError<Action, never>(action => {\n        if (action instanceof Error || action.payload instanceof Error) {\n            throw action;\n        }\n\n        if (isResponse(action.payload)) {\n            const message = action.payload.body && action.payload.body.detail;\n\n            throw { ...action, payload: requestErrorFactory.createError(action.payload, message) };\n        }\n\n        throw action;\n    }));\n}\n\nfunction isResponse(object: any) {\n    if (!object || typeof object !== 'object') {\n        return false;\n    }\n\n    return ['body', 'headers', 'status', 'statusText'].every(key =>\n        object.hasOwnProperty(key)\n    );\n}\n","import { PaymentMethodInvalidError } from '../../payment/errors';\n\nimport { UnrecoverableError } from './errors';\nimport RequestErrorFactory from './request-error-factory';\n\nexport default function createRequestErrorFactory(): RequestErrorFactory {\n    const factory = new RequestErrorFactory();\n\n    const unrecoverableErrorTypes = [\n        'catalog_only',\n        'empty_cart',\n        'invalid_order_id',\n        'invalid_order_token',\n        'missing_order_token',\n        'missing_provider_token',\n        'missing_shipping_method',\n        'order_completion_error',\n        'order_could_not_be_finalized_error',\n        'order_create_failed',\n        'provider_fatal_error',\n        'provider_setup_error',\n        'stock_too_low',\n    ];\n\n    unrecoverableErrorTypes.forEach(type => {\n        factory.register(type, (response, message) => new UnrecoverableError(response, message));\n    });\n\n    factory.register('invalid_payment_provider', response => new PaymentMethodInvalidError(response));\n    factory.register('payment_config_not_found', response => new PaymentMethodInvalidError(response));\n\n    return factory;\n}\n","import { combineReducers, Action, Reducer } from '@bigcommerce/data-store';\n\nimport { billingAddressReducer } from '../billing';\nimport { cartReducer } from '../cart';\nimport { checkoutButtonReducer } from '../checkout-buttons';\nimport { configReducer } from '../config';\nimport { couponReducer, giftCertificateReducer } from '../coupon';\nimport { customerReducer, customerStrategyReducer } from '../customer';\nimport { countryReducer } from '../geography';\nimport { orderReducer } from '../order';\nimport { paymentMethodReducer, paymentReducer, paymentStrategyReducer } from '../payment';\nimport { instrumentReducer } from '../payment/instrument';\nimport { remoteCheckoutReducer } from '../remote-checkout';\nimport { consignmentReducer, shippingCountryReducer, shippingStrategyReducer } from '../shipping';\nimport { storeCreditReducer } from '../store-credit';\n\nimport checkoutReducer from './checkout-reducer';\nimport CheckoutStoreState from './checkout-store-state';\n\nexport default function createCheckoutStoreReducer(): Reducer<CheckoutStoreState, Action> {\n    return combineReducers({\n        billingAddress: billingAddressReducer,\n        cart: cartReducer,\n        checkout: checkoutReducer,\n        checkoutButton: checkoutButtonReducer,\n        config: configReducer,\n        consignments: consignmentReducer,\n        countries: countryReducer,\n        coupons: couponReducer,\n        customer: customerReducer,\n        customerStrategies: customerStrategyReducer,\n        giftCertificates: giftCertificateReducer,\n        instruments: instrumentReducer,\n        order: orderReducer,\n        payment: paymentReducer,\n        paymentMethods: paymentMethodReducer,\n        paymentStrategies: paymentStrategyReducer,\n        remoteCheckout: remoteCheckoutReducer,\n        shippingCountries: shippingCountryReducer,\n        shippingStrategies: shippingStrategyReducer,\n        storeCredit: storeCreditReducer,\n    });\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error when we are unable to retrieve a checkout object from the\n * server using the provided ID. It could be because the shopper does not have\n * permission to view the object, or the ID itself is invalid.\n */\nexport default class CheckoutNotAvailableError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'CheckoutNotAvailableError';\n        this.type = 'checkout_not_available';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport Checkout, { CheckoutRequestBody } from './checkout';\nimport CHECKOUT_DEFAULT_INCLUDES from './checkout-default-includes';\nimport CheckoutParams from './checkout-params';\nimport { CheckoutNotAvailableError } from './errors';\n\nexport default class CheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadCheckout(id: string, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.get(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        }).catch(error => {\n            if (error.status >= 400 && error.status < 500) {\n                throw new CheckoutNotAvailableError(error);\n            }\n\n            throw error;\n        });\n    }\n\n    updateCheckout(id: string, body: CheckoutRequestBody, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            body,\n            headers,\n            timeout,\n        });\n    }\n}\n","export enum CheckoutIncludes {\n    AvailableShippingOptions = 'consignments.availableShippingOptions',\n    PhysicalItemsCategoryNames = 'cart.lineItems.physicalItems.categoryNames',\n    DigitalItemsCategoryNames = 'cart.lineItems.digitalItems.categoryNames',\n}\n\nexport default interface CheckoutParams {\n    include?: CheckoutIncludes[] | CheckoutIncludeParam;\n}\n\nexport type CheckoutIncludeParam = {\n    [key in CheckoutIncludes]?: boolean;\n};\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent>;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent> | void {\n        if (window === this._targetWindow) {\n            return;\n        }\n\n        if (!this._targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result = options && fromEvent<MessageEvent>(window, 'message')\n            .pipe(\n                filter(event =>\n                    event.origin === this._targetOrigin &&\n                    isIframeEvent(event.data, event.data.type) &&\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\n                ),\n                map(event => {\n                    if (options.errorType === event.data.type) {\n                        throw event.data;\n                    }\n\n                    return event.data;\n                }),\n                take(1)\n            )\n            .toPromise();\n\n        this._targetWindow.postMessage(event, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigin: string;\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigin = parseUrl(sourceOrigin).origin;\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((event.origin !== this._sourceOrigin) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","import { memoize } from '@bigcommerce/memoize';\n\nimport { bindDecorator, isEqual, isPrivate, CacheKeyResolver } from '../utility';\n\n/**\n * Decorates a class by patching all of its methods to cache their return values\n * and return them if they are called again with the same set of parameters. The\n * decorator also binds all the methods to the calling instance so it can be\n * destructed.\n */\nexport default function selectorDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                selectorMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\nfunction selectorMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let resolver = new CacheKeyResolver();\n    let method = descriptor.value;\n    let memoizedMethod = memoize(method);\n\n    return bindDecorator(target, key, {\n        get() {\n            const value = ((...args: any[]) => {\n                const cachedValue = memoizedMethod.call(this, ...args);\n\n                if (resolver.getUsedCount(...args) === 1) {\n                    return cachedValue;\n                }\n\n                const newValue = method.call(this, ...args);\n\n                if (isEqual(newValue, cachedValue, { keyFilter: key => !isPrivate(key) })) {\n                    return cachedValue;\n                }\n\n                memoizedMethod.cache.set(resolver.getKey(...args), newValue);\n\n                return newValue;\n            }) as T;\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n        set(value) {\n            resolver = new CacheKeyResolver();\n            method = value;\n            memoizedMethod = memoize(method);\n        },\n    });\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\ntype Method = (...args: any[]) => any;\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonErrorSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    getInitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getInitializeError(methodId);\n    }\n\n    getDeinitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getDeinitializeError(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonStatusSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    isInitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isInitializing(methodId);\n    }\n\n    isDeinitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isDeinitializing(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\n\nimport CheckoutButtonErrorSelector from './checkout-button-error-selector';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStatusSelector from './checkout-button-status-selector';\n\nexport default function createCheckoutButtonSelectors(selectors: InternalCheckoutSelectors): CheckoutButtonSelectors {\n    const errors = new CheckoutButtonErrorSelector(selectors);\n    const statuses = new CheckoutButtonStatusSelector(selectors);\n\n    return {\n        errors,\n        statuses,\n    };\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../checkout';\nimport { isElementId, setUniqueElementId } from '../common/dom';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonSelectors from './create-checkout-button-selectors';\n\n@bind\nexport default class CheckoutButtonInitializer {\n    private _state: CheckoutButtonSelectors;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _buttonStrategyActionCreator: CheckoutButtonStrategyActionCreator\n    ) {\n        this._state = createCheckoutButtonSelectors(this._store.getState());\n\n        this._store.subscribe(state => {\n            this._state = createCheckoutButtonSelectors(state);\n        });\n    }\n\n    /**\n     * Returns a snapshot of the current state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * state. You can query the state by calling any of its getter methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.errors.getInitializeButtonError());\n     * console.log(state.statuses.isInitializingButton());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutButtonSelectors {\n        return this._state;\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the current state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.statuses.isInitializingButton());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.errors.getInitializeButtonError();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.errors.getInitializeButtonError())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutButtonSelectors) => void,\n        ...filters: Array<(state: CheckoutButtonSelectors) => any>\n    ): () => void {\n        return this._store.subscribe(\n            () => subscriber(this.getState()),\n            state => state.checkoutButton.getState(),\n            ...filters.map(filter => (state: InternalCheckoutSelectors) => filter(createCheckoutButtonSelectors(state)))\n        );\n    }\n\n    /**\n     * Initializes the checkout button of a payment method.\n     *\n     * When the checkout button is initialized, it will be inserted into the DOM,\n     * ready to be interacted with by the customer.\n     *\n     * ```js\n     * initializer.initializeButton({\n     *     methodId: 'braintreepaypal',\n     *     containerId: 'checkoutButton',\n     *     braintreepaypal: {\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeButton(options: CheckoutButtonInitializeOptions): Promise<CheckoutButtonSelectors> {\n        const containerIds = isElementId(options.containerId) ?\n            [options.containerId] :\n            setUniqueElementId(options.containerId, `${options.methodId}-container`);\n\n        return Promise.all(\n            containerIds.map(containerId => {\n                const action = this._buttonStrategyActionCreator.initialize({ ...options, containerId });\n                const queueId = `checkoutButtonStrategy:${options.methodId}:${containerId}`;\n\n                return this._store.dispatch(action, { queueId });\n            })\n        )\n            .then(() => this.getState());\n    }\n\n    /**\n     * De-initializes the checkout button by performing any necessary clean-ups.\n     *\n     * ```js\n     * await service.deinitializeButton({\n     *     methodId: 'braintreepaypal',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeButton(options: CheckoutButtonOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.deinitialize(options);\n        const queueId = `checkoutButtonStrategy:${options.methodId}`;\n\n        return this._store.dispatch(action, { queueId })\n            .then(() => this.getState());\n    }\n}\n","enum CheckoutButtonMethodType {\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    GOOGLEPAY_BRAINTREE = 'googlepaybraintree',\n    GOOGLEPAY_STRIPE = 'googlepaystripe',\n    MASTERPASS = 'masterpass',\n    PAYPALEXPRESS = 'paypalexpress',\n    PAYPALCOMMERCE = 'paypalcommerce',\n}\n\nexport default CheckoutButtonMethodType;\n","export default function isElementId(id: string): boolean {\n    return /^\\w[\\w\\-\\:\\.]*$/.test(id);\n}\n","import { uniqueId } from 'lodash';\n\nimport { InvalidArgumentError } from '../error/errors';\n\nexport default function setUniqueElementId(selector: string, idPrefix: string): string[] {\n    const containers = document.querySelectorAll(selector);\n\n    if (!containers.length) {\n        throw new InvalidArgumentError(`Unable to find any element with the specified selector: ${selector}`);\n    }\n\n    return Array.prototype.slice.call(containers)\n        .map((container: HTMLElement) => {\n            if (!container.id) {\n                container.id = uniqueId(idPrefix);\n            }\n\n            return container.id;\n        });\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator } from '../payment';\n\nimport { CheckoutButtonActionType, DeinitializeButtonAction, InitializeButtonAction } from './checkout-button-actions';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport { CheckoutButtonStrategy } from './strategies';\n\nexport default class CheckoutButtonStrategyActionCreator {\n    constructor(\n        private _registry: Registry<CheckoutButtonStrategy>,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): ThunkAction<InitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId, containerId: options.containerId };\n\n            if (store.getState().checkoutButton.isInitialized(options.methodId, options.containerId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.InitializeButtonRequested, undefined, meta)),\n                this._paymentMethodActionCreator.loadPaymentMethod(options.methodId, { timeout: options.timeout, useCache: true }),\n                defer(() => this._registry.get(options.methodId).initialize(options)\n                    .then(() => createAction(CheckoutButtonActionType.InitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.InitializeButtonFailed, error, meta))\n            );\n        };\n    }\n\n    deinitialize(options: CheckoutButtonOptions): ThunkAction<DeinitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId };\n\n            if (!store.getState().checkoutButton.isInitialized(options.methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.DeinitializeButtonRequested, undefined, meta)),\n                defer(() => this._registry.get(options.methodId).deinitialize()\n                    .then(() => createAction(CheckoutButtonActionType.DeinitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.DeinitializeButtonFailed, error, meta))\n            );\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\nimport { kebabCase } from 'lodash';\n\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { PaypalCommerceHostWindow, PaypalCommerceScriptOptions, PaypalCommerceSDK } from './paypal-commerce-sdk';\n\nexport default class PaypalCommerceScriptLoader {\n    private _window: PaypalCommerceHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    async loadPaypalCommerce(options: PaypalCommerceScriptOptions): Promise<PaypalCommerceSDK> {\n        if (!options || !options.clientId) {\n            throw new InvalidArgumentError();\n        }\n        const params = (Object.keys(options) as Array<keyof PaypalCommerceScriptOptions>)\n            .map(key => `${kebabCase(key)}=${options[key]}`)\n            .join('&');\n\n        const scriptSrc = `https://www.paypal.com/sdk/js?${params}`;\n\n        await this._scriptLoader.loadScript(scriptSrc, { async: true, attributes: {} });\n\n        if (!this._window.paypal) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.paypal;\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { Address, LegacyAddress } from '../../../address';\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { PaymentMethod } from '../../../payment';\nimport { BraintreeError, BraintreePaypalCheckout, BraintreeShippingAddressOverride, BraintreeSDKCreator, BraintreeTokenizePayload } from '../../../payment/strategies/braintree';\nimport { PaypalAuthorizeData, PaypalScriptLoader } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class BraintreePaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paypalCheckout?: BraintreePaypalCheckout;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _offerCredit: boolean = false\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = (this._offerCredit ? options.braintreepaypalcredit : options.braintreepaypal) || {};\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return Promise.all([\n            this._braintreeSDKCreator.getPaypalCheckout(),\n            this._paypalScriptLoader.loadPaypal(),\n        ])\n            .then(([paypalCheckout, paypal]) => {\n                this._paypalCheckout = paypalCheckout;\n\n                const allowedSources = [];\n                const disallowedSources = [];\n\n                if (paypalOptions.allowCredit) {\n                    allowedSources.push(paypal.FUNDING.CREDIT);\n                } else {\n                    disallowedSources.push(paypal.FUNDING.CREDIT);\n                }\n\n                return paypal.Button.render({\n                    env: paymentMethod.config.testMode ? 'sandbox' : 'production',\n                    commit: paypalOptions.shouldProcessPayment ? true : false,\n                    funding: {\n                        allowed: allowedSources,\n                        disallowed: disallowedSources,\n                    },\n                    style: {\n                        shape: 'rect',\n                        label: this._offerCredit ? 'credit' : undefined,\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: () => this._setupPayment(paypalOptions.shippingAddress, paypalOptions.onPaymentError),\n                    onAuthorize: data => this._tokenizePayment(data, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, options.containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        this._paypalCheckout = undefined;\n        this._paymentMethod = undefined;\n\n        this._braintreeSDKCreator.teardown();\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(\n        address?: Address | null,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<string> {\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const checkout = state.checkout.getCheckout();\n                const config = state.config.getStoreConfig();\n                const customer = state.customer.getCustomer();\n                const shippingAddress = address === undefined ?\n                    customer && customer.addresses && customer.addresses[0] :\n                    address;\n\n                if (!this._paypalCheckout) {\n                    throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                return this._paypalCheckout.createPayment({\n                    flow: 'checkout',\n                    enableShippingAddress: true,\n                    shippingAddressEditable: false,\n                    shippingAddressOverride: shippingAddress ? this._mapToBraintreeAddress(shippingAddress) : undefined,\n                    amount: checkout.outstandingBalance,\n                    currency: config.currency.code,\n                    offerCredit: this._offerCredit,\n                });\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        shouldProcessPayment?: boolean,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<BraintreeTokenizePayload> {\n        if (!this._paypalCheckout || !this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return Promise.all([\n            this._paypalCheckout.tokenizePayment(data),\n            this._braintreeSDKCreator.getDataCollector({ paypal: true }),\n        ])\n            .then(([payload, { deviceData }]) => {\n                this._formPoster.postForm('/checkout.php', {\n                    payment_type: 'paypal',\n                    provider: methodId,\n                    action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                    nonce: payload.nonce,\n                    device_data: deviceData,\n                    shipping_address: JSON.stringify(this._mapToLegacyShippingAddress(payload)),\n                    billing_address: JSON.stringify(this._mapToLegacyBillingAddress(payload)),\n                });\n\n                return payload;\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _mapToLegacyShippingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const shippingAddress = payload.details.shippingAddress;\n        const recipientName = shippingAddress && shippingAddress.recipientName || '';\n        const [firstName, lastName] = recipientName.split(' ');\n\n        return {\n            email: payload.details.email,\n            first_name: firstName,\n            last_name: lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToLegacyBillingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const billingAddress = payload.details.billingAddress;\n        const shippingAddress = payload.details.shippingAddress;\n\n        if (billingAddress) {\n            return {\n                email: payload.details.email,\n                first_name: payload.details.firstName,\n                last_name: payload.details.lastName,\n                phone_number: payload.details.phone,\n                address_line_1: billingAddress.line1,\n                address_line_2: billingAddress.line2,\n                city: billingAddress.city,\n                state: billingAddress.state,\n                country_code: billingAddress.countryCode,\n                postal_code: billingAddress.postalCode,\n            };\n        }\n\n        return {\n            email: payload.details.email,\n            first_name: payload.details.firstName,\n            last_name: payload.details.lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToBraintreeAddress(address: Address): BraintreeShippingAddressOverride {\n        return {\n            line1: address.address1,\n            line2: address.address2,\n            city: address.city,\n            state: address.stateOrProvinceCode,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phone,\n            recipientName: `${address.firstName} ${address.lastName}`,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class GooglePayButtonStrategy implements CheckoutButtonStrategy {\n    private _methodId?: string;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _formPoster: FormPoster,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(() => this._googlePayPaymentProcessor.initialize(this._getMethodId()))\n            .then(() => {\n                this._walletButton = this._createSignInButton(containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const googlePayButton = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(googlePayButton);\n\n        return googlePayButton;\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(paymentData => this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => {\n                if (paymentData.shippingAddress) {\n                    this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n                }\n            }))\n            .then(() => this._onPaymentSelectComplete())\n            .catch(error => this._onError(error));\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error && error.message !== 'CANCELED') {\n            throw error;\n        }\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { getCallbackUrl, Masterpass, MasterpassCheckoutOptions, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class MasterpassButtonStrategy implements CheckoutButtonStrategy {\n    private _masterpassClient?: Masterpass;\n    private _methodId?: string;\n    private _signInButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!paymentMethod || !paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._masterpassScriptLoader.load(paymentMethod.config.testMode);\n            })\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n                this._signInButton = this._createSignInButton(containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.removeEventListener('click', this._handleWalletButtonClick);\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const buttonContainer = document.getElementById(containerId);\n\n        if (!buttonContainer) {\n            throw new Error('Need a container to place the button');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n        button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        buttonContainer.appendChild(button);\n\n        button.addEventListener('click', this._handleWalletButtonClick);\n\n        return button;\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const paymentMethod = this._methodId ? state.paymentMethods.getPaymentMethod(this._methodId) : null;\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.cart.cartAmount.toString(),\n            currency: checkout.cart.currency.code,\n            cartId: checkout.cart.id,\n            suppressShippingAddress: false,\n            callbackUrl: getCallbackUrl('cart'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(): void {\n        if (!this._masterpassClient) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        this._masterpassClient.checkout(this._createMasterpassPayload());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { PaymentMethod } from '../../../payment';\nimport { PaypalActions, PaypalAuthorizeData, PaypalClientToken, PaypalScriptLoader } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class PaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _host: string = ''\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = options.paypal;\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paypalOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._paypalScriptLoader.loadPaypal(paymentMethod.config.merchantId)\n            .then(paypal => {\n                if (!paymentMethod || !paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const merchantId = paymentMethod.config.merchantId;\n                const env = paymentMethod.config.testMode ? 'sandbox' : 'production';\n                const clientToken: PaypalClientToken = { [env]: paypalOptions.clientId };\n\n                const allowedSources = [];\n                const disallowedSources = [];\n\n                if (paypalOptions.allowCredit) {\n                    allowedSources.push(paypal.FUNDING.CREDIT);\n                } else {\n                    disallowedSources.push(paypal.FUNDING.CREDIT);\n                }\n\n                return paypal.Button.render({\n                    env,\n                    client: clientToken,\n                    commit: paypalOptions.shouldProcessPayment,\n                    funding: {\n                        allowed: allowedSources,\n                        disallowed: disallowedSources,\n                    },\n                    style: {\n                        shape: 'rect',\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: (_, actions) => this._setupPayment(merchantId, actions, paypalOptions.onPaymentError),\n                    onAuthorize: (data, actions) => this._tokenizePayment(data, actions, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, options.containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(merchantId: string, actions?: PaypalActions, onError?: (error: StandardError) => void): Promise<string> {\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const cart = state.cart.getCart();\n                const cartId = cart ? cart.id : '';\n\n                return actions.request.post(`${this._host}/api/storefront/payment/paypalexpress`, { merchantId, cartId }, {\n                    headers: {\n                        'X-API-INTERNAL': INTERNAL_USE_ONLY,\n                    },\n                });\n            })\n            .then(res => res.id)\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        actions?: PaypalActions,\n        shouldProcessPayment?: boolean,\n        _onError?: (error: StandardError) => void // FIXME: This parameter seems to be unused\n    ): Promise<void> {\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!data.paymentID || !data.payerID) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return actions.payment.get(data.paymentID).then(payload => {\n            this._formPoster.postForm('/checkout.php', {\n                payment_type: 'paypal',\n                provider: methodId,\n                action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                paymentId: data.paymentID,\n                payerId: data.payerID,\n                payerInfo: JSON.stringify(payload.payer.payer_info),\n            });\n        });\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\n\nimport { Cart } from '../../../cart';\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { ApproveDataOptions, PaypalCommerceScriptLoader, PaypalCommerceScriptOptions } from '../../../payment/strategies/paypal-commerce';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class PaypalCommerceButtonStrategy implements CheckoutButtonStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paypalScriptLoader: PaypalCommerceScriptLoader,\n        private _formPoster: FormPoster,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(options.methodId);\n\n        if (!paymentMethod.initializationData.clientId) {\n            throw new InvalidArgumentError();\n        }\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const config = state.config.getStoreConfig();\n                const cart = state.cart.getCart();\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                const paramsScript: PaypalCommerceScriptOptions = {\n                    clientId: paymentMethod.initializationData.clientId,\n                    currency: config.currency.code,\n                    commit: false,\n                    intent: paymentMethod.initializationData.intent,\n                };\n\n                if (!paymentMethod.initializationData.isPayPalCreditAvailable) {\n                    paramsScript.disableFunding = 'credit';\n                }\n\n                return this._paypalScriptLoader.loadPaypalCommerce(paramsScript)\n                    .then(paypal => {\n                        return paypal.Buttons({\n                            createOrder: () => this._setupPayment(cart),\n                            onApprove: data => this._tokenizePayment(paymentMethod.id, data),\n                        }).render(`#${options.containerId}`);\n                    });\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    private _setupPayment(cart: Cart): Promise<string> {\n        const cartId = cart.id;\n        const url = '/api/storefront/payment/paypalcommerce';\n        const headers = {\n            'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n\n        return this._requestSender.post(url, {\n                headers,\n                body: { cartId },\n            })\n            .then(res => res.body.orderId);\n    }\n\n    private _tokenizePayment(paymentId: string, data: ApproveDataOptions) {\n        if (!data.orderID) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        return this._formPoster.postForm('/checkout.php', {\n            payment_type: 'paypal',\n            action: 'set_external_checkout',\n            provider: paymentId,\n            order_id: data.orderID,\n        });\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { createCheckoutStore } from '../checkout';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\n\nimport CheckoutButtonInitializer from './checkout-button-initializer';\nimport CheckoutButtonInitializerOptions from './checkout-button-initializer-options';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonRegistry from './create-checkout-button-registry';\n\n/**\n * Creates an instance of `CheckoutButtonInitializer`.\n *\n * @remarks\n * ```js\n * const initializer = createCheckoutButtonInitializer();\n *\n * initializer.initializeButton({\n *     methodId: 'braintreepaypal',\n *     braintreepaypal: {\n *         container: '#checkoutButton',\n *     },\n * });\n * ```\n *\n * @alpha\n * Please note that `CheckoutButtonInitializer` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutButtonInitializer`.\n */\nexport default function createCheckoutButtonInitializer(\n    options?: CheckoutButtonInitializerOptions\n): CheckoutButtonInitializer {\n    const host = options && options.host;\n    const store = createCheckoutStore();\n    const requestSender = createRequestSender({ host });\n    const formPoster = createFormPoster({ host });\n\n    return new CheckoutButtonInitializer(\n        store,\n        new CheckoutButtonStrategyActionCreator(\n            createCheckoutButtonRegistry(store, requestSender, formPoster, host),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender))\n        )\n    );\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { BraintreeScriptLoader, BraintreeSDKCreator } from '../payment/strategies/braintree';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { PaypalScriptLoader } from '../payment/strategies/paypal';\nimport { PaypalCommerceScriptLoader } from '../payment/strategies/paypal-commerce';\n\nimport { CheckoutButtonMethodType, CheckoutButtonStrategy } from './strategies';\nimport { BraintreePaypalButtonStrategy } from './strategies/braintree';\nimport { GooglePayButtonStrategy } from './strategies/googlepay';\nimport { MasterpassButtonStrategy } from './strategies/masterpass';\nimport { PaypalButtonStrategy } from './strategies/paypal';\nimport { PaypalCommerceButtonStrategy } from './strategies/paypal-commerce';\n\nexport default function createCheckoutButtonRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender,\n    formPoster: FormPoster,\n    host?: string\n): Registry<CheckoutButtonStrategy, CheckoutButtonMethodType> {\n    const registry = new Registry<CheckoutButtonStrategy, CheckoutButtonMethodType>();\n    const scriptLoader = getScriptLoader();\n    const checkoutActionCreator = new CheckoutActionCreator(\n        new CheckoutRequestSender(requestSender),\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            true\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.MASTERPASS, () =>\n        new MasterpassButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        ));\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_BRAINTREE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_STRIPE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.PAYPALEXPRESS, () =>\n        new PaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            host\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.PAYPALCOMMERCE, () =>\n        new PaypalCommerceButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new PaypalCommerceScriptLoader(scriptLoader),\n            formPoster,\n            requestSender\n        )\n    );\n\n    return registry;\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport enum NotEmbeddableErrorType {\n    MissingContainer = 'missing_container',\n    MissingContent = 'missing_content',\n    UnknownError = 'unknown_error',\n}\n\n/**\n * Throw this error if we are not able to embed the checkout form as an iframe.\n * This can be due to the fact that the provided container ID is invalid, or the\n * checkout form fails to load inside the iframe. It can also be due to an\n * unknown reason.\n */\nexport default class NotEmbeddableError extends StandardError {\n    constructor(\n        message?: string,\n        public subtype: NotEmbeddableErrorType = NotEmbeddableErrorType.UnknownError\n    ) {\n        super(message || 'Unable to embed the checkout form.');\n\n        this.name = 'NotEmbeddableError';\n        this.type = 'not_embeddable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error we are not able to sign in a shopper because the provided\n * login token is invalid.\n */\nexport default class InvalidLoginTokenError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'InvalidLoginTokenError';\n        this.type = 'invalid_login_token';\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster, IFrameComponent } from '../common/iframe';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { InvalidLoginTokenError, NotEmbeddableError, NotEmbeddableErrorType } from './errors';\nimport { EmbeddedContentEvent, EmbeddedContentEventType } from './iframe-content';\nimport LoadingIndicator from './loading-indicator';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nexport const ALLOW_COOKIE_ATTEMPT_INTERVAL = 10 * 60 * 1000;\nexport const IS_COOKIE_ALLOWED_KEY = 'isCookieAllowed';\nexport const LAST_ALLOW_COOKIE_ATTEMPT_KEY = 'lastAllowCookieAttempt';\n\n@bind\nexport default class EmbeddedCheckout {\n    private _iframe?: IFrameComponent;\n    private _isAttached: boolean;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _iframeCreator: ResizableIframeCreator,\n        private _messageListener: IframeEventListener<EmbeddedCheckoutEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedContentEvent>,\n        private _loadingIndicator: LoadingIndicator,\n        private _requestSender: RequestSender,\n        private _storage: BrowserStorage,\n        private _location: Location,\n        private _options: EmbeddedCheckoutOptions\n    ) {\n        this._isAttached = false;\n\n        if (this._options.onComplete) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutComplete, this._options.onComplete);\n        }\n\n        if (this._options.onError) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutError, this._options.onError);\n        }\n\n        if (this._options.onLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutLoaded, this._options.onLoad);\n        }\n\n        if (this._options.onFrameLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, this._options.onFrameLoad);\n        }\n\n        if (this._options.onSignOut) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.SignedOut, this._options.onSignOut);\n        }\n\n        this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, () => this._configureStyles());\n    }\n\n    attach(): Promise<this> {\n        if (this._isAttached) {\n            return Promise.resolve(this);\n        }\n\n        this._isAttached = true;\n        this._messageListener.listen();\n        this._loadingIndicator.show(this._options.containerId);\n\n        return this._allowCookie()\n            .then(() => this._attemptLogin())\n            .then(url => this._iframeCreator.createFrame(url, this._options.containerId))\n            .then(iframe => {\n                this._iframe = iframe;\n\n                this._configureStyles();\n                this._loadingIndicator.hide();\n            })\n            .catch(error => {\n                this._isAttached = false;\n\n                return this._retryAllowCookie(error)\n                    .catch(() => {\n                        this._messageListener.trigger({\n                            type: EmbeddedCheckoutEventType.FrameError,\n                            payload: error,\n                        });\n\n                        this._loadingIndicator.hide();\n\n                        throw error;\n                    });\n            })\n            .then(() => this);\n    }\n\n    detach(): void {\n        if (!this._isAttached) {\n            return;\n        }\n\n        this._isAttached = false;\n        this._messageListener.stopListen();\n\n        if (this._iframe && this._iframe.parentNode) {\n            this._iframe.parentNode.removeChild(this._iframe);\n            this._iframe.iFrameResizer.close();\n        }\n    }\n\n    private _configureStyles(): void {\n        if (!this._iframe || !this._iframe.contentWindow || !this._options.styles) {\n            return;\n        }\n\n        this._messagePoster.setTarget(this._iframe.contentWindow);\n\n        this._messagePoster.post({\n            type: EmbeddedContentEventType.StyleConfigured,\n            payload: this._options.styles,\n        });\n    }\n\n    private _attemptLogin(): Promise<string> {\n        if (!/^\\/login\\/token/.test(parseUrl(this._options.url).pathname)) {\n            return Promise.resolve(this._options.url);\n        }\n\n        return this._requestSender.post(this._options.url)\n            .then(({ body: { redirectUrl } }) => redirectUrl)\n            .catch(response => Promise.reject(new InvalidLoginTokenError(response)));\n    }\n\n    /**\n     * This workaround is required for certain browsers (namely Safari) that\n     * prevent session cookies to be set for a third party website unless the\n     * user has recently visited such website. Therefore, before we attempt to\n     * login or set an active cart in the session, we need to first redirect the\n     * user to the domain of Embedded Checkout.\n     */\n    private _allowCookie(): Promise<void> {\n        if (this._storage.getItem(IS_COOKIE_ALLOWED_KEY)) {\n            return Promise.resolve();\n        }\n\n        this._storage.setItem(IS_COOKIE_ALLOWED_KEY, true);\n\n        // It could be possible that the flag is set to true but the browser has\n        // already removed the permission to store third-party cookies. In that\n        // case, we should try to redirect the user again. But we only want to\n        // do it once within a fixed interval. This is to avoid getting into a\n        // redirect loop if the shopper actually doesn't have a valid card\n        // session.\n        this._storage.setItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY, Date.now());\n\n        const { origin } = parseUrl(this._options.url);\n        const redirectUrl = `${origin}/embedded-checkout/allow-cookie?returnUrl=${encodeURIComponent(this._location.href)}`;\n\n        document.body.style.visibility = 'hidden';\n        this._location.replace(redirectUrl);\n\n        return new Promise<never>(() => {});\n    }\n\n    private _retryAllowCookie(error: EmbeddedCheckoutError): Promise<void> {\n        const lastAttempt = Number(this._storage.getItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY));\n        const canRetry = (\n            (!lastAttempt || Date.now() - lastAttempt > ALLOW_COOKIE_ATTEMPT_INTERVAL) &&\n            error instanceof NotEmbeddableError &&\n            error.subtype === NotEmbeddableErrorType.MissingContent\n        );\n\n        if (!canRetry) {\n            return Promise.reject();\n        }\n\n        this._storage.removeItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY);\n        this._storage.removeItem(IS_COOKIE_ALLOWED_KEY);\n\n        return this._allowCookie();\n    }\n}\n","import { LoadingIndicatorStyles } from './embedded-checkout-styles';\n\nconst DEFAULT_STYLES: LoadingIndicatorStyles = {\n    size: 70,\n    color: '#d9d9d9',\n    backgroundColor: '#ffffff',\n};\n\nconst ROTATION_ANIMATION = 'embedded-checkout-loading-indicator-rotation';\n\nexport default class LoadingIndicator {\n    private _container: HTMLElement;\n    private _indicator: HTMLElement;\n    private _styles: LoadingIndicatorStyles;\n\n    constructor(\n        options?: { styles?: LoadingIndicatorStyles }\n    ) {\n        this._styles = { ...DEFAULT_STYLES, ...options && options.styles };\n\n        this._defineAnimation();\n\n        this._container = this._buildContainer();\n        this._indicator = this._buildIndicator();\n\n        this._container.appendChild(this._indicator);\n    }\n\n    show(parentId?: string): void {\n        if (parentId) {\n            const parent = document.getElementById(parentId);\n\n            if (!parent) {\n                throw new Error('Unable to attach the loading indicator because the parent ID is not valid.');\n            }\n\n            parent.appendChild(this._container);\n        }\n\n        this._container.style.visibility = 'visible';\n        this._container.style.opacity = '1';\n    }\n\n    hide(): void {\n        const handleTransitionEnd = () => {\n            this._container.style.visibility = 'hidden';\n\n            this._container.removeEventListener('transitionend', handleTransitionEnd);\n        };\n\n        this._container.addEventListener('transitionend', handleTransitionEnd);\n\n        this._container.style.opacity = '0';\n    }\n\n    private _buildContainer(): HTMLElement {\n        const container = document.createElement('div');\n\n        container.style.display = 'block';\n        container.style.bottom = '0';\n        container.style.left = '0';\n        container.style.height = '100%';\n        container.style.width = '100%';\n        container.style.position = 'absolute';\n        container.style.right = '0';\n        container.style.top = '0';\n        container.style.transition = 'all 250ms ease-out';\n        container.style.opacity = '0';\n\n        return container;\n    }\n\n    private _buildIndicator(): HTMLElement {\n        const indicator = document.createElement('div');\n\n        indicator.style.display = 'block';\n        indicator.style.width = `${this._styles.size}px`;\n        indicator.style.height = `${this._styles.size}px`;\n        indicator.style.borderRadius = `${this._styles.size}px`;\n        indicator.style.border = 'solid 1px';\n        indicator.style.borderColor = `${this._styles.backgroundColor} ${this._styles.backgroundColor} ${this._styles.color} ${this._styles.color}`;\n        indicator.style.margin = '0 auto';\n        indicator.style.position = 'absolute';\n        indicator.style.left = '0';\n        indicator.style.right = '0';\n        indicator.style.top = '50%';\n        indicator.style.transform = 'translateY(-50%) rotate(0deg)';\n        indicator.style.transformStyle = 'preserve-3d';\n        indicator.style.animation = `${ROTATION_ANIMATION} 500ms infinite cubic-bezier(0.69, 0.31, 0.56, 0.83)`;\n\n        return indicator;\n    }\n\n    private _defineAnimation(): void {\n        // In order to define CSS animation, we need to insert a stylesheet into the host frame.\n        // We only have to do it once.\n        if (document.getElementById(ROTATION_ANIMATION)) {\n            return;\n        }\n\n        const style = document.createElement('style');\n\n        style.id = ROTATION_ANIMATION;\n\n        document.head.appendChild(style);\n\n        if (style.sheet instanceof CSSStyleSheet) {\n            // We need to provide the 2nd parameter for IE11, even though it is\n            // 0 by default for all other browsers.\n            style.sheet.insertRule(`\n                @keyframes ${ROTATION_ANIMATION} {\n                    0% { transform: translateY(-50%) rotate(0deg); }\n                    100% { transform: translateY(-50%) rotate(360deg); }\n                }\n            `, 0);\n        }\n    }\n}\n","import { iframeResizer, isIframeEvent, IFrameComponent } from '../common/iframe';\nimport { parseUrl } from '../common/url';\n\nimport { EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport { NotEmbeddableError, NotEmbeddableErrorType } from './errors';\n\nexport default class ResizableIframeCreator {\n    constructor(\n        private _options?: { timeout: number }\n    ) {}\n\n    createFrame(src: string, containerId: string): Promise<IFrameComponent> {\n        const container = document.getElementById(containerId);\n        const { timeout = 60000 } = this._options || {};\n\n        if (!container) {\n            throw new NotEmbeddableError(\n                'Unable to embed the iframe because the container element could not be found.',\n                NotEmbeddableErrorType.MissingContainer\n            );\n        }\n\n        const iframe = document.createElement('iframe');\n\n        iframe.src = src;\n        iframe.style.border = 'none';\n        iframe.style.display = 'none';\n        iframe.style.width = '100%';\n        iframe.allowPaymentRequest = true;\n\n        container.appendChild(iframe);\n\n        return this._toResizableFrame(iframe, timeout)\n            .catch(error => {\n                container.removeChild(iframe);\n\n                throw error;\n            });\n    }\n\n    private _toResizableFrame(iframe: HTMLIFrameElement, timeoutInterval: number): Promise<IFrameComponent> {\n        // Can't simply listen to `load` event because it always gets triggered even if there's an error.\n        // Instead, listen to the `load` inside the iframe and let the parent frame know when it happens.\n        return new Promise((resolve, reject) => {\n            const timeout = window.setTimeout(() => {\n                reject(new NotEmbeddableError('Unable to embed the iframe because the content could not be loaded.'));\n            }, timeoutInterval);\n\n            const handleMessage = (event: MessageEvent) => {\n                if (event.origin !== parseUrl(iframe.src).origin) {\n                    return;\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameError)) {\n                    teardown();\n                    reject(new NotEmbeddableError(event.data.payload.message, NotEmbeddableErrorType.MissingContent));\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameLoaded)) {\n                    iframe.style.display = '';\n\n                    const contentId = event.data.payload && event.data.payload.contentId;\n                    const iframes = iframeResizer({\n                        scrolling: false,\n                        sizeWidth: false,\n                        heightCalculationMethod: contentId ? 'taggedElement' : 'lowestElement',\n                    }, iframe);\n\n                    teardown();\n                    resolve(iframes[iframes.length - 1]);\n                }\n            };\n\n            const teardown = () => {\n                window.removeEventListener('message', handleMessage);\n                window.clearTimeout(timeout);\n            };\n\n            window.addEventListener('message', handleMessage);\n        });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\n\nimport EmbeddedCheckout from './embedded-checkout';\nimport { EmbeddedCheckoutEventMap } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { EmbeddedContentEvent } from './iframe-content';\nimport LoadingIndicator from './loading-indicator';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nconst STORAGE_PREFIX = 'BigCommerce.EmbeddedCheckout';\n\n/**\n * Embed the checkout form in an iframe.\n *\n * @remarks\n * Once the iframe is embedded, it will automatically resize according to the\n * size of the checkout form. It will also notify the parent window when certain\n * events have occurred. i.e.: when the form is loaded and ready to be used.\n *\n * ```js\n * embedCheckout({\n *     url: 'https://checkout/url',\n *     containerId: 'container-id',\n * });\n * ```\n *\n * @param options - Options for embedding the checkout form.\n * @returns A promise that resolves to an instance of `EmbeddedCheckout`.\n */\nexport default function embedCheckout(options: EmbeddedCheckoutOptions): Promise<EmbeddedCheckout> {\n    const origin = parseUrl(options.url).origin;\n    const embeddedCheckout = new EmbeddedCheckout(\n        new ResizableIframeCreator(),\n        new IframeEventListener<EmbeddedCheckoutEventMap>(origin),\n        new IframeEventPoster<EmbeddedContentEvent>(origin),\n        new LoadingIndicator({ styles: options.styles && options.styles.loadingIndicator }),\n        createRequestSender(),\n        new BrowserStorage(STORAGE_PREFIX),\n        window.location,\n        options\n    );\n\n    return embeddedCheckout.attach();\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","module.exports = require(\"messageformat\");","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromPaymentErrorResponse(\n    response: Response<PaymentErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || message,\n        errors,\n    });\n}\n\nfunction joinErrors(errors: Array<{ code: string; message?: string }>): string | undefined {\n    if (!Array.isArray(errors)) {\n        return;\n    }\n\n    return errors.reduce((result: string[], error) => {\n        if (error && error.message) {\n            return [...result, error.message];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if a request fails to complete within its required timeframe\n * because of a network issue.\n */\nexport default class TimeoutError extends RequestError<{}> {\n    constructor(response?: Response) {\n        super(response, {\n            message: 'The request has timed out or aborted.',\n        });\n\n        this.name = 'TimeoutError';\n        this.type = 'timeout';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to successfully submit a server request\n * using a payment method because the method has invalid configuration or is in\n * an invalid state.\n */\nexport default class PaymentMethodInvalidError extends RequestError {\n    constructor(response?: Response) {\n        super(response, { message: 'There is a problem processing your payment. Please try again later.' });\n\n        this.name = 'PaymentMethodInvalidError';\n        this.type = 'payment_method_invalid';\n    }\n}\n","import { createSelector as defaultSelectorCreator } from 'reselect';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\n/**\n * This is a decorated version of Reselect's default `createSelector` function.\n * If the return value of the combiner function is a function, it will create a\n * memorized version of that function and return it instead.\n */\nexport default withMemoizedCombiner(defaultSelectorCreator);\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ConfigRequestSender } from '.';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\n\nexport default class ConfigActionCreator {\n    constructor(\n        private _configRequestSender: ConfigRequestSender\n    ) {}\n\n    @cachableAction\n    loadConfig(options?: RequestOptions & ActionOptions): Observable<LoadConfigAction> {\n        return Observable.create((observer: Observer<LoadConfigAction>) => {\n            observer.next(createAction(ConfigActionType.LoadConfigRequested));\n\n            this._configRequestSender.loadConfig(options)\n                .then(response => {\n                    observer.next(createAction(ConfigActionType.LoadConfigSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConfigActionType.LoadConfigFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport Config from './config';\n\nexport default class ConfigRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadConfig({ timeout }: RequestOptions = {}): Promise<Response<Config>> {\n        const url = '/api/storefront/checkout-settings';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../address';\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { BillingAddressUpdateRequestBody } from './billing-address';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class BillingAddressRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAddress(checkoutId: string, address: Partial<AddressRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: address, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateAddress(checkoutId: string, address: Partial<BillingAddressUpdateRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = address;\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nexport default class Registry<T, K extends string = string> {\n    private _factories: { [key: string]: Factory<T> };\n    private _instances: { [key: string]: T };\n    private _options: RegistryOptions;\n\n    constructor(options?: RegistryOptions) {\n        this._factories = {};\n        this._instances = {};\n        this._options = { defaultToken: 'default', ...options };\n    }\n\n    get(token?: K, cacheToken?: string): T {\n        try {\n            return this._getInstance(\n                token || this._options.defaultToken,\n                cacheToken || token || this._options.defaultToken\n            );\n        } catch (error) {\n            return this._getInstance(\n                this._options.defaultToken,\n                cacheToken || this._options.defaultToken\n            );\n        }\n    }\n\n    register(token: K, factory: Factory<T>): void {\n        if (this._hasFactory(token)) {\n            throw new InvalidArgumentError(`'${token}' is already registered.`);\n        }\n\n        this._factories[token] = factory;\n    }\n\n    protected _hasFactory(token: string): boolean {\n        return !!this._factories[token];\n    }\n\n    private _hasInstance(token: string): boolean {\n        return !!this._instances[token];\n    }\n\n    private _getInstance(token: string, cacheToken: string): T {\n        if (!this._hasInstance(cacheToken)) {\n            const factory = this._factories[token];\n\n            if (!factory) {\n                throw new InvalidArgumentError(`'${token}' is not registered.`);\n            }\n\n            this._instances[cacheToken] = factory();\n        }\n\n        return this._instances[cacheToken];\n    }\n}\n\nexport type Factory<T> = () => T;\n\nexport interface RegistryOptions {\n    defaultToken: string;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Masterpass, MasterpassHostWindow } from './masterpass';\n\nexport default class MasterpassScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: MasterpassHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<Masterpass> {\n        return this._scriptLoader\n            .loadScript(`//${testMode ? 'sandbox.' : ''}masterpass.com/integration/merchant.js`)\n            .then(() => {\n                if (!this._window.masterpass) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.masterpass;\n            });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to synchronize the checkout details of a\n * shopper with a hosted / remote checkout provider (i.e.: Amazon).\n */\nexport default class RemoteCheckoutSynchronizationError extends StandardError {\n    constructor(\n        public error?: Error\n    ) {\n        super('Unable to synchronize your checkout details with a third party provider. Please try again later.');\n\n        this.name = 'RemoteCheckoutSynchronizationError';\n        this.type = 'remote_checkout_synchronization';\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeSDKCreator, GooglePayBraintreeSDK } from '../braintree';\n\nimport { GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\nimport { GooglePayBraintreeDataRequest, GooglePayBraintreePaymentDataRequestV1 } from './googlepay-braintree';\n\nexport default class GooglePayBraintreeInitializer implements GooglePayInitializer {\n    private _googlePaymentInstance!: GooglePayBraintreeSDK;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        if (!paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return this._braintreeSDKCreator.getGooglePaymentComponent()\n            .then(googleBraintreePaymentInstance => {\n                this._googlePaymentInstance = googleBraintreePaymentInstance;\n\n                return this._createGooglePayPayload(\n                    checkout,\n                    paymentMethod.initializationData,\n                    hasShippingAddress\n                );\n            });\n    }\n\n    teardown(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload {\n        const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token).androidPayCards[0];\n\n        return {\n            nonce: payload.nonce,\n            type: payload.type,\n            description: payload.description,\n            details: {\n                cardType: payload.details.cardType,\n                lastFour: payload.details.lastFour,\n                lastTwo: payload.details.lastTwo,\n            },\n            binData: payload.binData,\n        };\n    }\n\n    private _createGooglePayPayload(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        if (!initializationData.platformToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePayBraintreePaymentDataRequest: GooglePayBraintreeDataRequest = {\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantName: initializationData.googleMerchantName,\n                merchantId: initializationData.googleMerchantId,\n            },\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            cardRequirements: {\n                billingAddressRequired: true,\n                billingAddressFormat: 'FULL',\n            },\n            shippingAddressRequired: !hasShippingAddress,\n            emailRequired: true,\n            phoneNumberRequired: true,\n        };\n\n        return this._mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(\n            this._googlePaymentInstance.createPaymentDataRequest(googlePayBraintreePaymentDataRequest)\n        );\n    }\n\n    private _mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(googlePayBraintreeDataRequestV1: GooglePayBraintreePaymentDataRequestV1): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: googlePayBraintreeDataRequestV1.merchantInfo.authJwt,\n                merchantId: googlePayBraintreeDataRequestV1.merchantInfo.merchantId,\n                merchantName: googlePayBraintreeDataRequestV1.merchantInfo.merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: googlePayBraintreeDataRequestV1.cardRequirements.allowedCardNetworks,\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: 'FULL',\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'braintree',\n                        'braintree:apiVersion': 'v1',\n                        'braintree:authorizationFingerprint': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:authorizationFingerprint'],\n                        'braintree:merchantId': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:merchantId'],\n                        'braintree:sdkVersion': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:sdkVersion'],\n                    },\n                },\n            }],\n            transactionInfo: googlePayBraintreeDataRequestV1.transactionInfo,\n            emailRequired: true,\n            shippingAddressRequired: googlePayBraintreeDataRequestV1.shippingAddressRequired,\n            shippingAddressParameters: {\n                phoneNumberRequired: googlePayBraintreeDataRequestV1.phoneNumberRequired,\n            },\n        };\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\n\nimport { GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\n\nexport default class GooglePayStripeInitializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(this._mapGooglePayStripeDataRequestToGooglePayDataRequestV2(\n            checkout,\n            paymentMethod.initializationData,\n            hasShippingAddress\n        ));\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload {\n        try {\n            const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token);\n\n            return {\n                nonce: payload.id,\n                type: payload.type,\n                details: {\n                    cardType: payload.card.brand,\n                    lastFour: payload.card.last4,\n                },\n            };\n        } catch (err) {\n            throw new InvalidArgumentError('Unable to parse response from Google Pay.');\n        }\n    }\n\n    private _mapGooglePayStripeDataRequestToGooglePayDataRequestV2(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantId: initializationData.googleMerchantId,\n                merchantName: initializationData.googleMerchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'],\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: 'FULL',\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'stripe',\n                        'stripe:version': initializationData.stripeVersion,\n                        'stripe:publishableKey': initializationData.stripePublishableKey,\n                    },\n                },\n            }],\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../../common/error/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(\n        public errors: HostedInputValidateErrorDataMap\n    ) {\n        super([\n            'Unable to proceed due to invalid user input values',\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\n        ].join('. '));\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","import { default as storage } from 'local-storage-fallback';\n\nexport default class BrowserStorage {\n    constructor(\n        private _namespace: string\n    ) {}\n\n    getItem<TValue = any>(key: string): TValue | null {\n        const rawValue = storage.getItem(this.withNamespace(key));\n\n        if (rawValue === null) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(rawValue);\n        } catch (error) {\n            // Clean up invalid values\n            this.removeItem(this.withNamespace(key));\n\n            return null;\n        }\n    }\n\n    getItemOnce<TValue = any>(key: string): TValue | null {\n        const value = this.getItem(key);\n\n        this.removeItem(key);\n\n        return value;\n    }\n\n    setItem<TValue = any>(key: string, value: TValue): void {\n        return storage.setItem(this.withNamespace(key), JSON.stringify(value));\n    }\n\n    removeItem(key: string): void {\n        return storage.removeItem(this.withNamespace(key));\n    }\n\n    private withNamespace(key: string): string {\n        return `${this._namespace}.${key}`;\n    }\n}\n","import { LoadScriptOptions, ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalScriptLoader {\n    private _window: PaypalHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    async loadPaypal(merchantId: string = ''): Promise<PaypalSDK> {\n        const scriptSrc = '//www.paypalobjects.com/api/checkout.min.js';\n        const options: LoadScriptOptions = { async: true, attributes: { 'data-merchant-id': merchantId } };\n\n        merchantId\n            ? await this._scriptLoader.loadScript(scriptSrc, options)\n            : await this._scriptLoader.loadScript(scriptSrc);\n\n        if (!this._window.paypal) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.paypal;\n    }\n}\n","import { IFrameComponent, IFrameOptions } from 'iframe-resizer';\n\nexport {\n    HeightCalculationMethod,\n    IFrameComponent,\n    IFrameMessageData,\n    IFrameObject,\n    IFrameOptions,\n    IFramePage,\n    IFramePageOptions,\n    IFrameResizedData,\n    IFrameScrollData,\n    PageInfo,\n    WidthCalculationMethod,\n} from 'iframe-resizer';\n\n// The reason why we are wrapping the original `iframeResizer` function imported\n// from the package is because the package sets up event listeners (window\n// resize etc...) as soon as the package is imported. Therefore, to defer the\n// side effect from happening until the function is actually being used, we are\n// importing the package inside this function. To minimise the chance of\n// importing the original package inadvertently, we are also re-exporting all of\n// its public interfaces. The re-exports do not cause any side effect because\n// they are plain TypeScript interfaces; meaning they are only used for type\n// checks rather than for code output.\nexport function iframeResizer(options: IFrameOptions, target: string | HTMLElement): IFrameComponent[] {\n    const { iframeResizer: originalIframeResizer } = require('iframe-resizer');\n\n    return originalIframeResizer(options, target);\n}\n\n// We also need to wrap the original `iframeResizer.contentWindow` because\n// similarly the package sets up event listeners as soon as the package gets\n// imported. Another reason is that if it is imported at the top level using a\n// regular import statement, it will be stripped out by Webpack as it is\n// considered as \"unused\", unless we explicitly mark it as a package that\n// produces side effects.\nexport function setupContentWindowForIframeResizer(): void {\n    /* eslint-disable-next-line import/no-internal-modules */\n    require('iframe-resizer/js/iframeResizer.contentWindow');\n}\n","import { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default class ErrorActionCreator {\n    clearError(error: Error): ClearErrorAction {\n        return {\n            type: ErrorActionType.ClearError,\n            payload: error,\n        };\n    }\n}\n","export default function getEnvironment(): string {\n    try {\n        return process.env.NODE_ENV || 'development';\n    } catch (e) {\n        return 'development';\n    }\n}\n","import ConsoleLogger from './console-logger';\nimport Logger from './logger';\nimport NoopLogger from './noop-logger';\n\nexport default function createLogger(isEnabled = true): Logger {\n    if (!isEnabled) {\n        return new NoopLogger();\n    }\n\n    return new ConsoleLogger(console);\n}\n","import Logger from './logger';\n\nexport default class ConsoleLogger implements Logger {\n    constructor(\n        private _console?: Console\n    ) {}\n\n    log(...messages: any[]): void {\n        this._logToConsole('log', ...messages);\n    }\n\n    info(...messages: any[]): void {\n        this._logToConsole('info', ...messages);\n    }\n\n    warn(...messages: any[]): void {\n        this._logToConsole('warn', ...messages);\n    }\n\n    error(...messages: any[]): void {\n        this._logToConsole('error', ...messages);\n    }\n\n    debug(...messages: any[]): void {\n        this._logToConsole('debug', ...messages);\n    }\n\n    private _logToConsole(type: keyof Console, ...messages: any[]): void {\n        if (!this._console || !this._console[type]) {\n            return;\n        }\n\n        this._console[type].call(this._console, ...messages);\n    }\n}\n","import Logger from './logger';\n\nexport default class NoopLogger implements Logger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n}\n","import { getEnvironment } from '../utility';\n\nimport createLogger from './create-logger';\nimport Logger from './logger';\n\nconst logger = createLogger(getEnvironment() !== 'test');\n\nexport default function getDefaultLogger(): Logger {\n    return logger;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ApplyCouponAction, CouponAction, CouponActionType, RemoveCouponAction } from './coupon-actions';\nimport CouponRequestSender from './coupon-request-sender';\n\nexport default class CouponActionCreator {\n    constructor(\n        private _couponRequestSender: CouponRequestSender\n    ) {}\n\n    applyCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.ApplyCouponRequested));\n\n            this._couponRequestSender.applyCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.ApplyCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.ApplyCouponFailed, response));\n                });\n        });\n    }\n\n    removeCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.RemoveCouponRequested));\n\n            this._couponRequestSender.removeCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.RemoveCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.RemoveCouponFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutIncludes, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class CouponRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n            body: { couponCode },\n        });\n    }\n\n    removeCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons/${couponCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable ,  Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { GiftCertificateRequestSender } from '.';\nimport { ApplyGiftCertificateAction, GiftCertificateActionType, RemoveGiftCertificateAction } from './gift-certificate-actions';\n\nexport default class GiftCertificateActionCreator {\n    constructor(\n        private _giftCertificateRequestSender: GiftCertificateRequestSender\n    ) {}\n\n    applyGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<ApplyGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.applyGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.ApplyGiftCertificateFailed, response));\n                });\n        });\n    }\n\n    removeGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<RemoveGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.removeGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.RemoveGiftCertificateFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class GiftCertificateRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n            body: { giftCertificateCode },\n        });\n    }\n\n    removeGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates/${giftCertificateCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport CustomerCredentials from './customer-credentials';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from './customer-request-options';\nimport { CustomerStrategyActionType, CustomerStrategyDeinitializeAction, CustomerStrategyInitializeAction, CustomerStrategySignInAction, CustomerStrategySignOutAction, CustomerStrategyWidgetAction } from './customer-strategy-actions';\nimport { CustomerStrategy } from './strategies';\n\nexport default class CustomerStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<CustomerStrategy>\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Observable<CustomerStrategySignInAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignInAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignInRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signIn(credentials, options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignInSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignInFailed, error, meta));\n                });\n        });\n    }\n\n    signOut(options?: CustomerRequestOptions): Observable<CustomerStrategySignOutAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignOutAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignOutRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signOut(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignOutSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignOutFailed, error, meta));\n                });\n        });\n    }\n\n    initialize(options?: CustomerInitializeOptions): ThunkAction<CustomerStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyInitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.InitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.InitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.InitializeFailed, error, meta));\n                });\n        });\n    }\n\n    deinitialize(options?: CustomerRequestOptions): ThunkAction<CustomerStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && !state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.DeinitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.DeinitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.DeinitializeFailed, error, meta));\n                });\n        });\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: CustomerRequestOptions): Observable<CustomerStrategyWidgetAction> {\n        return Observable.create((observer: Observer<CustomerStrategyWidgetAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.WidgetInteractionStarted, undefined, meta));\n\n            method().then(() => {\n                observer.next(createAction(CustomerStrategyActionType.WidgetInteractionFinished, undefined, meta));\n                observer.complete();\n            })\n            .catch(error => {\n                observer.error(createErrorAction(CustomerStrategyActionType.WidgetInteractionFailed, error, meta));\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayScriptLoader {\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadWidget(method: PaymentMethod, onPaymentReady?: () => void): Promise<void> {\n        const {\n            config: { merchantId, testMode },\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const url = 'https://' +\n            (region.toLowerCase() !== 'us' ? 'static-eu.' : 'static-na.') +\n            'payments-amazon.com/OffAmazonPayments/' +\n            `${region.toLowerCase()}/` +\n            (testMode ? 'sandbox/' : '') +\n            (region.toLowerCase() !== 'us' ? 'lpa/' : '') +\n            `js/Widgets.js?sellerId=${merchantId}`;\n\n        this._configureWidget(method, onPaymentReady);\n\n        return this._scriptLoader.loadScript(url);\n    }\n\n    private _configureWidget(method: PaymentMethod, onPaymentReady?: () => void): void {\n        const onLoginReady = () => {\n            if (!this._window.amazon) {\n                return;\n            }\n\n            this._window.amazon.Login.setClientId(method.initializationData.clientId);\n            this._window.amazon.Login.setUseCookie(true);\n        };\n\n        if (this._window.amazon && this._window.amazon.Login) {\n            onLoginReady();\n        } else {\n            this._window.onAmazonLoginReady = onLoginReady;\n        }\n\n        if (this._window.OffAmazonPayments && onPaymentReady) {\n            onPaymentReady();\n        } else {\n            this._window.onAmazonPaymentsReady = onPaymentReady;\n        }\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { Address, LegacyAddress } from '../../../address';\n\nimport { BraintreeDataCollector } from './braintree';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport { VisaCheckoutAddress, VisaCheckoutInitOptions, VisaCheckoutPaymentSuccessPayload, VisaCheckoutTokenizedPayload } from './visacheckout';\n\nexport default class BraintreeVisaCheckoutPaymentProcessor {\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(clientToken: string, options: VisaCheckoutInitializeOptions): Promise<VisaCheckoutInitOptions> {\n        this._braintreeSDKCreator.initialize(clientToken);\n\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(visaCheckout => visaCheckout.createInitOptions({\n                settings: {\n                    locale: options.locale,\n                    shipping: {\n                        collectShipping: options.collectShipping,\n                    },\n                },\n                paymentRequest: {\n                    currencyCode: options.currencyCode,\n                    subtotal: String(options.subtotal),\n                },\n            }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    handleSuccess(payment: VisaCheckoutPaymentSuccessPayload, shipping?: Address, billing?: Address): Promise<any> {\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(braintreeVisaCheckout => Promise.all([\n                braintreeVisaCheckout.tokenize(payment),\n                this._braintreeSDKCreator.getDataCollector(),\n            ])\n            .then(([tokenizedPayload, dataCollector]) => {\n                const {\n                    shippingAddress = this._toVisaCheckoutAddress(shipping),\n                    billingAddress = this._toVisaCheckoutAddress(billing),\n                } = tokenizedPayload;\n\n                return this._postForm({\n                    ...tokenizedPayload,\n                    shippingAddress,\n                    billingAddress,\n                }, dataCollector);\n            }));\n    }\n\n    private _postForm(paymentData: VisaCheckoutTokenizedPayload, dataCollector: BraintreeDataCollector) {\n        const {\n            userData,\n            billingAddress,\n            shippingAddress,\n            details: cardInformation,\n        } = paymentData;\n        const { userEmail } = userData;\n        const { deviceData } = dataCollector;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: paymentData.type,\n                nonce: paymentData.nonce,\n                provider: 'braintreevisacheckout',\n                action: 'set_external_checkout',\n                device_data: deviceData,\n                card_information: this._getCardInformation(cardInformation),\n                billing_address: this._getAddress(userEmail, billingAddress),\n                shipping_address: this._getAddress(userEmail, shippingAddress),\n            },\n        });\n    }\n\n    private _toVisaCheckoutAddress(address?: Address): VisaCheckoutAddress {\n        if (!address) {\n            return {};\n        }\n\n        return {\n            firstName: address.firstName,\n            lastName: address.lastName,\n            phoneNumber: address.phone,\n            streetAddress: address.address1,\n            extendedAddress: address.address2,\n            locality: address.city,\n            region: address.stateOrProvinceCode,\n            countryCode: address.countryCode,\n            postalCode: address.postalCode,\n        };\n    }\n\n    private _getAddress(email: string, address: VisaCheckoutAddress = {}): Partial<LegacyAddress> {\n        return {\n            email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone_number: address.phoneNumber,\n            address_line_1: address.streetAddress,\n            address_line_2: address.extendedAddress,\n            city: address.locality,\n            state: address.region,\n            country_code: address.countryCode,\n            postal_code: address.postalCode,\n        };\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastTwo: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastTwo,\n        };\n    }\n}\n\nexport interface VisaCheckoutInitializeOptions {\n    locale?: string;\n    collectShipping?: boolean;\n    subtotal?: number;\n    currencyCode?: string;\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\n\nexport default function createBraintreeVisaCheckoutPaymentProcessor(\n    scriptLoader: ScriptLoader,\n    requestSender: RequestSender\n) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n\n    return new BraintreeVisaCheckoutPaymentProcessor(braintreeSDKCreator, requestSender);\n}\n","enum PaymentStrategyType {\n    ADYENV2 = 'adyenv2',\n    AFFIRM = 'affirm',\n    AFTERPAY = 'afterpay',\n    AMAZON = 'amazon',\n    BLUESNAPV2 = 'bluesnapv2',\n    CREDIT_CARD = 'creditcard',\n    CYBERSOURCE = 'cybersource',\n    KLARNA = 'klarna',\n    KLARNAV2 = 'klarnav2',\n    LEGACY = 'legacy',\n    OFFLINE = 'offline',\n    OFFSITE = 'offsite',\n    PAYPAL = 'paypal',\n    PAYPAL_EXPRESS = 'paypalexpress',\n    PAYPAL_EXPRESS_CREDIT = 'paypalexpresscredit',\n    PAYPAL_COMMERCE = 'paypalcommerce',\n    SAGE_PAY = 'sagepay',\n    SQUARE = 'squarev2',\n    STRIPEV3 = 'stripev3',\n    NO_PAYMENT_DATA_REQUIRED = 'nopaymentdatarequired',\n    BRAINTREE = 'braintree',\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    BRAINTREE_VISA_CHECKOUT = 'braintreevisacheckout',\n    BRAINTREE_GOOGLE_PAY = 'googlepaybraintree',\n    CHASE_PAY = 'chasepay',\n    WE_PAY = 'wepay',\n    MASTERPASS = 'masterpass',\n    STRIPE_GOOGLE_PAY = 'googlepaystripe',\n    ZIP = 'zip',\n    CONVERGE = 'converge',\n}\n\nexport default PaymentStrategyType;\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { VisaCheckoutHostWindow, VisaCheckoutSDK } from './visacheckout';\n\nexport default class VisaCheckoutScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: VisaCheckoutHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<VisaCheckoutSDK> {\n        return this._scriptLoader\n            .loadScript(`//${testMode ? 'sandbox-' : ''}assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js`)\n            .then(() => {\n                if (!this._window.V) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.V;\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { ChasePayHostWindow, JPMC } from './chasepay';\n\nexport default class ChasePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ChasePayHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<JPMC> {\n        return this._scriptLoader\n            .loadScript(`//pwc${testMode ? 'psb' : ''}.chase.com/pwc/checkout/js/v20170521/list.action?type=raw&applId=PWC&channelId=CWC&version=1`)\n            .then(() => {\n                if (!this._window.JPMC) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.JPMC;\n            });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class RemoteCheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    initializeBilling(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/billing`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializeShipping(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/shipping`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializePayment(methodName: string, params?: InitializePaymentOptions, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/payment`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    loadSettings(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/settings`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    signOut(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/signout`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    generateToken({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout-token';\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    trackAuthorizationEvent({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout/events/shopper-checkout-service-provider-authorization-requested';\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n\nexport interface InitializePaymentOptions {\n    authorizationToken?: string;\n    customerMessage?: string;\n    referenceId?: string;\n    useStoreCredit?: boolean;\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutRequestSender, { InitializePaymentOptions } from './remote-checkout-request-sender';\nimport { RemoteCheckoutStateData } from './remote-checkout-state';\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action<T>\n */\nexport default class RemoteCheckoutActionCreator {\n    constructor(\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender\n    ) {}\n\n    initializeBilling(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeBilling(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteBillingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializeShipping(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeShipping(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteShippingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializePayment(methodId: string, params?: InitializePaymentOptions, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializePayment(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemotePaymentFailed, response, { methodId }));\n                });\n        });\n    }\n\n    loadSettings(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.loadSettings(methodId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.LoadRemoteSettingsFailed, response, { methodId }));\n                });\n        });\n    }\n\n    signOut(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.signOut(methodId, options)\n                .then(() => {\n                    observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.SignOutRemoteCustomerFailed, response, { methodId }));\n                });\n        });\n    }\n\n    updateCheckout<K extends keyof RemoteCheckoutStateData>(methodId: K, data: Partial<RemoteCheckoutStateData[K]>): Action {\n        return createAction(RemoteCheckoutActionType.UpdateRemoteCheckout, data, { methodId });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\n\nimport { CustomerActionType, SignInCustomerAction, SignOutCustomerAction } from './customer-actions';\nimport CustomerCredentials from './customer-credentials';\nimport CustomerRequestSender from './customer-request-sender';\n\nexport default class CustomerActionCreator {\n    constructor(\n        private _customerRequestSender: CustomerRequestSender,\n        private _checkoutActionCreator: CheckoutActionCreator\n    ) {}\n\n    signInCustomer(\n        credentials: CustomerCredentials,\n        options?: RequestOptions\n    ): ThunkAction<SignInCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignInCustomerRequested)),\n            from(this._customerRequestSender.signInCustomer(credentials, options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignInCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignInCustomerFailed, error))\n        );\n    }\n\n    signOutCustomer(\n        options?: RequestOptions\n    ): ThunkAction<SignOutCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignOutCustomerRequested)),\n            from(this._customerRequestSender.signOutCustomer(options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignOutCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignOutCustomerFailed, error))\n        );\n    }\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if we try to call a method that is only a stub and has not\n * been fully implemented.\n */\nexport default class NotImplementedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Not implemented.');\n\n        this.name = 'NotImplementedError';\n        this.type = 'not_implemented';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayLoginButton, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport AmazonPayCustomerInitializeOptions from './amazon-pay-customer-initialize-options';\n\nexport default class AmazonPayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { onError = () => {} } = amazonOptions;\n                const onReady = () => {\n                    this._createSignInButton({\n                        ...amazonOptions,\n                        onError: error => {\n                            reject(error);\n                            onError(error);\n                        },\n                    });\n\n                    resolve();\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via AmazonPay, the shopper must click on \"Login with Amazon\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(options: AmazonPayCustomerInitializeOptions): AmazonPayLoginButton {\n        if (!this._paymentMethod || !this._window.OffAmazonPayments) {\n            throw new NotInitializedError(NotInitializedErrorType.CustomerNotInitialized);\n        }\n\n        if (!this._paymentMethod.config.merchantId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { initializationData } = this._paymentMethod;\n\n        return new this._window.OffAmazonPayments.Button(options.container, this._paymentMethod.config.merchantId, {\n            color: options.color || 'Gold',\n            size: options.size || 'small',\n            type: 'PwA',\n            useAmazonAddressBook: true,\n            onError: options.onError,\n            authorization: () => {\n                this._handleAuthorization(initializationData);\n            },\n        });\n    }\n\n    private _handleAuthorization(options: AuthorizationOptions): void {\n        this._remoteCheckoutRequestSender.generateToken()\n            .then(({ body }) => {\n                if (!this._window.amazon) {\n                    throw new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized);\n                }\n\n                this._window.amazon.Login.authorize({\n                    popup: false,\n                    scope: 'payments:shipping_address payments:billing_address payments:widget profile',\n                    state: `${options.tokenPrefix}${body.token}`,\n                }, options.redirectUrl);\n\n                this._remoteCheckoutRequestSender.trackAuthorizationEvent();\n            });\n    }\n}\n\ninterface AuthorizationOptions {\n    redirectUrl: string;\n    tokenPrefix: string;\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { BraintreeVisaCheckoutPaymentProcessor, VisaCheckoutPaymentSuccessPayload, VisaCheckoutScriptLoader } from '../../../payment/strategies/braintree';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategyActionCreator from '../../customer-strategy-action-creator';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class BraintreeVisaCheckoutCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _buttonClassName: string = 'visa-checkout-wrapper';\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    container,\n                    onError = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: true,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, initOptions]) => {\n                    const signInButton = this._createSignInButton(container, this._buttonClassName);\n\n                    visaCheckout.init(initOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n\n                    return signInButton;\n                })\n                .then(signInButton => { signInButton.style.visibility = 'visible'; });\n            })\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via VisaCheckout, the shopper must click on \"Visa Checkout\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut('braintreevisacheckout', options)\n        );\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(\n            this._customerStrategyActionCreator.widgetInteraction(() => {\n                return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                    paymentSuccessPayload,\n                    state.shippingAddress.getShippingAddress(),\n                    state.billingAddress.getBillingAddress()\n                )\n                .then(() => this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _createSignInButton(containerId: string, buttonClass: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new Error('Need a container to place the button');\n        }\n\n        return (container.querySelector('.' + buttonClass) as HTMLElement) ||\n            this._insertVisaCheckoutButton(container, buttonClass);\n    }\n\n    private _insertVisaCheckoutButton(container: Element, buttonClass: string): HTMLElement {\n        const buttonSource = 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png?acceptCanadianVisaDebit=false&cobrand=true&size=154';\n        const buttonTemplate = `\n            <img\n                alt=\"Visa Checkout\"\n                class=\"v-button\"\n                role=\"button\"\n                src=\"${buttonSource}\"\n                />\n            <a class=\"v-learn v-learn-default\" style=\"text-align: right; display: block; font-size: 10px; color: #003366;\" href=\"#\" data-locale=\"en_US\">Tell Me More</a>`;\n\n        const visaCheckoutButton = document.createElement('div');\n        visaCheckoutButton.style.visibility = 'hidden';\n        visaCheckoutButton.className = buttonClass;\n        visaCheckoutButton.innerHTML = buttonTemplate;\n\n        container.appendChild(visaCheckoutButton);\n\n        return visaCheckoutButton;\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { ChasePayScriptLoader, ChasePaySuccessPayload } from '../../../payment/strategies/chasepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class ChasePayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _requestSender: RequestSender,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { chasepay: chasePayOptions, methodId } = options;\n\n        if (!chasePayOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.chasepay\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const cart = state.cart.getCart();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.digitalSessionId) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                const { container } = chasePayOptions;\n\n                return this._chasePayScriptLoader.load(this._paymentMethod.config.testMode)\n                    .then(JPMC => {\n                        const ChasePay = JPMC.ChasePay;\n\n                        ChasePay.configure({\n                            language: storeConfig.storeProfile.storeLanguage,\n                        });\n\n                        if (ChasePay.isChasePayUp) {\n                            ChasePay.insertButtons({\n                                containers: [container],\n                            });\n                        }\n\n                        ChasePay.on(ChasePay.EventType.START_CHECKOUT, () => {\n                            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n                                .then(() => {\n                                    const state = this._store.getState();\n                                    const method = state.paymentMethods.getPaymentMethod(methodId);\n                                    const sessionId = method && method.initializationData && method.initializationData.digitalSessionId;\n\n                                    if (sessionId) {\n                                        ChasePay.startCheckout(sessionId);\n                                    }\n                                });\n                        });\n\n                        ChasePay.on(ChasePay.EventType.COMPLETE_CHECKOUT, (payload: ChasePaySuccessPayload) => {\n                            const state = this._store.getState();\n                            const method = state.paymentMethods.getPaymentMethod(methodId);\n                            const requestId = method && method.initializationData && method.initializationData.merchantRequestId;\n\n                            if (requestId) {\n                                this._setExternalCheckoutData(payload, requestId)\n                                    .then(() => {\n                                        this._reloadPage();\n                                });\n                            }\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Chase Pay®, the shopper must click on \"Chase Pay®\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _setExternalCheckoutData(payload: ChasePaySuccessPayload, requestId: string): Promise<Response> {\n        const url = `checkout.php?provider=chasepay&action=set_external_checkout`;\n        const options = {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                sessionToken: payload.sessionToken,\n                merchantRequestId: requestId,\n            },\n            method: 'post',\n        };\n\n        return this._requestSender.sendRequest(url, options);\n    }\n\n    private _reloadPage() {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: {\n                fromChasePay: true,\n            },\n        });\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport CustomerActionCreator from '../../customer-action-creator';\nimport CustomerCredentials from '../../customer-credentials';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class DefaultCustomerStrategy implements CustomerStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _customerActionCreator: CustomerActionCreator\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signInCustomer(credentials, options)\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signOutCustomer(options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport GooglePayCustomerInitializeOptions from './googlepay-customer-initialize-options';\n\nexport default class GooglePayCustomerStrategy implements CustomerStrategy {\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId }  = options;\n\n        const googlePayOptions = this._getGooglePayOptions(options);\n\n        if (!methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._googlePayPaymentProcessor.initialize(methodId)\n            .then(() => {\n                this._walletButton = this._createSignInButton(googlePayOptions.container);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Google Pay, the shopper must click on \"Google Pay\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const button = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(button);\n\n        return button;\n    }\n\n    private _getGooglePayOptions(options: CustomerInitializeOptions): GooglePayCustomerInitializeOptions {\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError();\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error && error.message !== 'CANCELED') {\n            throw error;\n        }\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(paymentData => this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => {\n                if (paymentData.shippingAddress) {\n                    this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n                }\n            }))\n            .then(() => this._onPaymentSelectComplete())\n            .catch(error => this._onError(error));\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { getCallbackUrl, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class MasterpassCustomerStrategy implements CustomerStrategy {\n    private _signInButton?: HTMLElement;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { masterpass: masterpassOptions, methodId } = options;\n\n        if (!masterpassOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.masterpass\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const cart = state.cart.getCart();\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                const { container } = masterpassOptions;\n\n                const payload = {\n                    checkoutId: this._paymentMethod.initializationData.checkoutId,\n                    allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n                    amount: cart.cartAmount.toString(),\n                    currency: cart.currency.code,\n                    cartId: cart.id,\n                    suppressShippingAddress: false,\n                    callbackUrl: getCallbackUrl('checkout'),\n                };\n\n                return this._masterpassScriptLoader.load(this._paymentMethod.config.testMode)\n                    .then(Masterpass => {\n                        this._signInButton = this._createSignInButton(container);\n\n                        this._signInButton.addEventListener('click', () => {\n                            Masterpass.checkout(payload);\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n        button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        container.appendChild(button);\n\n        return button;\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotImplementedError } from '../../../common/error/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class SquareCustomerStrategy implements CustomerStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator\n    ) {}\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport Country from './country';\nimport { CountryActionType } from './country-actions';\nimport CountryRequestSender from './country-request-sender';\n\nexport default class CountryActionCreator {\n    constructor(\n        private _countryRequestSender: CountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<Action<Country[]>> {\n        return Observable.create((observer: Observer<Action<Country[]>>) => {\n            observer.next(createAction(CountryActionType.LoadCountriesRequested));\n\n            this._countryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(CountryActionType.LoadCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CountryActionType.LoadCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { CountryResponseBody } from './country-responses';\n\nexport default class CountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/store/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { InternalOrderResponseBody } from './internal-order-responses';\nimport Order from './order';\nimport OrderParams from './order-params';\n\nexport default class OrderRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadOrder(orderId: number, { timeout, params }: RequestOptions<OrderParams> = {}): Promise<Response<Order>> {\n        const url = `/api/storefront/orders/${orderId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = [\n            'payments',\n            'lineItems.physicalItems.socialMedia',\n            'lineItems.physicalItems.options',\n            'lineItems.digitalItems.socialMedia',\n            'lineItems.digitalItems.options',\n        ];\n\n        return this._requestSender.get(url, {\n            params: {\n                include: joinIncludes([\n                    ...include,\n                    ...(params && params.include || []),\n                ]),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    submitOrder(body: InternalOrderRequestBody, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = '/internalapi/v1/checkout/order';\n\n        return this._requestSender.post(url, { body, timeout });\n    }\n\n    finalizeOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = `/internalapi/v1/checkout/order/${orderId}`;\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam check.\n */\nexport default class SpamProtectionNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam check. Please try again.');\n\n        this.name = 'SpamProtectionNotCompletedError';\n        this.type = 'spam_protection_not_completed';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, from, of, Observable, Observer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutValidator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { SpamProtectionNotCompletedError } from '../spam-protection/errors';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { FinalizeOrderAction, LoadOrderAction, LoadOrderPaymentsAction, OrderActionType, SubmitOrderAction } from './order-actions';\nimport OrderRequestBody from './order-request-body';\nimport OrderRequestSender from './order-request-sender';\n\nexport default class OrderActionCreator {\n    constructor(\n        private _orderRequestSender: OrderRequestSender,\n        private _checkoutValidator: CheckoutValidator\n    ) {}\n\n    loadOrder(orderId: number, options?: RequestOptions): Observable<LoadOrderAction> {\n        return new Observable((observer: Observer<LoadOrderAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderFailed, response));\n                });\n        });\n    }\n\n    // TODO: Remove when checkout does not contain unrelated order data.\n    loadOrderPayments(orderId: number, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        return new Observable((observer: Observer<LoadOrderPaymentsAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderPaymentsRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderPaymentsSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderPaymentsFailed, response));\n                });\n        });\n    }\n\n    loadCurrentOrder(options?: RequestOptions): ThunkAction<LoadOrderAction, InternalCheckoutSelectors> {\n        return store => defer(() => {\n            const orderId = this._getCurrentOrderId(store.getState());\n\n            if (!orderId) {\n                throw new MissingDataError(MissingDataErrorType.MissingOrderId);\n            }\n\n            return this.loadOrder(orderId, options);\n        });\n    }\n\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<SubmitOrderAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(OrderActionType.SubmitOrderRequested)),\n            defer(() => {\n                const state = store.getState();\n                const externalSource = state.config.getExternalSource();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (checkout.shouldExecuteSpamCheck) {\n                    throw new SpamProtectionNotCompletedError();\n                }\n\n                return from(\n                    this._checkoutValidator.validate(checkout, options)\n                        .then(() => this._orderRequestSender.submitOrder(this._mapToOrderRequestBody(\n                            payload,\n                            checkout.customerMessage,\n                            externalSource\n                        ), options))\n                ).pipe(\n                    switchMap(response => concat(\n                        // TODO: Remove once we can submit orders using storefront API\n                        this.loadOrder(response.body.data.order.orderId, options),\n                        of(createAction(OrderActionType.SubmitOrderSucceeded, response.body.data, { ...response.body.meta, token: response.headers.token }))\n                    ))\n                );\n            }).pipe(\n                catchError(error => throwErrorAction(OrderActionType.SubmitOrderFailed, error))\n            )\n        );\n    }\n\n    finalizeOrder(orderId: number, options?: RequestOptions): Observable<FinalizeOrderAction | LoadOrderAction> {\n        return concat(\n            of(createAction(OrderActionType.FinalizeOrderRequested)),\n            from(this._orderRequestSender.finalizeOrder(orderId, options))\n                .pipe(\n                    switchMap(response => concat(\n                        this.loadOrder(orderId, options),\n                        of(createAction(OrderActionType.FinalizeOrderSucceeded, response.body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(OrderActionType.FinalizeOrderFailed, error))\n        );\n    }\n\n    private _getCurrentOrderId(state: InternalCheckoutSelectors): number | undefined {\n        const order = state.order.getOrder();\n        const checkout = state.checkout.getCheckout();\n\n        return (order && order.orderId) || (checkout && checkout.orderId);\n    }\n\n    private _mapToOrderRequestBody(\n        payload: OrderRequestBody,\n        customerMessage: string,\n        externalSource?: string\n    ): InternalOrderRequestBody {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            return {\n                ...order,\n                customerMessage,\n                externalSource,\n            };\n        }\n\n        return {\n            ...order,\n            customerMessage,\n            externalSource,\n            payment: {\n                paymentData: payment.paymentData,\n                name: payment.methodId,\n                gateway: payment.gatewayId,\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are trying to make an order finalization request for a\n * payment method that does not require such procedure.\n */\nexport default class OrderFinalizationNotRequiredError extends StandardError {\n    constructor() {\n        super('The current order does not need to be finalized at this stage.');\n\n        this.name = 'OrderFinalizationNotRequiredError';\n        this.type = 'order_finalization_not_required';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { LoadOrderPaymentsAction, OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../order';\nimport { OrderFinalizationNotRequiredError } from '../order/errors';\nimport { SpamProtectionAction, SpamProtectionActionCreator } from '../spam-protection';\n\nimport { PaymentInitializeOptions, PaymentRequestOptions } from './payment-request-options';\nimport { PaymentStrategyActionType, PaymentStrategyDeinitializeAction, PaymentStrategyExecuteAction, PaymentStrategyFinalizeAction, PaymentStrategyInitializeAction, PaymentStrategyWidgetAction } from './payment-strategy-actions';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: PaymentStrategyRegistry,\n        private _orderActionCreator: OrderActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<PaymentStrategyExecuteAction | SpamProtectionAction, InternalCheckoutSelectors> {\n        const { payment = {} as OrderPaymentRequestBody, useStoreCredit } = payload;\n        const meta = { methodId: payment.methodId };\n\n        return store => concat(\n            this._spamProtectionActionCreator.execute()(store),\n            of(createAction(PaymentStrategyActionType.ExecuteRequested, undefined, meta)),\n            defer(() => {\n                const state = store.getState();\n\n                let strategy: PaymentStrategy;\n\n                if (state.payment.isPaymentDataRequired(useStoreCredit)) {\n                    const method = state.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n\n                    if (!method) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    strategy = this._strategyRegistry.getByMethod(method);\n                } else {\n                    strategy = this._strategyRegistry.get(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED);\n                }\n\n                return strategy\n                    .execute(payload, { ...options, methodId: payment.methodId, gatewayId: payment.gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.ExecuteSucceeded, undefined, meta));\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.ExecuteFailed, error, meta))\n        );\n    }\n\n    finalize(options?: RequestOptions): ThunkAction<PaymentStrategyFinalizeAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentStrategyActionType.FinalizeRequested)),\n            this._loadOrderPaymentsIfNeeded(store, options),\n            defer(() => {\n                const state = store.getState();\n                const { providerId = '', gatewayId = '' } = state.payment.getPaymentId() || {};\n                const method = state.paymentMethods.getPaymentMethod(providerId, gatewayId);\n\n                if (!method) {\n                    throw new OrderFinalizationNotRequiredError();\n                }\n\n                return this._strategyRegistry.getByMethod(method)\n                    .finalize({ ...options, methodId: method.id, gatewayId: method.gateway })\n                    .then(() => createAction(PaymentStrategyActionType.FinalizeSucceeded, undefined, { methodId: method.id }));\n            })\n        ).pipe(\n            catchError(error => {\n                const state = store.getState();\n                const payment = state.payment.getPaymentId();\n\n                return throwErrorAction(PaymentStrategyActionType.FinalizeFailed, error, { methodId: payment && payment.providerId });\n            })\n        );\n    }\n\n    initialize(options: PaymentInitializeOptions): ThunkAction<PaymentStrategyInitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.InitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .initialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.InitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.InitializeFailed, error, { methodId }))\n        );\n    }\n\n    deinitialize(options: PaymentRequestOptions): ThunkAction<PaymentStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && !state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.DeinitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .deinitialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.DeinitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.DeinitializeFailed, error, { methodId }))\n        );\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: PaymentRequestOptions): Observable<PaymentStrategyWidgetAction> {\n        const methodId = options && options.methodId;\n        const meta = { methodId };\n\n        return concat(\n            of(createAction(PaymentStrategyActionType.WidgetInteractionStarted, undefined, meta)),\n            defer(() =>\n                method().then(() => createAction(PaymentStrategyActionType.WidgetInteractionFinished, undefined, meta))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.WidgetInteractionFailed, error, meta))\n        );\n    }\n\n    private _loadOrderPaymentsIfNeeded(store: ReadableCheckoutStore, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        const state = store.getState();\n        const checkout = state.checkout.getCheckout();\n\n        if (checkout && checkout.orderId) {\n            return this._orderActionCreator.loadOrderPayments(checkout.orderId, options);\n        }\n\n        return empty();\n    }\n}\n","import { isEqual } from 'lodash';\n\nimport { PartialDeep } from '../common/types';\n\nimport Cart from './cart';\n\nexport default class CartComparator {\n    isEqual(cartA: Cart, cartB: Cart): boolean {\n        return isEqual(\n            this._normalize(cartA),\n            this._normalize(cartB)\n        );\n    }\n\n    private _normalize(cart: Cart): PartialDeep<Cart> {\n        return {\n            cartAmount: cart.cartAmount,\n            currency: cart.currency,\n            id: cart.id,\n            lineItems: {\n                digitalItems: cart.lineItems.digitalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                    })),\n                giftCertificates: cart.lineItems.giftCertificates\n                    .slice()\n                    .sort((itemA, itemB) => `${itemA.id}`.localeCompare(`${itemB.id}`))\n                    .map(item => ({\n                        amount: item.amount,\n                        recipient: item.recipient,\n                    })),\n                physicalItems: cart.lineItems.physicalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                        giftWrapping: item.giftWrapping,\n                    })),\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class CartChangedError extends StandardError {\n    constructor() {\n        super('An update to your shopping cart has been detected and your available shipping costs have been updated.');\n\n        this.name = 'CartChangedError';\n        this.type = 'cart_changed';\n    }\n}\n","import { isEqual, map } from 'lodash';\n\nimport { CartComparator } from '../cart';\nimport { CartChangedError } from '../cart/errors';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { Coupon, GiftCertificate } from '../coupon';\n\nimport Checkout from './checkout';\nimport CheckoutRequestSender from './checkout-request-sender';\n\nexport default class CheckoutValidator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    validate(checkout?: Checkout, options?: RequestOptions): Promise<void> {\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        return this._checkoutRequestSender.loadCheckout(checkout.id, options)\n            .then(response => {\n                const comparator = new CartComparator();\n\n                if (checkout.outstandingBalance === response.body.outstandingBalance\n                    && this._compareCoupons(checkout.coupons, response.body.coupons)\n                    && this._compareGiftCertificates(checkout.giftCertificates, response.body.giftCertificates)\n                    && comparator.isEqual(checkout.cart, response.body.cart)\n                ) {\n                    return;\n                }\n\n                throw new CartChangedError();\n            });\n    }\n\n    private _compareCoupons(couponsA: Coupon[], couponsB: Coupon[]): boolean {\n        return isEqual(map(couponsA, 'code'), map(couponsB, 'code'));\n    }\n\n    private _compareGiftCertificates(giftCertificatesA: GiftCertificate[], giftCertificatesB: GiftCertificate[]): boolean {\n        return isEqual(map(giftCertificatesA, 'code'), map(giftCertificatesB, 'code'));\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to an unknown error with the hosted payment form.');\n\n        this.name = 'InvalidHostedFormError';\n        this.type = 'invalid_hosted_form';\n    }\n}\n","import { values } from 'lodash';\nimport { fromEvent } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\n\nimport { mapFromPaymentErrorResponse } from '../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\nimport { CardInstrument } from '../payment/instrument';\n\nimport { InvalidHostedFormConfigError, InvalidHostedFormError, InvalidHostedFormValueError } from './errors';\nimport { HostedFieldEvent, HostedFieldEventType } from './hosted-field-events';\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\nimport { HostedInputAttachErrorEvent, HostedInputEventMap, HostedInputEventType, HostedInputSubmitErrorEvent, HostedInputValidateEvent } from './iframe-content';\n\nexport const RETRY_INTERVAL = 60 * 1000;\nexport const LAST_RETRY_KEY = 'lastRetry';\n\nexport default class HostedField {\n    private _iframe: HTMLIFrameElement;\n\n    constructor(\n        host: string,\n        formId: string,\n        private _type: HostedFieldType,\n        private _containerId: string,\n        private _placeholder: string,\n        private _accessibilityLabel: string,\n        private _styles: HostedFieldStylesMap,\n        private _eventPoster: IframeEventPoster<HostedFieldEvent>,\n        private _eventListener: IframeEventListener<HostedInputEventMap>,\n        private _storage: BrowserStorage,\n        private _location: Location,\n        private _cardInstrument?: CardInstrument\n    ) {\n        this._iframe = document.createElement('iframe');\n\n        this._iframe.src = `${host}/pay/hosted_forms/${formId}/field?version=${LIBRARY_VERSION}`;\n        this._iframe.style.border = 'none';\n        this._iframe.style.height = '100%';\n        this._iframe.style.overflow = 'hidden';\n        this._iframe.style.width = '100%';\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    attach(): Promise<void> {\n        const container = document.getElementById(this._containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        container.appendChild(this._iframe);\n        this._eventListener.listen();\n\n        return fromEvent(this._iframe, 'load')\n            .pipe(\n                switchMap(async ({ target }) => {\n                    const contentWindow = target && (target as HTMLIFrameElement).contentWindow;\n\n                    if (!contentWindow) {\n                        throw new Error('The content window of the iframe cannot be accessed.');\n                    }\n\n                    this._eventPoster.setTarget(contentWindow);\n\n                    await this._eventPoster.post({\n                        type: HostedFieldEventType.AttachRequested,\n                        payload: {\n                            accessibilityLabel: this._accessibilityLabel,\n                            cardInstrument: this._cardInstrument,\n                            fontUrls: this._getFontUrls(),\n                            placeholder: this._placeholder,\n                            styles: this._styles,\n                            type: this._type,\n                        },\n                    }, {\n                        successType: HostedInputEventType.AttachSucceeded,\n                        errorType: HostedInputEventType.AttachFailed,\n                    });\n                }),\n                catchError(error => {\n                    if (this._isAttachErrorEvent(error)) {\n                        return this._handleAttachErrorEvent(error);\n                    }\n\n                    throw error;\n                }),\n                take(1)\n            ).toPromise();\n    }\n\n    detach(): void {\n        if (!this._iframe.parentElement) {\n            return;\n        }\n\n        this._iframe.parentElement.removeChild(this._iframe);\n        this._eventListener.stopListen();\n    }\n\n    async submitForm(\n        fields: HostedFieldType[],\n        data: HostedFormOrderData\n    ): Promise<void> {\n        try {\n            await this._eventPoster.post({\n                type: HostedFieldEventType.SubmitRequested,\n                payload: { fields, data },\n            }, {\n                successType: HostedInputEventType.SubmitSucceeded,\n                errorType: HostedInputEventType.SubmitFailed,\n            });\n        } catch (event) {\n            if (this._isSubmitErrorEvent(event)) {\n                if (event.payload.error.code === 'hosted_form_error') {\n                    throw new InvalidHostedFormError(event.payload.error.message);\n                }\n\n                if (event.payload.response) {\n                    throw mapFromPaymentErrorResponse(event.payload.response);\n                }\n\n                throw new Error(event.payload.error.message);\n            }\n\n            throw event;\n        }\n    }\n\n    async validateForm(): Promise<void> {\n        const { payload } = await this._eventPoster.post<HostedInputValidateEvent>({\n            type: HostedFieldEventType.ValidateRequested,\n        }, {\n            successType: HostedInputEventType.Validated,\n        });\n\n        if (!payload.isValid) {\n            throw new InvalidHostedFormValueError(payload.errors);\n        }\n    }\n\n    private async _handleAttachErrorEvent(event: HostedInputAttachErrorEvent): Promise<void> {\n        const lastRetry = Number(this._storage.getItem(LAST_RETRY_KEY));\n\n        // This is to prevent the possibility of getting into a retry loop, in\n        // case there is something unexpected that prevents the shopper from\n        // being able to recover from an invalid hosted payment form error.\n        if (!lastRetry || Date.now() - lastRetry > RETRY_INTERVAL) {\n            this._storage.setItem(LAST_RETRY_KEY, Date.now());\n            this._location.replace(event.payload.error.redirectUrl);\n\n            return new Promise(() => {});\n        }\n\n        throw new InvalidHostedFormError(event.payload.error.message);\n    }\n\n    private _getFontUrls(): string[] {\n        const hostname = 'fonts.googleapis.com';\n        const links = document.querySelectorAll(`link[href*='${hostname}'][rel='stylesheet']`);\n\n        return Array.prototype.slice.call(links)\n            .filter(link => parseUrl(link.href).hostname === hostname)\n            .filter(link => values(this._styles)\n                .map(style => style && style.fontFamily)\n                .filter((family): family is string => typeof family === 'string')\n                .some(family => family.split(/,\\s/).some(name => link.href.indexOf(name.replace(' ', '+')) !== -1))\n            )\n            .map(link => link.href);\n    }\n\n    private _isSubmitErrorEvent(event: any): event is HostedInputSubmitErrorEvent {\n        return event.type === HostedInputEventType.SubmitFailed;\n    }\n\n    private _isAttachErrorEvent(event: any): event is HostedInputAttachErrorEvent {\n        return event.type === HostedInputEventType.AttachFailed;\n    }\n}\n","import { noop, without } from 'lodash';\n\nimport { IframeEventListener } from '../common/iframe';\nimport { OrderPaymentRequestBody } from '../order';\n\nimport { InvalidHostedFormConfigError } from './errors';\nimport HostedField from './hosted-field';\nimport HostedFormOptions from './hosted-form-options';\nimport HostedFormOrderDataTransformer from './hosted-form-order-data-transformer';\nimport { HostedInputEventMap, HostedInputEventType } from './iframe-content';\n\ntype HostedFormEventCallbacks = Pick<HostedFormOptions, 'onBlur' | 'onCardTypeChange' | 'onFocus' | 'onValidate'>;\n\nexport default class HostedForm {\n    private _bin?: string;\n    private _cardType?: string;\n\n    constructor(\n        private _fields: HostedField[],\n        private _eventListener: IframeEventListener<HostedInputEventMap>,\n        private _payloadTransformer: HostedFormOrderDataTransformer,\n        eventCallbacks: HostedFormEventCallbacks\n    ) {\n        const { onBlur = noop, onCardTypeChange = noop, onFocus = noop, onValidate = noop } = eventCallbacks;\n\n        this._eventListener.addListener(HostedInputEventType.Blurred, ({ payload }) => onBlur(payload));\n        this._eventListener.addListener(HostedInputEventType.CardTypeChanged, ({ payload }) => onCardTypeChange(payload));\n        this._eventListener.addListener(HostedInputEventType.Focused, ({ payload }) => onFocus(payload));\n        this._eventListener.addListener(HostedInputEventType.Validated, ({ payload }) => onValidate(payload));\n\n        this._eventListener.addListener(HostedInputEventType.CardTypeChanged, ({ payload }) => this._cardType = payload.cardType);\n        this._eventListener.addListener(HostedInputEventType.BinChanged, ({ payload }) => this._bin = payload.bin);\n    }\n\n    getBin(): string | undefined {\n        return this._bin;\n    }\n\n    getCardType(): string | undefined {\n        return this._cardType;\n    }\n\n    async attach(): Promise<void> {\n        this._eventListener.listen();\n\n        const field = this._getFirstField();\n        const otherFields = without(this._fields, field);\n\n        await field.attach();\n        await Promise.all(otherFields.map(otherField => otherField.attach()));\n    }\n\n    detach(): void {\n        this._eventListener.stopListen();\n\n        this._fields.forEach(field => {\n            field.detach();\n        });\n    }\n\n    async submit(payload: OrderPaymentRequestBody): Promise<void> {\n        return await this._getFirstField().submitForm(\n            this._fields.map(field => field.getType()),\n            this._payloadTransformer.transform(payload)\n        );\n    }\n\n    async validate(): Promise<void> {\n        return await this._getFirstField().validateForm();\n    }\n\n    private _getFirstField(): HostedField {\n        const field = this._fields[0];\n\n        if (!field) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the payment form has no field defined.');\n        }\n\n        return field;\n    }\n}\n","import { omit } from 'lodash';\n\nimport { ReadableCheckoutStore } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { OrderPaymentRequestBody } from '../order';\nimport { isVaultedInstrument, HostedCreditCardInstrument } from '../payment';\n\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport default class HostedFormOrderDataTransformer {\n    constructor(\n        private _store: ReadableCheckoutStore\n    ) {}\n\n    transform(payload: OrderPaymentRequestBody): HostedFormOrderData {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const config = state.config.getConfig();\n        const instrumentMeta = state.instruments.getInstrumentsMeta();\n        const order = state.order.getOrder();\n        const orderMeta = state.order.getOrderMeta();\n        const payment = omit(payload.paymentData, 'ccExpiry', 'ccName', 'ccNumber', 'ccCvv') as HostedCreditCardInstrument;\n        const paymentMethod = state.paymentMethods.getPaymentMethod(payload.methodId, payload.gatewayId);\n        const paymentMethodMeta = state.paymentMethods.getPaymentMethodsMeta();\n\n        const authToken = instrumentMeta && payment && isVaultedInstrument(payment) ?\n            `${state.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            state.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            authToken,\n            checkout,\n            config,\n            order,\n            orderMeta,\n            payment,\n            paymentMethod,\n            paymentMethodMeta,\n        };\n    }\n}\n","import { pick } from 'lodash';\n\nimport { ReadableCheckoutStore } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { BrowserStorage } from '../common/storage';\nimport { CardInstrument } from '../payment/instrument';\n\nimport HostedField from './hosted-field';\nimport HostedFieldType from './hosted-field-type';\nimport HostedForm from './hosted-form';\nimport HostedFormOptions, { HostedCardFieldOptionsMap, HostedStoredCardFieldOptionsMap } from './hosted-form-options';\nimport HostedFormOrderDataTransformer from './hosted-form-order-data-transformer';\n\nconst STORAGE_NAMESPACE = 'BigCommerce.HostedField';\n\nexport default class HostedFormFactory {\n    constructor(\n        private _store: ReadableCheckoutStore\n    ) {}\n\n    create(host: string, formId: string, options: HostedFormOptions): HostedForm {\n        const fieldTypes = Object.keys(options.fields) as HostedFieldType[];\n        const fields = fieldTypes.reduce<HostedField[]>((result, type) => {\n            const fields = options.fields as HostedStoredCardFieldOptionsMap & HostedCardFieldOptionsMap;\n            const fieldOptions = fields[type];\n\n            if (!fieldOptions) {\n                return result;\n            }\n\n            return [\n                ...result,\n                new HostedField(\n                    host,\n                    formId,\n                    type,\n                    fieldOptions.containerId,\n                    fieldOptions.placeholder || '',\n                    fieldOptions.accessibilityLabel || '',\n                    options.styles || {},\n                    new IframeEventPoster(host),\n                    new IframeEventListener(host),\n                    new BrowserStorage(STORAGE_NAMESPACE),\n                    window.location,\n                    'instrumentId' in fieldOptions ?\n                        this._getCardInstrument(fieldOptions.instrumentId) :\n                        undefined\n                ),\n            ];\n        }, []);\n\n        return new HostedForm(\n            fields,\n            new IframeEventListener(host),\n            new HostedFormOrderDataTransformer(this._store),\n            pick(options, 'onBlur', 'onFocus', 'onCardTypeChange', 'onValidate')\n        );\n    }\n\n    private _getCardInstrument(instrumentId: string): CardInstrument {\n        const { instruments: { getCardInstrument } } = this._store.getState();\n        const instrument = getCardInstrument(instrumentId);\n\n        if (!instrument) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentInstrument);\n        }\n\n        return instrument;\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we fail to complete the required spam protection\n * verification due to an unknown reason.\n */\nexport default class SpamProtectionFailedError extends StandardError {\n    constructor() {\n        super('We were not able to complete your spam protection verification. Please try again.');\n\n        this.name = 'SpamProtectionFailedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport { SpamProtectionFailedError } from './errors';\nimport GoogleRecaptcha from './google-recaptcha';\nimport { SpamProtectionAction, SpamProtectionActionType } from './spam-protection-actions';\nimport { SpamProtectionOptions } from './spam-protection-options';\nimport SpamProtectionRequestSender from './spam-protection-request-sender';\n\nexport default class SpamProtectionActionCreator {\n    constructor(\n        private _googleRecaptcha: GoogleRecaptcha,\n        private _requestSender: SpamProtectionRequestSender\n    ) {}\n\n    initialize(options?: SpamProtectionOptions): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(SpamProtectionActionType.InitializeRequested, undefined)),\n            defer(async () => {\n                const spamProtectionElementId = options ? options.containerId : 'spamProtectionContainer';\n\n                if (!options && !document.getElementById(spamProtectionElementId)) {\n                    const spamProtectionElement = document.createElement('div');\n                    spamProtectionElement.setAttribute('id', spamProtectionElementId);\n                    document.body.appendChild(spamProtectionElement);\n                }\n\n                const state = store.getState();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                const recaptchaSitekey = storeConfig.checkoutSettings.googleRecaptchaSitekey;\n\n                await this._googleRecaptcha.load(spamProtectionElementId, recaptchaSitekey);\n\n                return createAction(SpamProtectionActionType.InitializeSucceeded);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(SpamProtectionActionType.InitializeFailed, error))\n        );\n    }\n\n    execute(): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const { shouldExecuteSpamCheck } = checkout;\n\n            if (!shouldExecuteSpamCheck) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(SpamProtectionActionType.ExecuteRequested, undefined)),\n                this._googleRecaptcha.execute()\n                    .pipe(take(1))\n                    .pipe(switchMap(({ error, token }) => {\n                        if (error || !token) {\n                            throw new SpamProtectionFailedError();\n                        }\n\n                        return this._requestSender.validate(checkout.id, token)\n                            .then(({ body }) => createAction(SpamProtectionActionType.ExecuteSucceeded, body));\n                    }))\n            ).pipe(\n                catchError(error => throwErrorAction(SpamProtectionActionType.ExecuteFailed, error))\n            );\n        };\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nexport default class SpamProtectionRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    validate(checkoutId: string, token: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/spam-protection`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: { token }, headers, timeout });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditRequestSender from './store-credit-request-sender';\n\nexport default class StoreCreditActionCreator {\n    constructor(\n        private _storeCreditRequestSender: StoreCreditRequestSender\n    ) {}\n\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): ThunkAction<StoreCreditAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(StoreCreditActionType.ApplyStoreCreditRequested)),\n            defer(async () => {\n                const state = store.getState();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { body } = await (useStoreCredit ?\n                    this._storeCreditRequestSender.applyStoreCredit(checkout.id, options) :\n                    this._storeCreditRequestSender.removeStoreCredit(checkout.id, options));\n\n                return createAction(StoreCreditActionType.ApplyStoreCreditSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(StoreCreditActionType.ApplyStoreCreditFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class StoreCreditRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n\n    removeStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { OrderActionCreator } from '../order';\n\nimport Payment, { FormattedHostedInstrument, FormattedPayload, FormattedVaultedInstrument } from './payment';\nimport { InitializeOffsitePaymentAction, PaymentActionType, SubmitPaymentAction } from './payment-actions';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\n\nexport default class PaymentActionCreator {\n    constructor(\n        private _paymentRequestSender: PaymentRequestSender,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentRequestTransformer: PaymentRequestTransformer\n    ) {}\n\n    submitPayment(payment: Payment): ThunkAction<SubmitPaymentAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentActionType.SubmitPaymentRequested)),\n            from(this._paymentRequestSender.submitPayment(\n                this._paymentRequestTransformer.transform(payment, store.getState())\n            ))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._orderActionCreator.loadCurrentOrder()(store),\n                        of(createAction(PaymentActionType.SubmitPaymentSucceeded, body))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentActionType.SubmitPaymentFailed, error))\n        );\n    }\n\n    initializeOffsitePayment(\n        methodId: string,\n        gatewayId?: string,\n        instrumentId?: string,\n        shouldSaveInstrument?: boolean,\n        target?: string,\n        promise?: Promise<undefined>\n    ): ThunkAction<InitializeOffsitePaymentAction, InternalCheckoutSelectors> {\n        return store => {\n            let paymentData: FormattedPayload<FormattedHostedInstrument | FormattedVaultedInstrument> | undefined;\n\n            if (instrumentId) {\n                paymentData = { formattedPayload: { bigpay_token: instrumentId } };\n            } else if (shouldSaveInstrument) {\n                paymentData = { formattedPayload: { vault_payment_instrument: shouldSaveInstrument } };\n            }\n\n            const payload = this._paymentRequestTransformer.transform({ gatewayId, methodId, paymentData }, store.getState());\n\n            return concat(\n                of(createAction(PaymentActionType.InitializeOffsitePaymentRequested)),\n                Promise.race([this._paymentRequestSender.initializeOffsitePayment(payload, target), promise].filter(Boolean))\n                    .then(() => createAction(PaymentActionType.InitializeOffsitePaymentSucceeded))\n            ).pipe(\n                catchError(error => throwErrorAction(PaymentActionType.InitializeOffsitePaymentFailed, error))\n            );\n        };\n    }\n}\n","import { ReadableDataStore } from '@bigcommerce/data-store';\nimport { some } from 'lodash';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { Registry, RegistryOptions } from '../common/registry';\n\nimport PaymentMethod from './payment-method';\nimport * as paymentMethodTypes from './payment-method-types';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyRegistry extends Registry<PaymentStrategy, PaymentStrategyType> {\n    constructor(\n        private _store: ReadableDataStore<InternalCheckoutSelectors>,\n        options?: PaymentStrategyRegistryOptions\n    ) {\n        super(options);\n    }\n\n    getByMethod(paymentMethod?: PaymentMethod): PaymentStrategy {\n        if (!paymentMethod) {\n            return this.get();\n        }\n\n        const token = this._getToken(paymentMethod);\n\n        const cacheToken = [paymentMethod.gateway, paymentMethod.id]\n            .filter(value => value !== undefined && value !== null)\n            .join('-');\n\n        return this.get(token, cacheToken);\n    }\n\n    private _getToken(paymentMethod: PaymentMethod): PaymentStrategyType {\n        if (paymentMethod.gateway === 'klarna') {\n            return PaymentStrategyType.KLARNAV2;\n        }\n\n        const methodId = paymentMethod.gateway || paymentMethod.id;\n\n        if (this._hasFactoryForMethod(methodId)) {\n            return methodId;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.OFFLINE) {\n            return PaymentStrategyType.OFFLINE;\n        }\n\n        if (this._isLegacyMethod(paymentMethod)) {\n            return PaymentStrategyType.LEGACY;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.HOSTED) {\n            return PaymentStrategyType.OFFSITE;\n        }\n\n        return PaymentStrategyType.CREDIT_CARD;\n    }\n\n    private _hasFactoryForMethod(\n        methodId: string\n    ): methodId is PaymentStrategyType {\n        return this._hasFactory(methodId);\n    }\n\n    private _isLegacyMethod(paymentMethod: PaymentMethod): boolean {\n        const config = this._store.getState().config.getStoreConfig();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const { clientSidePaymentProviders } = config.paymentSettings;\n\n        if (!clientSidePaymentProviders || paymentMethod.gateway === 'adyen' || paymentMethod.gateway === 'barclaycard') {\n            return false;\n        }\n\n        return !some(clientSidePaymentProviders, id =>\n            paymentMethod.id === id || paymentMethod.gateway === id\n        );\n    }\n}\n\nexport interface PaymentStrategyRegistryOptions extends RegistryOptions {\n    clientSidePaymentProviders?: string[];\n}\n","import BrowserInfo from './browser-info';\n\nexport default function getBrowserInfo(): BrowserInfo {\n    return {\n        color_depth: screen.colorDepth || 24,\n        java_enabled: typeof navigator.javaEnabled === 'function' ? navigator.javaEnabled() : false,\n        language: navigator.language || (navigator as any).userLanguage,\n        screen_height: screen.height,\n        screen_width: screen.width,\n        time_zone_offset: new Date().getTimezoneOffset().toString(),\n    };\n}\n","export interface AdyenComponentCallbacks {\n    onChange?(state: AdyenCardState): void;\n}\n\nexport interface AdyenHostWindow extends Window {\n    AdyenCheckout?: new(configuration: AdyenConfiguration) => AdyenCheckout;\n}\n\nexport interface AdyenConfiguration {\n    /*\n     * Use test, and then change this to live when you're ready to accept live payments.\n     */\n    environment?: string;\n\n    /*\n     * The shopper's locale. This is used to set the language rendered in the Components.\n     */\n    locale?: string;\n\n    /*\n     * The Origin Key of your website.\n     */\n    originKey: string;\n\n    /*\n     * Supported from Components version 3.0.0 and later. The full paymentMethods response,\n     * returned in step 1. We recommend that you pass this on the AdyenCheckout instance.\n     * Otherwise, you need to pass the specific payment method details separately for each\n     * Component.\n     */\n    paymentMethodsResponse?: PaymentMethodsResponse;\n\n    /*\n     * Specify the function that you created, for example, handleOnChange. If you wish\n     * to override this function, you can also define an onChange event on the Component\n     * level.\n     */\n    onChange?(state: AdyenCardState, component: AdyenComponent): void;\n}\n\nexport interface PaymentMethodsResponse {\n    /**\n     * Groups of payment methods.\n     */\n    groups?: AdyenPaymentMethodGroup[];\n\n    /**\n     * Detailed list of one-click payment methods.\n     */\n    oneClickPaymentMethods?: RecurringDetail;\n\n    /**\n     * Detailed list of payment methods required to generate payment forms.\n     */\n    paymentMethods?: AdyenPaymentMethod[];\n\n    /**\n     * List of all stored payment methods.\n     */\n    storedPaymentMethods?: AdyenStoredPaymentMethod[];\n}\n\nexport interface AdyenPaymentMethod {\n    /**\n     * List of possible brands. For example: visa, mc.\n     */\n    brands?: string[];\n\n    /**\n     * The configuration of the payment method.\n     */\n    configuration?: object;\n\n    /**\n     * All input details to be provided to complete the payment with this payment\n     * method.\n     */\n    details?: InputDetail[];\n\n    /**\n     * The group where this payment method belongs to.\n     */\n    group?: Group;\n\n    /**\n     * The displayable name of this payment method.\n     */\n    name?: string;\n\n    /**\n     * Echo data required to send in next calls.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * Indicates whether this payment method supports tokenization or not.\n     */\n    supportsRecurring?: boolean;\n\n    /**\n     * The unique payment method code.\n     */\n    type?: string;\n}\n\nexport interface AdyenPaymentMethodGroup {\n    /**\n     * The type to submit for any payment method in this group.\n     */\n    groupType?: string;\n\n    /**\n     * The human-readable name of this group.\n     */\n    name?: string;\n\n    /**\n     * The types of payment methods that belong in this group.\n     */\n    types?: string[];\n}\n\nexport interface InputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * Input details can also be provided recursively.\n     */\n    details?: SubInputDetail[];\n\n    /**\n     * In case of a select, the URL from which to query the items.\n     */\n    itemSearchUrl?: string;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input value is optional.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface AdditionalActionCallbacks {\n    /**\n     * A callback that gets called before adyen component is loaded\n     */\n    onBeforeLoad?(shopperInteraction?: boolean): void;\n\n    /**\n     * A callback that gets called when adyen component is loaded\n     */\n    onLoad?(cancel?: () => void): void;\n\n    /**\n     * A callback that gets called when adyen component verification\n     * is completed\n     */\n    onComplete?(): void;\n}\n\nexport interface AdyenThreeDS2Options extends AdditionalActionCallbacks {\n    /**\n     * Specify Three3DS2Challenge Widget Size\n     *\n     * Values\n     * '01' = 250px x 400px\n     * '02' = 390px x 400px\n     * '03' = 500px x 600px\n     * '04' = 600px x 400px\n     * '05' = 100% x 100%\n     */\n    widgetSize?: string;\n}\n\nexport interface AdyenAdditionalActionOptions extends AdditionalActionCallbacks {\n    /**\n     * The location to insert the additional action component.\n     */\n    containerId: string;\n}\n\nexport enum AdyenComponentType {\n    ThreeDS2DeviceFingerprint = 'threeDS2DeviceFingerprint',\n    ThreeDS2Challenge = 'threeDS2Challenge',\n    SecuredFields = 'securedfields',\n    IDEAL = 'ideal',\n}\n\nexport interface ThreeDS2Result {\n    payment_data: string;\n    code: string;\n    token: string;\n}\n\nexport interface ThreeDS1Result {\n    acs_url: string;\n    payer_auth_request: string;\n    callback_url: string;\n    merchant_data: string;\n}\n\nexport interface SubInputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input is optional to provide.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface Item {\n    /**\n     * The value to provide in the result.\n     */\n    id?: string;\n\n    /**\n     * The display name.\n     */\n    name?: string;\n}\n\nexport interface Group {\n    /**\n     * The name of the group.\n     */\n    name?: string;\n\n    /**\n     * Echo data to be used if the payment method is displayed as part of this group.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * The unique code of the group.\n     */\n    type?: string;\n}\n\nexport interface AdyenStoredPaymentMethod {\n    /**\n     * The brand of the card.\n     */\n    brand?: string;\n\n    /**\n     * The month the card expires.\n     */\n    expiryMonth?: string;\n\n    /**\n     * The year the card expires.\n     */\n    expiryYear?: string;\n\n    /**\n     * The unique payment method code.\n     */\n    holderName?: string;\n\n    /**\n     * A unique identifier of this stored payment method.\n     */\n    id?: string;\n\n    /**\n     * The last four digits of the PAN.\n     */\n    lastFour?: string;\n\n    /**\n     * The display name of the stored payment method.\n     */\n    name: string;\n\n    /**\n     * The shopper’s email address.\n     */\n    shopperEmail?: string;\n\n    /**\n     * The supported shopper interactions for this stored payment method.\n     */\n    supportedShopperInteractions?: string[];\n\n    /**\n     * The type of payment method.\n     */\n    type?: string;\n}\n\nexport interface RecurringDetail extends AdyenPaymentMethod {\n    /**\n     * The reference that uniquely identifies the recurring detail.\n     */\n    recurringDetailReference?: string;\n\n    /**\n     * Contains information on previously stored payment details.\n     */\n    storedDetails?: StoredDetails;\n}\n\nexport interface StoredDetails {\n    /**\n     * The stored bank account.\n     */\n    bank?: Bank;\n\n    /**\n     * The stored card information.\n     */\n    card?: Card;\n\n    /**\n     * The email associated with stored payment details.\n     */\n    emailAddress?: string;\n}\n\nexport interface Bank {\n    /**\n     * The bank account number (without separators).\n     */\n    bankAccountNumber?: string;\n\n    /**\n     * The bank city.\n     */\n    bankCity?: string;\n\n    /**\n     * The location id of the bank. The field value is nil in most cases.\n     */\n    bankLocationId?: string;\n\n    /**\n     * The name of the bank.\n     */\n    bankName?: string;\n\n    /**\n     * The Business Identifier Code (BIC) is the SWIFT address assigned to\n     * a bank. The field value is nil in most cases.\n     */\n    bic?: string;\n\n    /**\n     * Country code where the bank is located.\n     * A valid value is an ISO two-character country code (e.g. 'NL').\n     */\n    countryCode?: string;\n\n    /**\n     * The International Bank Account Number (IBAN).\n     */\n    iban?: string;\n\n    /**\n     * The name of the bank account holder. If you submit a name with non-Latin\n     * characters, we automatically replace some of them with corresponding Latin\n     * characters to meet the FATF recommendations. For example:\n     * χ12 is converted to ch12.\n     * üA is converted to euA.\n     * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n     * After replacement, the ownerName must have at least three alphanumeric characters\n     * (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character\n     * (A-Z, a-z). For example:\n     * John17 - allowed.\n     * J17 - allowed.\n     * 171 - not allowed.\n     * John-7 - allowed.\n     */\n    ownerName?: string;\n\n    /**\n     * The bank account holder's tax ID.\n     */\n    taxId?: string;\n}\n\nexport interface Card {\n    /**\n     * The card verification code (1-20 characters). Depending on the card brand, it\n     * is known also as:\n     * CVV2/CVC2 – length: 3 digits\n     * CID – length: 4 digits\n     */\n    cvc?: string;\n\n    /**\n     * The card expiry month. Format: 2 digits, zero-padded for single digits. For example:\n     * 03 = March\n     * 11 = November\n     * Required\n     */\n    expiryMonth: string;\n\n    /**\n     * The card expiry year. Format: 4 digits. For example: 2020\n     * Required\n     */\n    expiryYear: string;\n\n    /**\n     * The name of the cardholder, as printed on the card.\n     * Required\n     */\n    holderName: string;\n\n    /**\n     * The issue number of the card (for some UK debit cards only).\n     */\n    issueNumber?: string;\n\n    /**\n     * The card number (4-19 characters). Do not use any separators. When this value is\n     * returned in a response, only the last 4 digits of the card number are returned.\n     * Required\n     */\n    number: string;\n\n    /**\n     * The month component of the start date (for some UK debit cards only).\n     */\n    startNumber?: string;\n\n    /**\n     * The year component of the start date (for some UK debit cards only).\n     */\n    startYear?: string;\n}\n\nexport interface CreditCardPlaceHolder {\n    encryptedCardNumber?: string;\n    encryptedExpiryDate?: string;\n    encryptedSecurityCode: string;\n}\n\nexport interface SepaPlaceHolder {\n    ownerName?: string;\n    ibanNumber?: string;\n}\n\nexport interface AdyenComponent {\n    mount(containerId: string): HTMLElement;\n    unmount(): void;\n}\n\nexport interface AdyenCheckout {\n    create(type: string, componentOptions?: AdyenCreditCardComponentOptions |\n        ThreeDS2DeviceFingerprintComponentOptions | ThreeDS2ChallengeComponentOptions | AdyenIdealComponentOptions | AdyenCustomCardComponentOptions): AdyenComponent;\n\n    createFromAction(action: AdyenAction): AdyenComponent;\n}\n\nexport interface AdyenIdealComponentOptions {\n    /**\n     * Optional. Set to **false** to remove the bank logos from the iDEAL form.\n     */\n    showImage?: boolean;\n}\n\nexport interface AdyenBaseCardComponentOptions {\n    /**\n     * Array of card brands that will be recognized by the component.\n     *\n     */\n    brands?: string[];\n\n    /**\n     * Set a style object to customize the input fields. See Styling Secured Fields\n     * for a list of supported properties.\n     */\n    styles?: AdyenStyleOptions;\n}\n\nexport interface AdyenCardComponentEvents {\n    /**\n     * Called when the shopper enters data in the card input fields.\n     * Here you have the option to override your main Adyen Checkout configuration.\n     */\n    onChange?(state: AdyenCardState, component: AdyenComponent): void;\n}\n\nexport interface AdyenCreditCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenCardComponentEvents {\n    /**\n     * Set an object containing the details array for type: scheme from\n     * the /paymentMethods response.\n     */\n    details?: InputDetail[];\n\n    /**\n     * Set to true to show the checkbox to save card details for the next payment.\n     */\n    enableStoreDetails?: boolean;\n\n    /**\n     * Set to true to request the name of the card holder.\n     */\n    hasHolderName?: boolean;\n\n    /**\n     * Set to true to require the card holder name.\n     */\n    holderNameRequired?: boolean;\n\n    /**\n     * Prefill the card holder name field. Supported from Card component\n     */\n    holderName?: string;\n\n    /**\n     * Defaults to ['mc','visa','amex']. Configure supported card types to\n     * facilitate brand recognition used in the Secured Fields onBrand callback.\n     * See list of available card types. If a shopper enters a card type not\n     * specified in the GroupTypes configuration, the onBrand callback will not be invoked.\n     */\n    groupTypes?: string[];\n\n    /**\n     * Specify the sample values you want to appear for card detail input fields.\n     */\n    placeholders?: CreditCardPlaceHolder | SepaPlaceHolder;\n}\n\nexport interface CustomCardAriaLabel {\n    label?: string;\n    iframeTitle?: string;\n}\n\nexport interface AdyenCustomCardAriaLabels {\n    lang?: string;\n    encryptedCardNumber?: CustomCardAriaLabel;\n    encryptedExpiryDate?: CustomCardAriaLabel;\n    encryptedSecurityCode?: CustomCardAriaLabel;\n}\n\nexport interface AdyenCustomCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenCardComponentEvents {\n    /**\n     * Specify aria attributes for the input fields for web accessibility.\n     */\n    ariaLabels?: AdyenCustomCardAriaLabels;\n\n    /**\n     * Automatically shift the focus from date field to the CVC field.\n     */\n    autofocus?: boolean;\n}\n\nexport interface AdyenCardState {\n    data: AdyenCardDataPaymentMethodState;\n    isValid?: boolean;\n}\n\nexport interface AdyenCardDataPaymentMethodState {\n    paymentMethod: AdyenCardPaymentMethodState;\n}\n\nexport interface AdyenCardPaymentMethodState {\n    encryptedCardNumber: string;\n    encryptedExpiryMonth: string;\n    encryptedExpiryYear: string;\n    encryptedSecurityCode: string;\n    holderName?: string;\n    type: string;\n}\n\nexport interface ThreeDS2DeviceFingerprintComponentOptions {\n    fingerprintToken: string;\n    onComplete(fingerprintData: any): void;\n    onError(error: AdyenError): void;\n}\n\nexport enum ResultCode {\n    AuthenticationFinished = 'AuthenticationFinished',\n    Authorised = 'Authorised',\n    Cancelled = 'Cancelled',\n    ChallengeShopper = 'ChallengeShopper',\n    Error = 'Error',\n    IdentifyShopper = 'IdentifyShopper',\n    Pending = 'Pending',\n    Received = 'Received',\n    RedirectShopper = 'RedirectShopper',\n    Refused = 'Refused',\n}\n\nexport interface ThreeDS2ChallengeComponentOptions {\n    challengeToken: string;\n    size?: string;\n    onComplete(fingerprintData: any): void;\n    onError(error: AdyenError): void;\n}\n\nexport interface AdyenStyleOptions {\n    /**\n     * Base styling applied to the iframe. All styling extends from this style.\n     */\n    base?: CssProperties;\n\n    /**\n     * Styling applied when a field fails validation.\n     */\n    error?: CssProperties;\n\n    /**\n     * Styling applied to the field's placeholder values.\n     */\n    placeholder?: CssProperties;\n\n    /**\n     * Styling applied once a field passes validation.\n     */\n    validated?: CssProperties;\n}\n\nexport interface AdyenError {\n    errorCode: string;\n    message: string;\n}\n\nexport interface CssProperties {\n    background?: string;\n    color?: string;\n    display?: string;\n    font?: string;\n    fontFamily?: string;\n    fontSize?: string;\n    fontSizeAdjust?: string;\n    fontSmoothing?: string;\n    fontStretch?: string;\n    fontStyle?: string;\n    fontVariant?: string;\n    fontVariantAlternates?: string;\n    fontVariantCaps?: string;\n    fontVariantEastAsian?: string;\n    fontVariantLigatures?: string;\n    fontVariantNumeric?: string;\n    fontWeight?: string;\n    letterSpacing?: string;\n    lineHeight?: string;\n    mozOsxFontSmoothing?: string;\n    mozTransition?: string;\n    outline?: string;\n    opacity?: string | number;\n    padding?: string;\n    textAlign?: string;\n    textShadow?: string;\n    transition?: string;\n    webkitFontSmoothing?: string;\n    webkitTransition?: string;\n}\n\nexport interface ThreeDS2OnComplete {\n    data: {\n        details: {\n            'threeds2.challengeResult'?: string;\n            'threeds2.fingerprint'?: string;\n            paymentData: string;\n        };\n    };\n}\n\nexport interface ThreeDSRequiredErrorResponse {\n    errors: [\n        { code: string }\n    ];\n    three_ds_result: {\n        code: ResultCode;\n        token?: string;\n        payment_data?: string;\n        acs_url?: string;\n        callback_url?: string;\n        payer_auth_request?: string;\n        merchant_data?: string;\n    };\n    status: string;\n}\n\nexport enum AdyenHTTPMethod {\n    GET = 'GET',\n    POST = 'POST',\n}\n\nexport enum AdyenPaymentMethodType {\n    Scheme = 'scheme',\n    BCMC = 'bcmc',\n    IDEAL = 'ideal',\n    Giropay = 'giropay',\n}\n\nexport enum AdyenActionType {\n    /*\n    * The payment qualifies for 3D Secure 2, and will go through either the frictionless\n    * or the challenge flow.\n    * */\n    ThreeDS2Fingerprint = 'threeDS2Fingerprint',\n\n    /*\n    * The payment qualifies for 3D Secure 2, and the issuer is initiating a challenge flow.\n    * */\n    ThreeDS2Challenge = 'threeDS2Challenge',\n\n    /*\n    * We will initiate a 3D Secure 1 fallback, because the issuer does not support 3D Secure 2.\n    * */\n    Redirect = 'redirect',\n\n    /*\n    * The Component presents the QR code and calls the onAdditionalDetails event.\n    * */\n    QRCode = 'qrCode',\n\n    /*\n    * The Component displays the voucher which the shopper uses to complete the payment.\n    * */\n    Voucher = 'voucher',\n}\n\nexport interface AdyenAction {\n    method: AdyenHTTPMethod;\n\n    /**\n     * Value that you need to submit in your /payments/details request when handling\n     * the redirect.\n     */\n    paymentData: string;\n\n    paymentMethodType: AdyenPaymentMethodType;\n\n    /*\n     * The Component performs additional front-end actions depending on the action.type.\n     * Your next steps depend on the type of action that the Component performs.\n     */\n    type: AdyenActionType;\n\n    /**\n     * The HTTP request method that you should use. After the shopper completes the payment,\n     * they will be redirected back to your returnURL using the same method.\n     */\n    url: string;\n}\n\nexport interface AdyenAdditionalAction {\n    resultCode: ResultCode;\n    action: string;\n}\n","import { InvalidArgumentError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when we are unable to submit a payment because\n * the caller has not provided all the required fields, i.e.: if an argument is\n * missing or it is not the expected data type.\n */\nexport default class PaymentArgumentInvalidError extends InvalidArgumentError {\n    constructor(invalidFields?: string[]) {\n        let message = 'Unable to submit payment for the order because the payload is invalid.';\n\n        if (invalidFields) {\n            message = `${message} Make sure the following fields are provided correctly: ${invalidFields.join(', ')}.`;\n        }\n\n        super(message);\n\n        this.name = 'PaymentArgumentInvalidError';\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { getBrowserInfo } from '../../../common/browser-info';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { AdyenAction, AdyenActionType, AdyenAdditionalAction, AdyenCardState, AdyenCheckout, AdyenComponent, AdyenComponentType, AdyenConfiguration, AdyenError, ResultCode, ThreeDS2OnComplete, ThreeDS2Result } from './adyenv2';\nimport AdyenV2PaymentInitializeOptions from './adyenv2-initialize-options';\nimport AdyenV2ScriptLoader from './adyenv2-script-loader';\n\nexport default class AdyenV2PaymentStrategy implements PaymentStrategy {\n    private _adyenCheckout?: AdyenCheckout;\n    private _adyenv2?: AdyenV2PaymentInitializeOptions;\n    private _adyenPaymentComponent?: AdyenComponent;\n    private _adyenCardVerificationComponent?: AdyenComponent;\n    private _adyenComponentState?: AdyenCardState;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _adyenV2ScriptLoader: AdyenV2ScriptLoader,\n        private _formPoster: FormPoster,\n        private _locale: string\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { adyenv2 } = options;\n\n        if (!adyenv2) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.adyenv2\" argument is not provided.');\n        }\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._adyenv2 = adyenv2;\n\n        const configuration: AdyenConfiguration = {\n            environment:  paymentMethod.initializationData.environment,\n            locale: this._locale,\n            originKey: paymentMethod.initializationData.originKey,\n            paymentMethodsResponse: paymentMethod.initializationData.paymentMethodsResponse,\n        };\n\n        return this._adyenV2ScriptLoader.load(configuration)\n            .then(adyenCheckout => {\n                this._adyenCheckout = adyenCheckout;\n\n                const adyenPaymentComponent = this._adyenCheckout.create(\n                    paymentMethod.method,\n                    {\n                        ...adyenv2.options,\n                        onChange: (state: AdyenCardState) => {\n                            this._updateAdyenComponentState(state);\n                        },\n                    }\n                );\n\n                adyenPaymentComponent.mount(`#${adyenv2.containerId}`);\n\n                this._adyenPaymentComponent = adyenPaymentComponent;\n\n                if (adyenv2.cardVerificationContainerId) {\n                    const adyenCardVerificationComponent = this._adyenCheckout.create(AdyenComponentType.SecuredFields, {\n                        onChange: (state: AdyenCardState) => {\n                            this._updateAdyenComponentState(state);\n                        },\n                    });\n\n                    adyenCardVerificationComponent.mount(`#${adyenv2.cardVerificationContainerId}`);\n\n                    this._adyenCardVerificationComponent = adyenCardVerificationComponent;\n                }\n\n                return Promise.resolve(this._store.getState());\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                const adyenComponentState = this._adyenComponentState;\n\n                if (!adyenComponentState) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n                if (paymentData && isVaultedInstrument(paymentData)) {\n\n                    const { encryptedCardNumber, encryptedSecurityCode } = adyenComponentState.data.paymentMethod;\n\n                    return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                        ...payment,\n                        paymentData: {\n                            formattedPayload: {\n                                bigpay_token: {\n                                    credit_card_number_confirmation: encryptedCardNumber,\n                                    token: paymentData.instrumentId,\n                                    verification_value: encryptedSecurityCode,\n                                },\n                                browser_info: getBrowserInfo(),\n                            },\n                        },\n                    }));\n                }\n\n                const paymentPayload = {\n                    methodId: payment.methodId,\n                    paymentData: {\n                        formattedPayload: {\n                            credit_card_token: {\n                                token: JSON.stringify({\n                                    ...adyenComponentState.data.paymentMethod,\n                                    origin: window.location.origin,\n                                }),\n                            },\n                            browser_info: getBrowserInfo(),\n                            vault_payment_instrument: shouldSaveInstrument,\n                        },\n                    },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            })\n            .catch(error => {\n                if (!(error instanceof RequestError) || (!some(error.body.errors, { code: 'three_d_secure_required' }) && !some(error.body.errors, { code: 'additional_action_required' }))) {\n                    return Promise.reject(error);\n                }\n\n                if (error.body.three_ds_result.code === ResultCode.IdentifyShopper) {\n                    return this._handle3DS2Fingerprint(error.body.three_ds_result, payment.methodId)\n                        .then((payment: Payment) =>\n                            this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                ...payment,\n                                paymentData: {\n                                    ...payment.paymentData,\n                                    shouldSaveInstrument,\n                                },\n                            })))\n                        .catch(error => {\n                            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                                return Promise.reject(error);\n                            }\n\n                            if (error.body.three_ds_result.code === ResultCode.ChallengeShopper) {\n                                return this._handle3DS2Challenge(error.body.three_ds_result, payment.methodId)\n                                    .then((payment: Payment) =>\n                                        this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                            ...payment,\n                                            paymentData: {\n                                                ...payment.paymentData,\n                                                shouldSaveInstrument,\n                                            },\n                                        }))\n                                    );\n                            }\n\n                            return Promise.reject(error);\n                        });\n                }\n\n                if (error.body.three_ds_result.code === ResultCode.ChallengeShopper) {\n                    return this._handle3DS2Challenge(error.body.three_ds_result, payment.methodId)\n                        .then((payment: Payment) =>\n                            this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                ...payment,\n                                paymentData: {\n                                    ...payment.paymentData,\n                                    shouldSaveInstrument,\n                                },\n                            }))\n                        );\n                }\n\n                if (some(error.body.errors, { code: 'additional_action_required' })) {\n                    return this._handleFromAction(error.body.provider_data);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._adyenPaymentComponent) {\n            this._adyenPaymentComponent.unmount();\n            this._adyenPaymentComponent = undefined;\n        }\n\n        if (this._adyenCardVerificationComponent) {\n            this._adyenCardVerificationComponent.unmount();\n            this._adyenCardVerificationComponent = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _getAdyenV2PaymentInitializeOptions(): AdyenV2PaymentInitializeOptions {\n        if (!this._adyenv2) {\n            throw new InvalidArgumentError('\"options.adyenv2\" argument was not provided during initialization.');\n        }\n\n        return this._adyenv2;\n    }\n\n    private _getThreeDS2ChallengeWidgetSize(): string {\n        const { widgetSize } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n        if (!widgetSize) {\n            return '05';\n        }\n\n        return widgetSize;\n    }\n\n    private _handle3DS2Challenge(resultObject: ThreeDS2Result, paymentMethodId: string): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            if (!this._adyenCheckout) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const { onBeforeLoad, onComplete, onLoad } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n            const challengeComponent = this._adyenCheckout\n                .create(AdyenComponentType.ThreeDS2Challenge, {\n                    challengeToken: resultObject.token,\n                    onComplete: (challengeData: ThreeDS2OnComplete) => {\n                        const challengePaymentPayload = {\n                            ...challengeData.data,\n                            paymentData: resultObject.payment_data,\n                        };\n\n                        const paymentPayload = {\n                            methodId: paymentMethodId,\n                            paymentData: {\n                                nonce: JSON.stringify(challengePaymentPayload),\n                            },\n                        };\n\n                        if (onComplete) {\n                            onComplete();\n                        }\n\n                        resolve(paymentPayload);\n                    },\n                    onError: (error: AdyenError) => reject(error),\n                    size: this._getThreeDS2ChallengeWidgetSize(),\n                });\n\n            const { threeDS2ContainerId, additionalActionOptions } = this._getAdyenV2PaymentInitializeOptions();\n\n            if (onBeforeLoad) {\n                onBeforeLoad(true);\n            }\n\n            challengeComponent.mount(`#${additionalActionOptions.containerId || threeDS2ContainerId}`);\n\n            if (onLoad) {\n                onLoad(() => {\n                    reject();\n                    challengeComponent.unmount();\n                });\n            }\n        });\n    }\n\n    private _handleFromAction(additionalAction: AdyenAdditionalAction): Promise<any> {\n        return new Promise(() => {\n            if (!this._adyenCheckout) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const { onBeforeLoad, containerId, onLoad } = this._getAdyenV2PaymentInitializeOptions().additionalActionOptions;\n            const adyenAction: AdyenAction = JSON.parse(additionalAction.action);\n            const additionalActionComponent = this._adyenCheckout.createFromAction(adyenAction);\n\n            if (onBeforeLoad) {\n                onBeforeLoad(adyenAction.type === AdyenActionType.ThreeDS2Challenge);\n            }\n\n            additionalActionComponent.mount(`#${containerId}`);\n\n            if (onLoad) {\n                onLoad(() => {\n                    additionalActionComponent.unmount();\n                });\n            }\n        });\n    }\n\n    private _handle3DS2Fingerprint(resultObject: ThreeDS2Result, paymentMethodId: string): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            if (!this._adyenCheckout) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const { onBeforeLoad, onComplete, onLoad } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n            const fingerprintComponent = this._adyenCheckout\n                .create(AdyenComponentType.ThreeDS2DeviceFingerprint, {\n                    fingerprintToken: resultObject.token,\n                    onComplete: (fingerprintData: ThreeDS2OnComplete) => {\n                        const fingerprintPaymentPayload = {\n                            ...fingerprintData.data,\n                            paymentData: resultObject.payment_data,\n                        };\n\n                        const paymentPayload = {\n                            methodId: paymentMethodId,\n                            paymentData: {\n                                nonce: JSON.stringify(fingerprintPaymentPayload),\n                            },\n                        };\n\n                        if (onComplete) {\n                            onComplete();\n                        }\n\n                        resolve(paymentPayload);\n                    },\n                    onError: (error: AdyenError) => reject(error),\n                });\n\n            const { threeDS2ContainerId, additionalActionOptions } = this._getAdyenV2PaymentInitializeOptions();\n\n            if (onBeforeLoad) {\n                onBeforeLoad();\n            }\n\n            fingerprintComponent.mount(`#${additionalActionOptions.containerId || threeDS2ContainerId}`);\n\n            if (onLoad) {\n                onLoad(() => {\n                    fingerprintComponent.unmount();\n                });\n            }\n        });\n    }\n\n    private _updateAdyenComponentState(newState: AdyenCardState) {\n        this._adyenComponentState = newState;\n    }\n}\n","export enum OrderIncludes {\n    DigitalItemsCategories = 'lineItems.digitalItems.categories',\n    PhysicalItemsCategories = 'lineItems.physicalItems.categories',\n}\n\nexport default interface OrderParams {\n    include?: OrderIncludes[];\n}\n","import { ScriptLoader, StylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { AdyenCheckout, AdyenConfiguration, AdyenHostWindow } from './adyenv2';\n\nexport default class AdyenV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _stylesheetLoader: StylesheetLoader,\n        private _window: AdyenHostWindow = window\n    ) {}\n\n    load(configuration: AdyenConfiguration): Promise<AdyenCheckout> {\n        return Promise.all([\n            this._stylesheetLoader.loadStylesheet(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.5.0/adyen.css`),\n            this._scriptLoader.loadScript(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.5.0/adyen.js`),\n        ])\n        .then(() => {\n            if (!this._window.AdyenCheckout) {\n                throw new PaymentMethodClientUnavailableError();\n            }\n\n            return new this._window.AdyenCheckout(configuration);\n        })\n        .catch(() => {\n            throw new PaymentMethodClientUnavailableError();\n        });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the payment flow is cancelled. It could be\n * due to a deliberate user interaction, i.e.: the user clicks on a cancel\n * button which dismisses the payment modal.\n */\nexport default class PaymentMethodCancelledError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Payment process was cancelled.');\n\n        this.name = 'PaymentMethodCancelledError';\n        this.type = 'payment_cancelled';\n    }\n}\n","import { LineItemCategory } from '../../../cart';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { AmountTransformer } from '../../../common/utility';\nimport { Order, OrderActionCreator, OrderIncludes, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { Consignment } from '../../../shipping';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Affirm, AffirmAddress, AffirmDiscount, AffirmFailResponse, AffirmItem, AffirmRequestData, AffirmSuccessResponse } from './affirm';\nimport AffirmScriptLoader from './affirm-script-loader';\n\nexport default class AffirmPaymentStrategy implements PaymentStrategy {\n    private _affirm?: Affirm;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _affirmScriptLoader: AffirmScriptLoader\n    ) { }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n                if (!paymentMethod || !paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { config: { testMode }, clientToken: publicKey } = paymentMethod;\n\n                return this._affirmScriptLoader.load(publicKey, testMode);\n            })\n            .then(affirm => {\n                this._affirm = affirm;\n\n                return this._store.getState();\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const methodId = payload.payment && payload.payment.methodId;\n        const { useStoreCredit } = payload;\n        const { _affirm } = this;\n\n        if (!_affirm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        const requestOptions = {\n            ...options,\n            params: {\n                include: [\n                    OrderIncludes.PhysicalItemsCategories,\n                    OrderIncludes.DigitalItemsCategories,\n                ],\n            },\n        };\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, requestOptions))\n            .then<AffirmSuccessResponse>(() => {\n                _affirm.checkout(this._getCheckoutInformation());\n\n                return new Promise((resolve, reject) => {\n                    _affirm.checkout.open({\n                        onFail: (failObject: AffirmFailResponse) => {\n                            failObject.reason === 'canceled' ? reject(new PaymentMethodCancelledError()) : reject(new PaymentMethodInvalidError());\n                        },\n                        onSuccess: successObject => { resolve(successObject); },\n                    });\n                    _affirm.ui.error.on('close', () => {\n                        reject(new PaymentMethodCancelledError());\n                    });\n                });\n            })\n            .then(result => {\n                const paymentPayload = {\n                    methodId,\n                    paymentData: { nonce: result.checkout_token },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._affirm) {\n            this._affirm = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getCheckoutInformation(): AffirmRequestData {\n        const state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const consignments = state.consignments.getConsignments();\n        const order = state.order.getOrder();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        const amountTransformer = new AmountTransformer(order.currency.decimalPlaces);\n        const billingAddress = this._getBillingAddress();\n\n        return {\n            merchant: {\n                user_confirmation_url: config.links.checkoutLink,\n                user_cancel_url: config.links.checkoutLink,\n                user_confirmation_url_action: 'POST',\n            },\n            shipping: this._getShippingAddress() || billingAddress,\n            billing: billingAddress,\n            items: this._getItems(amountTransformer, order),\n            metadata: {\n                shipping_type: this._getShippingType(consignments),\n                mode: 'modal',\n                platform_type: 'BigCommerce',\n                platform_version: '',\n                platform_affirm: '',\n            },\n            discounts: this._getDiscounts(amountTransformer, order),\n            order_id: order.orderId ? order.orderId.toString() : '',\n            shipping_amount: amountTransformer.toInteger(order.shippingCostTotal),\n            tax_amount: amountTransformer.toInteger(order.taxTotal),\n            total: amountTransformer.toInteger(order.orderAmount),\n        };\n    }\n\n    private _getShippingType(consignments?: Consignment[]): string {\n        if (!consignments) {\n            return '';\n        }\n\n        const consignment = consignments[0];\n\n        return consignment && consignment.selectedShippingOption ?\n            consignment.selectedShippingOption.type : '';\n    }\n\n    private _getBillingAddress(): AffirmAddress {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!billingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const billingInformation = {\n            name: {\n                first: billingAddress.firstName,\n                last: billingAddress.lastName,\n                full: `${billingAddress.firstName} ${billingAddress.lastName}`,\n            },\n            address: {\n                line1: billingAddress.address1,\n                line2: billingAddress.address2,\n                city: billingAddress.city,\n                state: billingAddress.stateOrProvinceCode,\n                zipcode: billingAddress.postalCode,\n                country: billingAddress.countryCode,\n            },\n            phone_number: billingAddress.phone,\n            email: billingAddress.email,\n        };\n\n        return billingInformation;\n    }\n\n    private _getShippingAddress(): AffirmAddress | undefined {\n        const state = this._store.getState();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        if (!shippingAddress) {\n            return;\n        }\n\n        const shippingInformation = {\n            name: {\n                first: shippingAddress.firstName,\n                last: shippingAddress.lastName,\n                full: `${shippingAddress.firstName} ${shippingAddress.lastName}`,\n            },\n            address: {\n                line1: shippingAddress.address1,\n                line2: shippingAddress.address2,\n                city: shippingAddress.city,\n                state: shippingAddress.stateOrProvinceCode,\n                zipcode: shippingAddress.postalCode,\n                country: shippingAddress.countryCode,\n            },\n            phone_number: shippingAddress.phone,\n        };\n\n        return shippingInformation;\n    }\n\n    private _getItems(amountTransformer: AmountTransformer, order: Order): AffirmItem[] {\n        const items: AffirmItem[] = [];\n\n        for (const item of order.lineItems.physicalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.digitalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.giftCertificates) {\n            items.push({\n                display_name: item.name,\n                sku: '',\n                unit_price: amountTransformer.toInteger(item.amount),\n                qty: 1,\n                item_image_url: '',\n                item_url: '',\n            });\n        }\n\n        if (order.lineItems.customItems) {\n            for (const item of order.lineItems.customItems) {\n                items.push({\n                    display_name: item.name,\n                    sku: item.sku,\n                    unit_price: amountTransformer.toInteger(item.listPrice),\n                    qty: item.quantity,\n                    item_image_url: '',\n                    item_url: '',\n                });\n            }\n        }\n\n        return items;\n    }\n\n    private _getDiscounts(amountTransformer: AmountTransformer, order: Order): AffirmDiscount {\n        const discounts: AffirmDiscount = {};\n\n        for (const line of order.coupons) {\n            if (line.discountedAmount > 0) {\n                discounts[line.code] = {\n                    discount_amount: amountTransformer.toInteger(line.discountedAmount),\n                    discount_display_name: line.displayName,\n                };\n            }\n        }\n\n        if (order.discountAmount > 0) {\n            discounts.DISCOUNTED_AMOUNT = {\n                discount_amount: amountTransformer.toInteger(order.discountAmount),\n                discount_display_name: 'discount',\n            };\n        }\n\n        return discounts;\n    }\n\n    private _getCategories(categories?: LineItemCategory[][]): string[][] {\n        if (!categories) {\n            return[[]];\n        }\n\n        return categories.map(categoryTree => categoryTree.map(category => category.name));\n    }\n}\n","/**\n * Used this approach as Affirm uses snipped for initializing. Please refer to Affirm documentation in: https://docs.affirm.com/Integrate_Affirm/Direct_API#1._Add_Affirm.js\n */\nexport default Function(`\n'use strict';\nreturn function loadAffirmJS(apiKey, scriptURL) {\n    var _affirm_config = {\n        public_api_key:  apiKey,\n        script:          scriptURL\n    };\n    (function(l,g,m,e,a,f,b){var d,c=l[m]||{},h=document.createElement(f),n=document.getElementsByTagName(f)[0],k=function(a,b,c){return function(){a[b]._.push([c,arguments])}};c[e]=k(c,e,\"set\");d=c[e];c[a]={};c[a]._=[];d._=[];c[a][b]=k(c,a,b);a=0;for(b=\"set add save post open empty reset on off trigger ready setProduct\".split(\" \");a<b.length;a++)d[b[a]]=k(c,e,b[a]);a=0;for(b=[\"get\",\"token\",\"url\",\"items\"];a<b.length;a++)d[b[a]]=function(){};h.async=!0;h.src=g[f];n.parentNode.insertBefore(h,n);delete g[f];d(g);l[m]=c})(window,_affirm_config,\"affirm\",\"checkout\",\"ui\",\"script\",\"ready\");\n}`)();\n","import { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Affirm, AffirmHostWindow, AffirmScripts } from './affirm';\nimport loadAffirmJS from './affirmJs';\n\nexport default class AffirmScriptLoader {\n    constructor(\n        public _window: AffirmHostWindow = window\n    ) { }\n\n    load(apikey?: string, testMode?: boolean): Promise<Affirm> {\n        const scriptURI = this._getScriptURI(testMode);\n\n        loadAffirmJS(apikey, scriptURI);\n\n        if (!this._window.affirm) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return Promise.resolve(this._window.affirm);\n    }\n\n    private _getScriptURI(testMode: boolean = false): string {\n        const SCRIPTS_DEFAULT: AffirmScripts = {\n            PROD: '//cdn1.affirm.com/js/v2/affirm.js',\n            SANDBOX: '//cdn1-sandbox.affirm.com/js/v2/affirm.js',\n        };\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n}\n","import { CheckoutStore, CheckoutValidator, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AfterpayScriptLoader from './afterpay-script-loader';\nimport AfterpaySdk from './afterpay-sdk';\n\nexport default class AfterpayPaymentStrategy implements PaymentStrategy {\n    private _afterpaySdk?: AfterpaySdk;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutValidator: CheckoutValidator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _afterpayScriptLoader: AfterpayScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId, options.gatewayId);\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._afterpaySdk = await this._afterpayScriptLoader.load(paymentMethod, this._mapCountryToISO2(storeCountryName));\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._afterpaySdk) {\n            this._afterpaySdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paymentId = payload.payment && payload.payment.gatewayId;\n\n        if (!paymentId) {\n            throw new PaymentArgumentInvalidError(['payment.gatewayId']);\n        }\n\n        let state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n        const { useStoreCredit } = payload;\n\n        if (useStoreCredit !== undefined) {\n            state = await this._store.dispatch(\n                this._storeCreditActionCreator.applyStoreCredit(useStoreCredit)\n            );\n        }\n\n        await this._checkoutValidator.validate(state.checkout.getCheckout(), options);\n\n        state = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(paymentId, options)\n        );\n\n        await this._redirectToAfterpay(storeCountryName, state.paymentMethods.getPaymentMethod(paymentId));\n\n        // Afterpay will handle the rest of the flow so return a promise that doesn't really resolve\n        return new Promise<never>(() => {});\n    }\n\n    async finalize(options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n        const config = state.config.getContextConfig();\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config || !config.payment.token) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const paymentPayload = {\n            methodId: payment.providerId,\n            paymentData: { nonce: config.payment.token },\n        };\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder({}, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    private _redirectToAfterpay(countryName: string, paymentMethod?: PaymentMethod): void {\n        if (!this._afterpaySdk || !paymentMethod || !paymentMethod.clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._afterpaySdk.initialize({ countryCode: this._mapCountryToISO2(countryName)});\n        this._afterpaySdk.redirect({ token: paymentMethod.clientToken });\n    }\n\n    private _mapCountryToISO2(countryName: string): string {\n        switch (countryName) {\n        case 'Australia':\n            return 'AU';\n\n        case 'New Zealand':\n            return 'NZ';\n\n        case 'United States':\n            return 'US';\n\n        default:\n            return 'AU';\n        }\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AfterpaySdk from './afterpay-sdk';\nimport AfterpayWindow from './afterpay-window';\n\ninterface AfterpayScripts {\n    PROD: string;\n    SANDBOX: string;\n}\n\nconst SCRIPTS_DEFAULT: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal-sandbox.afterpay.com/afterpay-async.js',\n};\n\nconst SCRIPTS_US: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal.us-sandbox.afterpay.com/afterpay-async.js',\n};\n\n/** Class responsible for loading the Afterpay SDK */\nexport default class AfterpayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    /**\n     * Loads the appropriate Afterpay SDK depending on the payment method data.\n     * @param method the payment method data\n     */\n    load(method: PaymentMethod, countryCode: string): Promise<AfterpaySdk> {\n        const testMode = method.config.testMode || false;\n        const scriptURI = this._getScriptURI(countryCode, testMode);\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (window as unknown as AfterpayWindow).AfterPay);\n    }\n\n    private _getScriptURI(countryCode: string, testMode: boolean): string {\n        if (countryCode === 'US') {\n            return testMode ? SCRIPTS_US.SANDBOX : SCRIPTS_US.PROD;\n        }\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n\n}\n","import { isEqual } from 'lodash';\n\nimport { omitPrivate } from '../common/utility';\n\nimport InternalAddress from './internal-address';\n\nexport default function isInternalAddressEqual(addressA: Partial<InternalAddress>, addressB: Partial<InternalAddress>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<InternalAddress>): Partial<InternalAddress> {\n    const ignoredKeys = ['id', 'provinceCode'];\n\n    return (Object.keys(omitPrivate(address) || {}) as Array<keyof InternalAddress>)\n        .reduce(\n            (result, key) => ignoredKeys.indexOf(key) === -1 && address[key] ?\n                { ...result, [key]: address[key] } :\n                result,\n            {}\n        );\n}\n","import isPrivate from './is-private';\nimport omitDeep from './omit-deep';\n\nexport default function omitPrivate(object: any): any {\n    return omitDeep(object, (_: any, key: string) => isPrivate(key));\n}\n","import { BillingAddress } from '../billing';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapFromInternalAddress(address: InternalAddress): Address | BillingAddress {\n    return {\n        id: address.id,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.addressLine1,\n        address2: address.addressLine2,\n        city: address.city,\n        stateOrProvince: address.province,\n        stateOrProvinceCode: address.provinceCode,\n        postalCode: address.postCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","export const CardinalSignatureValidationErrors = [100004, 1010, 1011, 1020];\n\nexport interface CardinalSDK {\n    configure(params: CardinalConfiguration): void;\n    on(params: CardinalEventType, callback: CardinalEventMap[CardinalEventType]): void;\n    off(params: CardinalEventType): void;\n    setup<K extends keyof CardinalInitializationDataMap>(initializationType: K, initializationData: CardinalInitializationDataMap[K]): void;\n    trigger(event: CardinalTriggerEvents, data?: string): Promise<CardinalBinProcessResponse | void>;\n    continue(paymentBrand: CardinalPaymentBrand, continueObject: CardinalContinue, order: CardinalPartialOrder): void;\n    start(paymentBrand: CardinalPaymentBrand, order: CardinalPartialOrder, jwt?: string): void;\n}\n\nexport interface CardinalWindow extends Window {\n    Cardinal?: CardinalSDK;\n}\n\nexport interface CardinalEventMap {\n    [CardinalEventType.SetupCompleted](setupCompleteData: CardinalSetupCompletedData): void;\n    [CardinalEventType.Validated](data: CardinalValidatedData, jwt?: string): void;\n}\n\nexport type CardinalConfiguration = Partial<{\n    logging: {\n        level: string;\n    };\n    payment: {\n        view: string;\n        framework: string;\n        displayLoading: boolean;\n    };\n}>;\n\nexport interface CardinalSetupCompletedData {\n    sessionId: string;\n    modules: CardinalModuleState[];\n}\n\nexport interface CardinalModuleState {\n    loaded: boolean;\n    module: string;\n}\n\nexport enum CardinalInitializationType {\n    Init = 'init',\n    Complete = 'complete',\n    Confirm = 'confirm',\n}\n\nexport interface CardinalInitializationDataMap {\n    [CardinalInitializationType.Init]: CardinalInitTypeData;\n    [CardinalInitializationType.Complete]: CardinalCompleteTypeData;\n    [CardinalInitializationType.Confirm]: CardinalConfirmTypeData;\n}\n\nexport interface CardinalInitTypeData {\n    jwt: string;\n}\n\nexport interface CardinalCompleteTypeData {\n    Status: string;\n}\n\nexport interface CardinalConfirmTypeData {\n    jwt: string;\n    cardinalResponseJwt: string;\n}\n\nexport interface CardinalValidatedData {\n    ActionCode?: CardinalValidatedAction;\n    ErrorDescription: string;\n    ErrorNumber: number;\n    Validated: boolean;\n    Payment?: CardinalPayment;\n}\n\nexport interface CardinalPayment {\n    ExtendedData?: CardinalCCAExtendedData;\n    ProcessorTransactionId: string;\n    Type: CardinalPaymentType;\n}\n\nexport interface CardinalBinProcessResponse {\n    Status: boolean;\n}\n\nexport interface CardinalContinue {\n    AcsUrl: string;\n    Payload: string;\n}\n\nexport interface CardinalPartialOrder {\n    OrderDetails: CardinalOrderDetails;\n    Consumer?: CardinalConsumer;\n}\n\nexport interface CardinalConsumer {\n    Email1?: string;\n    Email2?: string;\n    ShippingAddress?: CardinalAddress;\n    BillingAddress?: CardinalAddress;\n    Account?: CardinalAccount;\n}\n\nexport interface CardinalAccount {\n    AccountNumber: number;\n    ExpirationMonth: number;\n    ExpirationYear: number;\n    NameOnAccount: string;\n    CardCode: number;\n}\n\nexport interface CardinalAddress {\n    FullName?: string;\n    FirstName: string;\n    MiddleName?: string;\n    LastName: string;\n    Address1: string;\n    Address2?: string;\n    Address3?: string;\n    City: string;\n    State: string;\n    PostalCode: string;\n    CountryCode: string;\n    Phone1?: string;\n    Phone2?: string;\n}\n\nexport interface CardinalOrderDetails {\n    OrderNumber: string;\n    Amount: number;\n    CurrencyCode: string;\n    OrderDescription?: string;\n    OrderChannel: string;\n    TransactionId?: string;\n}\n\nexport type CardinalCCAExtendedData = Partial<{\n    CAVV: string;\n    ECIFlag: string;\n    PAResStatus: string;\n    SignatureVerification: string;\n    XID: string;\n    UCAFIndicator: string;\n}>;\n\nexport enum CardinalEventType {\n    SetupCompleted = 'payments.setupComplete',\n    Validated = 'payments.validated',\n}\n\nexport enum CardinalValidatedAction {\n    Success = 'SUCCESS',\n    NoAction = 'NOACTION',\n    Failure = 'FAILURE',\n    Error = 'ERROR',\n}\n\nexport enum CardinalPaymentType {\n    CCA = 'CCA',\n    Paypal = 'Paypal',\n    Wallet = 'Wallet',\n    VisaCheckout = 'VisaCheckout',\n    ApplePay = 'ApplePay',\n    DiscoverWallet = 'DiscoverWallet',\n}\n\nexport enum CardinalTriggerEvents {\n    BinProcess = 'bin.process',\n}\n\nexport enum CardinalPaymentBrand {\n    CCA = 'cca',\n}\n\nexport enum CardinalSignatureVerification {\n    Yes = 'Y',\n    No = 'N',\n}\n","import { noop } from 'lodash';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, mapToInternalAddress } from '../../../address';\nimport { BillingAddressActionCreator } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AmazonPayConfirmationFlow from './amazon-pay-confirmation-flow';\nimport AmazonPayOrderReference from './amazon-pay-order-reference';\nimport AmazonPayPaymentInitializeOptions from './amazon-pay-payment-initialize-options';\nimport AmazonPayScriptLoader from './amazon-pay-script-loader';\nimport AmazonPayWallet, { AmazonPayWalletOptions } from './amazon-pay-wallet';\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _walletOptions?: AmazonPayPaymentInitializeOptions;\n    private _window: AmazonPayWindow;\n    private _isPaymentMethodSelected: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n        this._isPaymentMethodSelected = false;\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!amazonOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.amazon\" argument is not provided.');\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._walletOptions = amazonOptions;\n        this._paymentMethod = paymentMethod;\n\n        return new Promise((resolve, reject) => {\n            const onReady = () => {\n                this._createWallet(amazonOptions)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            this._scriptLoader.loadWidget(paymentMethod, onReady)\n                .catch(reject);\n        })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._walletOptions = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const sellerId = this._getMerchantId();\n\n        if (!referenceId || !sellerId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        if (!this._isPaymentMethodSelected) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { payment: { paymentData, ...paymentPayload }, useStoreCredit = false } = payload;\n\n        if (options && this._paymentMethod && this._paymentMethod.config.is3dsEnabled) {\n            return this._processPaymentWith3ds(\n                sellerId,\n                referenceId,\n                paymentPayload.methodId,\n                useStoreCredit,\n                options\n            );\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { referenceId, useStoreCredit })\n        )\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                }, options)\n            ))\n            .catch(error => {\n                if (error instanceof RequestError && error.body.type === 'provider_widget_error' && this._walletOptions) {\n                    return this._createWallet(this._walletOptions)\n                        .then(() => Promise.reject(error));\n                }\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getMerchantId(): string | undefined {\n        return this._paymentMethod && this._paymentMethod.config.merchantId;\n    }\n\n    private _getOrderReferenceId(): string | undefined {\n        const state = this._store.getState();\n        const amazon = state.remoteCheckout.getCheckout('amazon');\n\n        return amazon ? amazon.referenceId : undefined;\n    }\n\n    private _getOrderReferenceIdFromInitializationData(): string | undefined {\n        return this._paymentMethod ? this._paymentMethod.initializationData.orderReferenceId : undefined;\n    }\n\n    private _createWallet(options: AmazonPayPaymentInitializeOptions): Promise<AmazonPayWallet> {\n        return new Promise((resolve, reject) => {\n            const { container, onError = noop, onPaymentSelect = noop, onReady = noop } = options;\n            const referenceId = this._getOrderReferenceId() || this._getOrderReferenceIdFromInitializationData();\n            const merchantId = this._getMerchantId();\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay Wallet widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const walletOptions: AmazonPayWalletOptions = {\n                amazonOrderReferenceId: referenceId,\n                design: { designMode: 'responsive' },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onPaymentSelect: orderReference => {\n                    this._synchronizeBillingAddress()\n                        .then(() => {\n                            this._isPaymentMethodSelected = true;\n                            onPaymentSelect(orderReference);\n                        })\n                        .catch(onError);\n                },\n                onReady: orderReference => {\n                    resolve();\n                    onReady(orderReference);\n                },\n            };\n\n            if (!this._getOrderReferenceId()) {\n                walletOptions.onReady = orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                };\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.Wallet(walletOptions);\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeBillingAddress(): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializeBilling(methodId, { referenceId })\n        )\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.billing && amazon.billing.address;\n                const billingAddress = state.billingAddress.getBillingAddress();\n                const internalBillingAddress = billingAddress && mapToInternalAddress(billingAddress);\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, internalBillingAddress || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._billingAddressActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            });\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n\n    private _processPaymentWith3ds(sellerId: string, referenceId: string, methodId: string, useStoreCredit: boolean, options: PaymentRequestOptions): Promise<never> {\n        return new Promise((_, reject) => {\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            return this._window.OffAmazonPayments.initConfirmationFlow(\n                sellerId,\n                referenceId,\n                (confirmationFlow: AmazonPayConfirmationFlow) => {\n                    return this._store.dispatch(\n                        this._orderActionCreator.submitOrder({useStoreCredit}, options)\n                    )\n                        .then(() => this._store.dispatch(\n                            this._remoteCheckoutActionCreator.initializePayment(methodId, {\n                                referenceId,\n                                useStoreCredit,\n                            }))\n                        )\n                        .then(() => {\n                            confirmationFlow.success();\n\n                            return new Promise<never>(() => {});\n                        })\n                        .catch(error => {\n                            confirmationFlow.error();\n\n                            return reject(error);\n                        });\n                }\n            );\n        });\n    }\n}\n","export default class CancellablePromise<T> {\n    promise: Promise<T>;\n    cancel!: (reason?: any) => void;\n\n    constructor(promise: Promise<T>) {\n        const cancellable = new Promise<T>((_, reject) => {\n            this.cancel = reject;\n        });\n\n        this.promise = Promise.race([promise, cancellable]);\n    }\n}\n","import { noop } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { CancellablePromise } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BlueSnapV2StyleProps } from './bluesnapv2';\nimport { BlueSnapV2PaymentInitializeOptions } from './bluesnapv2-payment-options';\n\nconst IFRAME_NAME = 'bluesnapv2_hosted_payment_page';\n\nexport default class BlueSnapV2PaymentStrategy implements PaymentStrategy {\n\n    private _initializeOptions?: BlueSnapV2PaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        if (!this._initializeOptions) {\n            throw new NotInitializedError(\n                NotInitializedErrorType.PaymentNotInitialized\n            );\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(orderRequest, options));\n\n        const { onLoad, style } = this._initializeOptions;\n        const frame = this._createIframe(IFRAME_NAME, style);\n        const promise = new CancellablePromise<undefined>(new Promise(noop));\n\n        onLoad(frame, () => promise.cancel(new PaymentMethodCancelledError()));\n\n        return this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment(\n            payment.methodId,\n            payment.gatewayId,\n            undefined,\n            false,\n            frame.name,\n            promise.promise\n        ));\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n        const status = state.payment.getPaymentStatus();\n\n        if (order && (status === paymentStatusTypes.ACKNOWLEDGE || status === paymentStatusTypes.FINALIZE)) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._initializeOptions = options && options.bluesnapv2;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _createIframe(name: string, style?: BlueSnapV2StyleProps): HTMLIFrameElement {\n        const iframe = document.createElement('iframe');\n\n        iframe.name = name;\n\n        if (style) {\n            const { border, height, width } = style;\n\n            iframe.style.border = border as string;\n            iframe.style.height = height as string;\n            iframe.style.width = width as string;\n        }\n\n        return iframe;\n    }\n}\n","export interface OverlayOptions {\n    background?: string;\n    id?: string;\n    transitionDuration?: number;\n}\n\nexport interface OverlayShowOptions {\n    onClick?(event: MouseEvent): void;\n}\n\nexport default class Overlay {\n    private _element: HTMLElement;\n    private _unregisterClick?: () => void;\n\n    constructor(options?: OverlayOptions) {\n        this._element = this._createElement(options);\n    }\n\n    show(options?: OverlayShowOptions): void {\n        if (this._element.parentElement) {\n            return;\n        }\n\n        this._registerClick(options);\n\n        document.body.appendChild(this._element);\n\n        // Fade In\n        setTimeout(() => this._element.style.opacity = '1');\n    }\n\n    remove(): void {\n        if (!this._element.parentElement) {\n            return;\n        }\n\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        this._removeAfterTransition();\n\n        setTimeout(() => this._element.style.opacity = '0');\n    }\n\n    private _createElement(options?: OverlayOptions): HTMLElement {\n        const element = document.createElement('div');\n        const {\n            background = 'rgba(0, 0, 0, 0.8)',\n            id = null,\n            transitionDuration = 400,\n        } = options || {};\n\n        element.style.background = background;\n        element.style.display = 'block';\n        element.style.height = '100%';\n        element.style.left = '0px';\n        element.style.opacity = '0';\n        element.style.position = 'fixed';\n        element.style.top = '0px';\n        element.style.transition = `opacity ${transitionDuration}ms ease-out`;\n        element.style.width = '100%';\n        element.style.zIndex = '2147483647';\n\n        if (id) {\n            element.id = id;\n        }\n\n        return element;\n    }\n\n    private _registerClick(options?: OverlayShowOptions): void {\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        if (options && options.onClick) {\n            const { onClick } = options;\n\n            this._element.addEventListener('click', onClick);\n\n            this._unregisterClick = () => {\n                this._element.removeEventListener('click', onClick);\n                this._unregisterClick = undefined;\n            };\n        }\n    }\n\n    private _removeAfterTransition(): void {\n        const handeTransition: (event: Event) => void = event => {\n            // NOTE: `event` is not correctly typed in this version of TS\n            if ((event as TransitionEvent).propertyName !== 'opacity') {\n                return;\n            }\n\n            if (this._element.parentElement) {\n                this._element.parentElement.removeChild(this._element);\n            }\n\n            this._element.removeEventListener('transitionend', handeTransition);\n        };\n\n        this._element.addEventListener('transitionend', handeTransition);\n    }\n}\n","import { Address } from '../../../address';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { Overlay } from '../../../common/overlay';\nimport { CancellablePromise } from '../../../common/utility';\nimport { OrderPaymentRequestBody } from '../../../order';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport { CreditCardInstrument, NonceInstrument } from '../../payment';\n\nimport { BraintreePaypal, BraintreeRequestData, BraintreeShippingAddressOverride, BraintreeTokenizePayload, BraintreeVerifyPayload } from './braintree';\nimport { BraintreePaymentInitializeOptions, BraintreeThreeDSecureOptions } from './braintree-payment-options';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport interface PaypalConfig {\n    amount: number;\n    currency: string;\n    locale: string;\n    offerCredit?: boolean;\n    shippingAddressOverride?: BraintreeShippingAddressOverride;\n    shouldSaveInstrument?: boolean;\n}\n\nexport default class BraintreePaymentProcessor {\n    private _threeDSecureOptions?: BraintreeThreeDSecureOptions;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _overlay: Overlay\n    ) {}\n\n    initialize(clientToken: string, options?: BraintreePaymentInitializeOptions): void {\n        this._braintreeSDKCreator.initialize(clientToken);\n        this._threeDSecureOptions = options && options.threeDSecure;\n    }\n\n    preloadPaypal(): Promise<BraintreePaypal> {\n        return this._braintreeSDKCreator.getPaypal();\n    }\n\n    tokenizeCard(payment: OrderPaymentRequestBody, billingAddress: Address): Promise<NonceInstrument> {\n        const { paymentData } = payment;\n        const requestData = this._mapToCreditCard(paymentData as CreditCardInstrument, billingAddress);\n\n        return this._braintreeSDKCreator.getClient()\n            .then(client => client.request(requestData))\n            .then(({ creditCards }) => ({\n                nonce: creditCards[0].nonce,\n            }));\n    }\n\n    paypal({ shouldSaveInstrument, ...config }: PaypalConfig): Promise<BraintreeTokenizePayload> {\n        return this._braintreeSDKCreator.getPaypal()\n            .then(paypal => {\n                this._overlay.show({\n                    onClick: () => paypal.focusWindow(),\n                });\n\n                return paypal.tokenize({\n                    enableShippingAddress: true,\n                    flow: shouldSaveInstrument ? 'vault' : 'checkout',\n                    useraction: 'commit',\n                    ...config,\n                });\n            })\n            .then(response => {\n                this._overlay.remove();\n\n                return response;\n            })\n            .catch(error => {\n                this._overlay.remove();\n\n                throw error;\n            });\n    }\n\n    verifyCard(payment: OrderPaymentRequestBody, billingAddress: Address, amount: number): Promise<BraintreeVerifyPayload> {\n        if (!this._threeDSecureOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { addFrame, removeFrame } = this._threeDSecureOptions;\n\n        return Promise.all([\n            this.tokenizeCard(payment, billingAddress),\n            this._braintreeSDKCreator.get3DS(),\n        ]).then(([paymentData, threeDSecure]) => {\n            const { nonce } = paymentData;\n            const cancelVerifyCard = () => threeDSecure.cancelVerifyCard()\n                .then(response => {\n                    verification.cancel(new PaymentMethodCancelledError());\n\n                    return response;\n                });\n\n            const verification = new CancellablePromise(\n                threeDSecure.verifyCard({\n                    addFrame: (error, iframe) => {\n                        addFrame(error, iframe, cancelVerifyCard);\n                    },\n                    amount,\n                    nonce,\n                    removeFrame,\n                })\n            );\n\n            return verification.promise;\n        });\n    }\n\n    getSessionId(): Promise<string | undefined> {\n        return this._braintreeSDKCreator.getDataCollector()\n            .then(({ deviceData }) => deviceData);\n    }\n\n    /**\n     * @deprecated Use getSessionId() and combine them in the consumer.\n     */\n    appendSessionId(processedPayment: Promise<NonceInstrument>): Promise<NonceInstrument> {\n        return processedPayment\n            .then(paymentData => Promise.all([paymentData, this._braintreeSDKCreator.getDataCollector()]))\n            .then(([paymentData, { deviceData }]) => ({ ...paymentData, deviceSessionId: deviceData }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    private _mapToCreditCard(creditCard: CreditCardInstrument, billingAddress: Address): BraintreeRequestData {\n        let streetAddress = billingAddress.address1;\n\n        if (billingAddress.address2) {\n            streetAddress = ` ${billingAddress.address2}`;\n        }\n\n        return {\n            data: {\n                creditCard: {\n                    cardholderName: creditCard.ccName,\n                    number: creditCard.ccNumber,\n                    cvv: creditCard.ccCvv,\n                    expirationDate: `${creditCard.ccExpiry.month}/${creditCard.ccExpiry.year}`,\n                    options: {\n                        validate: false,\n                    },\n                    billingAddress: {\n                        countryName: billingAddress.country,\n                        postalCode: billingAddress.postalCode,\n                        streetAddress,\n                    },\n                },\n            },\n            endpoint: 'payment_methods/credit_cards',\n            method: 'post',\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a payment method experiences some kind of\n * failure (i.e.: its client library returns a rejected promise). And there is\n * no other error type that is more specific than this one.\n */\nexport default class PaymentMethodFailedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method has thrown an unexpected error.');\n\n        this.name = 'PaymentMethodFailedError';\n        this.type = 'payment_method_client_invalid';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodFailedError } from '../../errors';\nimport isCreditCardLike from '../../is-credit-card-like';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { PaymentInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreePaymentProcessor from './braintree-payment-processor';\n\nexport default class BraintreeCreditCardPaymentStrategy implements PaymentStrategy {\n    private _is3dsEnabled?: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n                if (!paymentMethod || !paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._braintreePaymentProcessor.initialize(paymentMethod.clientToken, options.braintree);\n                this._is3dsEnabled = paymentMethod.config.is3dsEnabled;\n\n                return this._store.getState();\n            })\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(\n            this._orderActionCreator.submitOrder(order, options)\n        )\n            .then(state =>\n                state.payment.isPaymentDataRequired(order.useStoreCredit) && payment ?\n                    this._preparePaymentData(payment) :\n                    Promise.resolve(payment as Payment)\n            )\n            .then(payment =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment(payment))\n            )\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreePaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n\n    private _isUsingVaulting(paymentData: PaymentInstrument): boolean {\n        if (isCreditCardLike(paymentData)) {\n            return Boolean(paymentData.shouldSaveInstrument);\n        }\n\n        return isVaultedInstrument(paymentData);\n    }\n\n    private _preparePaymentData(payment: OrderPaymentRequestBody): Promise<Payment> {\n        const { paymentData } = payment;\n        const state = this._store.getState();\n\n        if (paymentData && this._isUsingVaulting(paymentData)) {\n            return Promise.resolve(payment as Payment);\n        }\n\n        const order = state.order.getOrder();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingOrder);\n        }\n\n        if (!billingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const tokenizedCard = this._is3dsEnabled ?\n            this._braintreePaymentProcessor.verifyCard(payment, billingAddress, order.orderAmount) :\n            this._braintreePaymentProcessor.tokenizeCard(payment, billingAddress);\n\n        return this._braintreePaymentProcessor.appendSessionId(tokenizedCard)\n            .then(paymentData => ({ ...payment, paymentData }));\n    }\n}\n","import isVaultedInstrument from './is-vaulted-instrument';\nimport { CreditCardInstrument, PaymentInstrument } from './payment';\n\nexport default function isCreditCardLike(instrument: PaymentInstrument): instrument is CreditCardInstrument {\n    const card = instrument as CreditCardInstrument;\n\n    return !isVaultedInstrument(card) &&\n        typeof card.ccName === 'string' &&\n        typeof card.ccNumber === 'string' &&\n        typeof card.ccExpiry === 'object' &&\n        typeof card.ccExpiry.month === 'string' &&\n        typeof card.ccExpiry.year === 'string';\n    }\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument, { isHostedVaultedInstrument } from '../../is-vaulted-instrument';\nimport Payment, { FormattedPayload, PaypalInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BraintreeError } from './braintree';\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport isBraintreeError from './is-braintree-error';\nimport mapToBraintreeShippingAddressOverride from './map-to-braintree-shipping-address-override';\n\nexport default class BraintreePaypalPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor,\n        private _credit: boolean = false\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintree: braintreeOptions, methodId } = options;\n\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (this._paymentMethod && this._paymentMethod.nonce) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._braintreePaymentProcessor.initialize(this._paymentMethod.clientToken, braintreeOptions);\n\n                return this._braintreePaymentProcessor.preloadPaypal();\n            })\n            .then(() => this._store.getState())\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return (payment ? this._preparePaymentData(payment, order.useStoreCredit) : Promise.resolve(payment))\n            .then(payment => Promise.all([payment, this._store.dispatch(this._orderActionCreator.submitOrder(order, options))]))\n            .then(([payment]) => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)))\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreePaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _handleError(error: BraintreeError | Error): never {\n        if (!isBraintreeError(error)) {\n            throw error;\n        }\n\n        if (error.code === 'PAYPAL_POPUP_CLOSED') {\n            throw new PaymentMethodCancelledError(error.message);\n        }\n\n        throw new PaymentMethodFailedError(error.message);\n    }\n\n    private _preparePaymentData(payment: OrderPaymentRequestBody, useStoreCredit?: boolean): Promise<Payment> {\n        const state = this._store.getState();\n        const grandTotal = state.checkout.getOutstandingBalance(useStoreCredit);\n        const config = state.config.getStoreConfig();\n\n        if (!grandTotal) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { currency, storeProfile: { storeLanguage } } = config;\n        const { nonce, config: { isVaultingEnabled } } = this._paymentMethod;\n        const { paymentData = {} } = payment;\n\n        if (nonce) {\n            return Promise.resolve({ ...payment, paymentData: this._formattedPayload(nonce) });\n        }\n\n        if (isVaultedInstrument(paymentData) || isHostedVaultedInstrument(paymentData)) {\n            if (!isVaultingEnabled) {\n                throw new InvalidArgumentError('Vaulting is disabled but a vaulted instrument was being used for this transaction');\n            }\n\n            return Promise.resolve(payment);\n        }\n\n        if (paymentData.shouldSaveInstrument && !isVaultingEnabled) {\n            throw new InvalidArgumentError('Vaulting is disabled but shouldSaveInstrument is set to true');\n        }\n\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        const shippingAddressOverride = shippingAddress ? mapToBraintreeShippingAddressOverride(shippingAddress) : undefined;\n\n        return Promise.all([\n            this._braintreePaymentProcessor.paypal({\n                amount: grandTotal,\n                locale: storeLanguage,\n                currency: currency.code,\n                offerCredit: this._credit,\n                shippingAddressOverride,\n                shouldSaveInstrument: paymentData.shouldSaveInstrument || false,\n            }),\n            this._braintreePaymentProcessor.getSessionId(),\n        ]).then(([\n            { nonce, details },\n            sessionId,\n        ]) => ({\n            ...payment,\n            paymentData: this._formattedPayload(nonce, details.email, sessionId, paymentData.shouldSaveInstrument),\n        }));\n    }\n\n    private _formattedPayload(token: string, email?: string, sessionId?: string, vaultPaymentInstrument?: boolean): FormattedPayload<PaypalInstrument> {\n        return {\n            formattedPayload: {\n                vault_payment_instrument: vaultPaymentInstrument || null,\n                device_info: sessionId || null,\n                paypal_account: {\n                    token,\n                    email: email || null,\n                },\n            },\n        };\n    }\n}\n","import { BraintreeError } from './braintree';\n\nexport default function isBraintreeError(error: BraintreeError | Error): error is BraintreeError {\n    return error.name === 'BraintreeError';\n}\n","import { Address } from '../../../address';\n\nimport { BraintreeShippingAddressOverride } from './braintree';\n\nexport default function mapToBraintreeShippingAddressOverride(address: Address): BraintreeShippingAddressOverride {\n    return {\n        recipientName: `${address.firstName} ${address.lastName}`,\n        line1: address.address1,\n        line2: address.address2,\n        city: address.city,\n        state: address.stateOrProvinceCode,\n        postalCode: address.postalCode,\n        countryCode: address.countryCode,\n        phone: address.phone,\n    };\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\nimport { VisaCheckoutPaymentSuccessPayload } from './visacheckout';\nimport VisaCheckoutScriptLoader from './visacheckout-script-loader';\n\nexport default class BraintreeVisaCheckoutPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    onError = () => {},\n                    onPaymentSelect = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: false,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, visaInitOptions]) => {\n                    visaCheckout.init(visaInitOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .then(() => onPaymentSelect())\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.nonce) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { nonce } = this._paymentMethod.initializationData;\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData: { nonce } }))\n            )\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                paymentSuccessPayload,\n                state.shippingAddress.getShippingAddress(),\n                state.billingAddress.getBillingAddress()\n            )\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n}\n","import { merge, some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedForm } from '../../../hosted-form';\nimport { OrderRequestBody } from '../../../order';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport CardinalClient, { CardinalOrderData } from './cardinal-client';\n\nexport default class CardinalThreeDSecureFlow {\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _cardinalClient: CardinalClient\n    ) {}\n\n    async prepare(method: PaymentMethod): Promise<void> {\n        await this._cardinalClient.load(method.id, method.config.testMode);\n        await this._cardinalClient.configure(await this._getClientToken(method));\n    }\n\n    async start(\n        execute: PaymentStrategy['execute'],\n        payload: OrderRequestBody,\n        options?: PaymentRequestOptions,\n        hostedForm?: HostedForm\n    ): Promise<InternalCheckoutSelectors> {\n        const { instruments: { getCardInstrument }, paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const { payment: { methodId = '', paymentData = {} } = {} } = payload;\n        const instrument = isVaultedInstrument(paymentData) && getCardInstrument(paymentData.instrumentId);\n        const bin = instrument ? instrument.iin : hostedForm && hostedForm.getBin();\n\n        if (bin) {\n            await this._cardinalClient.runBinProcess(bin);\n        }\n\n        try {\n            return await execute(merge(payload, {\n                payment: {\n                    paymentData: {\n                        threeDSecure: { token: getPaymentMethodOrThrow(methodId).clientToken },\n                    },\n                },\n            }), options);\n        } catch (error) {\n            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                throw error;\n            }\n\n            const threeDSecure = await this._cardinalClient.getThreeDSecureData(error.body.three_ds_result, this._getOrderData());\n\n            if (!hostedForm) {\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment(merge(payload.payment, {\n                    paymentData: { threeDSecure },\n                })));\n            }\n\n            await hostedForm.submit(merge(payload.payment, {\n                paymentData: { threeDSecure },\n            }));\n\n            return this._store.getState();\n        }\n    }\n\n    private async _getClientToken(method: PaymentMethod): Promise<string> {\n        if (method.clientToken) {\n            return method.clientToken;\n        }\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(method.id)\n        );\n\n        return getPaymentMethodOrThrow(method.id).clientToken || '';\n    }\n\n    private _getOrderData(): CardinalOrderData {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddressOrThrow();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n        const checkout = state.checkout.getCheckoutOrThrow();\n        const order = state.order.getOrderOrThrow();\n\n        return {\n            billingAddress,\n            shippingAddress,\n            currencyCode: checkout.cart.currency.code,\n            id: order.orderId.toString(),\n            amount: checkout.cart.cartAmount,\n        };\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport { CreditCardInstrument, ThreeDSecureToken, VaultedInstrument } from '../../payment';\nimport { ThreeDsResult } from '../../payment-response-body';\n\nimport { CardinalAccount, CardinalAddress, CardinalConsumer, CardinalEventType, CardinalInitializationType, CardinalPartialOrder, CardinalPaymentBrand, CardinalSignatureValidationErrors, CardinalSignatureVerification, CardinalSDK, CardinalTriggerEvents, CardinalValidatedAction, CardinalValidatedData } from './cardinal';\nimport CardinalScriptLoader from './cardinal-script-loader';\n\nexport type CardinalSupportedPaymentInstrument = CreditCardInstrument | VaultedInstrument;\n\nexport interface CardinalOrderData {\n    billingAddress: BillingAddress;\n    shippingAddress?: Address;\n    currencyCode: string;\n    id: string;\n    amount: number;\n    paymentData?: CreditCardInstrument;\n}\n\nexport default class CardinalClient {\n    private _sdk?: Promise<CardinalSDK>;\n    private _isConfigured: boolean = false;\n\n    constructor(\n        private _scriptLoader: CardinalScriptLoader\n    ) {}\n\n    load(provider: string, testMode?: boolean): Promise<void> {\n        if (!this._sdk) {\n            this._sdk = this._scriptLoader.load(provider, testMode);\n        }\n\n        return this._sdk.then(() => {});\n    }\n\n    configure(clientToken: string): Promise<void> {\n        if (this._isConfigured) {\n            return Promise.resolve();\n        }\n\n        return this._getClientSDK()\n            .then(client => new Promise<void>((resolve, reject) => {\n                client.on(CardinalEventType.SetupCompleted, () => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    this._isConfigured = true;\n\n                    resolve();\n                });\n\n                client.on(CardinalEventType.Validated, (data: CardinalValidatedData) => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    switch (data.ActionCode) {\n                        case CardinalValidatedAction.Error:\n                            if (includes(CardinalSignatureValidationErrors, data.ErrorNumber)) {\n                                reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n                            }\n                            reject(new PaymentMethodFailedError(data.ErrorDescription));\n                            break;\n                    }\n                });\n\n                client.setup(CardinalInitializationType.Init, {\n                    jwt: clientToken,\n                });\n            }));\n    }\n\n    runBinProcess(binNumber: string): Promise<void> {\n        return this._getClientSDK()\n            .then(client => client.trigger(CardinalTriggerEvents.BinProcess, binNumber).catch(() => {}))\n            .then(result => {\n                if (!result || !result.Status) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n            });\n    }\n\n    getThreeDSecureData(threeDSecureData: ThreeDsResult, orderData: CardinalOrderData): Promise<ThreeDSecureToken> {\n        return this._getClientSDK()\n            .then(client => {\n                return new Promise<ThreeDSecureToken>((resolve, reject) => {\n                    client.on(CardinalEventType.Validated, (data: CardinalValidatedData, jwt?: string) => {\n                        client.off(CardinalEventType.Validated);\n                        if (!jwt) {\n                            return reject(new PaymentMethodFailedError(data.ErrorDescription ? data.ErrorDescription : 'An error was encountered while processing the transaction.'));\n                        }\n\n                        if (!data.ActionCode) {\n                            return resolve({ token: jwt });\n                        }\n\n                        switch (data.ActionCode) {\n                            case CardinalValidatedAction.Success:\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.NoAction:\n                                if (data.ErrorNumber > 0) {\n                                    return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                                } else if (!data.Payment || !data.Payment.ExtendedData || data.Payment.ExtendedData.SignatureVerification !== CardinalSignatureVerification.Yes) {\n                                    return reject(new PaymentMethodFailedError('Transaction signature could not be validated.'));\n                                }\n\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.Failure:\n                                return reject(new PaymentMethodFailedError('User failed authentication or an error was encountered while processing the transaction.'));\n                            case CardinalValidatedAction.Error:\n                                return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                        }\n                    });\n\n                    const continueObject = {\n                        AcsUrl: threeDSecureData.acs_url,\n                        Payload: threeDSecureData.merchant_data,\n                    };\n\n                    const partialOrder = this._mapToPartialOrder(orderData, threeDSecureData.payer_auth_request);\n\n                    client.continue(CardinalPaymentBrand.CCA, continueObject, partialOrder);\n                });\n            });\n    }\n\n    private _mapToPartialOrder(orderData: CardinalOrderData, transactionId: string): CardinalPartialOrder {\n        const consumer: CardinalConsumer = {\n            BillingAddress: this._mapToCardinalAddress(orderData.billingAddress),\n        };\n\n        if (orderData.paymentData) {\n            consumer.Account = this._mapToCardinalAccount(orderData.paymentData);\n        }\n\n        if (orderData.billingAddress.email) {\n            consumer.Email1 = orderData.billingAddress.email;\n        }\n\n        if (orderData.shippingAddress) {\n            consumer.ShippingAddress = this._mapToCardinalAddress(orderData.shippingAddress);\n        }\n\n        return  {\n            Consumer: consumer,\n            OrderDetails: {\n                OrderNumber: orderData.id,\n                Amount: orderData.amount,\n                CurrencyCode: orderData.currencyCode,\n                OrderChannel: 'S',\n                TransactionId: transactionId,\n            },\n        };\n    }\n\n    private _mapToCardinalAccount(paymentData: CreditCardInstrument): CardinalAccount {\n        return {\n            AccountNumber: Number(paymentData.ccNumber),\n            ExpirationMonth: Number(paymentData.ccExpiry.month),\n            ExpirationYear: Number(paymentData.ccExpiry.year),\n            NameOnAccount: paymentData.ccName,\n            CardCode: Number(paymentData.ccCvv),\n        };\n    }\n\n    private _mapToCardinalAddress(address: Address): CardinalAddress {\n        const cardinalAddress: CardinalAddress = {\n            FirstName: address.firstName,\n            LastName: address.lastName,\n            Address1: address.address1,\n            City: address.city,\n            State: address.stateOrProvince,\n            PostalCode: address.postalCode,\n            CountryCode: address.countryCode,\n        };\n\n        if (address.address2) {\n            cardinalAddress.Address2 = address.address2;\n        }\n\n        if (address.phone) {\n            cardinalAddress.Phone1 = address.phone;\n        }\n\n        return cardinalAddress;\n    }\n\n    private _getClientSDK(): Promise<CardinalSDK> {\n        if (!this._sdk) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._sdk;\n    }\n}\n","export enum ChasePayEventType {\n    StartCheckout = 'startCheckout',\n    CompleteCheckout = 'completeCheckout',\n    CancelCheckout = 'cancelCheckout',\n}\n\nexport interface ChasePayEventMap {\n    [ChasePayEventType.StartCheckout](digitalSessionId: string): void;\n    [ChasePayEventType.CompleteCheckout](payload: ChasePaySuccessPayload): void;\n    [ChasePayEventType.CancelCheckout](): void;\n}\n\nexport interface ChasePayHostWindow extends Window {\n    JPMC?: JPMC;\n}\n\nexport interface JPMC {\n    ChasePay: ChasePay;\n}\n\nexport interface ChasePaySuccessPayload {\n    sessionToken: string;\n}\n\nexport interface ChasePayInsertOptions {\n    color?: string;\n    containers?: string[];\n    height?: number;\n    width?: number;\n}\n\nexport interface ChasePayConfigureOptions {\n    language?: string;\n    zindex?: number;\n    sessionWarningTime?: number;\n    sessionTimeoutTime?: number;\n}\n\nexport interface ChasePay {\n    EventType: {\n        START_CHECKOUT: ChasePayEventType.StartCheckout;\n        COMPLETE_CHECKOUT: ChasePayEventType.CompleteCheckout;\n        CANCEL_CHECKOUT: ChasePayEventType.CancelCheckout;\n    };\n    isChasePayUp(): boolean;\n    insertButtons(options: ChasePayInsertOptions): void;\n    insertBrandings(options: ChasePayInsertOptions): void;\n    startCheckout(digitalSessionId?: string): void;\n    showLoadingAnimation(): void;\n    configure(options: ChasePayConfigureOptions): void;\n    on<ChasePayEventType extends keyof ChasePayEventMap>(eventType: ChasePayEventType, callback: ChasePayEventMap[ChasePayEventType]): {};\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { CardinalSDK, CardinalWindow } from './cardinal';\n\nconst SDK_TEST_URL = 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js';\nconst SDK_PROD_URL = 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js';\n\nexport default class CardinalScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: CardinalWindow = window\n    ) {}\n\n    load(provider: string, testMode?: boolean): Promise<CardinalSDK> {\n        const url = testMode ? SDK_TEST_URL : SDK_PROD_URL;\n\n        return this._scriptLoader\n            .loadScript(url + '?v=' + provider)\n            .then(() => {\n                if (!this._window.Cardinal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Cardinal;\n            });\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport Payment from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\nimport { WepayRiskClient } from '../wepay';\n\nimport { ChasePay, ChasePayEventType, ChasePaySuccessPayload } from './chasepay';\nimport ChasePayInitializeOptions from './chasepay-initialize-options';\nimport ChasePayScriptLoader from './chasepay-script-loader';\n\nexport default class ChasePayPaymentStrategy implements PaymentStrategy {\n    private _chasePayClient?: ChasePay;\n    private _methodId!: string;\n    private _walletButton?: HTMLElement;\n    private _walletEvent$: Subject<{ type: ChasePayEventType }>;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        this._walletEvent$ = new Subject();\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._methodId = options.methodId;\n\n        if (!options.chasepay) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.chasepay\" argument is not provided.');\n        }\n\n        const walletButton = options.chasepay.walletButton && document.getElementById(options.chasepay.walletButton);\n\n        if (walletButton) {\n            this._walletButton = walletButton;\n            this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n        }\n\n        return this._configureWallet(options.chasepay)\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._chasePayClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._getPayment()\n            .catch(error => {\n                if (error.subtype === MissingDataErrorType.MissingPayment) {\n                    return this._displayWallet()\n                        .then(() => this._getPayment());\n                }\n\n                throw error;\n            })\n            .then(payment =>\n                this._createOrder(payment, payload.useStoreCredit, options)\n            );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _configureWallet(options: ChasePayInitializeOptions): Promise<void> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return this._chasePayScriptLoader.load(paymentMethod.config.testMode)\n            .then(({ ChasePay }) => {\n                this._chasePayClient = ChasePay;\n\n                if (options.logoContainer && document.getElementById(options.logoContainer)) {\n                    this._chasePayClient.insertBrandings({\n                        color: 'white',\n                        containers: [options.logoContainer],\n                    });\n                }\n\n                this._chasePayClient.configure({\n                    language: storeConfig.storeProfile.storeLanguage,\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CancelCheckout, () => {\n                    this._walletEvent$.next({ type: ChasePayEventType.CancelCheckout });\n\n                    if (options.onCancel) {\n                        options.onCancel();\n                    }\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CompleteCheckout, (payload: ChasePaySuccessPayload) => {\n                    this._setSessionToken(payload.sessionToken)\n                        .then(() => {\n                            this._walletEvent$.next({ type: ChasePayEventType.CompleteCheckout });\n\n                            if (options.onPaymentSelect) {\n                                options.onPaymentSelect();\n                            }\n                        });\n                });\n            });\n    }\n\n    private _displayWallet(): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n                .then(state => {\n                    const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                    if (!this._chasePayClient) {\n                        throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                    }\n\n                    if (!paymentMethod) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    this._chasePayClient.showLoadingAnimation();\n                    this._chasePayClient.startCheckout(paymentMethod.initializationData.digitalSessionId);\n                });\n\n            // Wait for payment selection\n            return new Promise((resolve, reject) => {\n                this._walletEvent$\n                    .pipe(take(1))\n                    .subscribe((event: { type: ChasePayEventType }) => {\n                        if (event.type === ChasePayEventType.CancelCheckout) {\n                            reject(new PaymentMethodCancelledError());\n                        } else if (event.type === ChasePayEventType.CompleteCheckout) {\n                            resolve();\n                        }\n                    });\n            });\n        }, { methodId: this._methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _setSessionToken(sessionToken: string): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const merchantRequestId = paymentMethod && paymentMethod.initializationData.merchantRequestId;\n\n        return this._requestSender.post('checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                action: 'set_external_checkout',\n                provider: this._methodId,\n                sessionToken,\n                merchantRequestId,\n            },\n        })\n            // Re-hydrate checkout data\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId)),\n            ]))\n            .then(() => this._store.getState());\n    }\n\n    private _getPayment(): Promise<Payment> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n            .then(() => {\n                if (this._methodId === 'wepay') {\n                    return this._wepayRiskClient.initialize()\n                        .then(client => client.getRiskToken());\n                }\n\n                return '';\n            })\n            .then(riskToken => {\n                const state = this._store.getState();\n                const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!paymentMethod.initializationData.paymentCryptogram) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPayment);\n                }\n\n                const paymentData = {\n                    method: this._methodId,\n                    cryptogramId: paymentMethod.initializationData.paymentCryptogram,\n                    eci: paymentMethod.initializationData.eci,\n                    transactionId: btoa(paymentMethod.initializationData.reqTokenId),\n                    ccExpiry: {\n                        month: paymentMethod.initializationData.expDate.toString().substr(0, 2),\n                        year: paymentMethod.initializationData.expDate.toString().substr(2, 2),\n                    },\n                    ccNumber: paymentMethod.initializationData.accountNum,\n                    accountMask: paymentMethod.initializationData.accountMask,\n                    extraData: riskToken ? { riskToken } : undefined,\n                };\n\n                return {\n                    methodId: this._methodId,\n                    paymentData,\n                };\n            });\n    }\n\n    private _createOrder(payment: Payment, useStoreCredit?: boolean, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)));\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): void {\n        event.preventDefault();\n\n        this._displayWallet();\n    }\n}\n","export default interface SquarePaymentForm {\n    build(): void;\n    requestCardNonce(): void;\n    setPostalCode(postalCode: string): void;\n}\n\nexport type SquarePaymentFormConstructor = new(options: SquareFormOptions) => SquarePaymentForm;\n\nexport interface SquareFormOptions {\n    applicationId: string;\n    env: string;\n    locationId: string;\n    inputClass?: string;\n    inputStyles?: string[];\n    callbacks?: SquareFormCallbacks;\n    cardNumber: SquareFormElement;\n    cvv: SquareFormElement;\n    expirationDate: SquareFormElement;\n    postalCode: SquareFormElement;\n    masterpass: SquareFormElement;\n}\nexport interface LineItem {\n    label: string;\n    amount: string;\n    pending: boolean;\n}\n\nexport interface SquarePaymentRequest {\n    requestShippingAddress: boolean;\n    requestBillingInfo: boolean;\n    shippingContact?: Contact;\n    countryCode: string;\n    currencyCode: string;\n    lineItems?: LineItem[];\n    total: LineItem;\n}\n\nexport interface NonceGenerationError {\n    type: string;\n    message: string;\n    field: string;\n}\n\nexport interface CardData {\n    card_brand: CardBrand;\n    last_4: number;\n    exp_month: number;\n    exp_year: number;\n    billing_postal_code: string;\n    digital_wallet_type: DigitalWalletType;\n}\n\nexport interface Contact {\n    familyName: string;\n    givenName: string;\n    email: string;\n    country: string;\n    countryName: string;\n    region: string;\n    city: string;\n    addressLines: string[];\n    postalCode: string;\n    phone: string;\n}\n\nexport enum CardBrand {\n    americanExpress = 'AMERICAN_EXPRESS',\n    discover = 'DISCOVER',\n    discoverDiners = 'DISCOVER_DINERS',\n    JCB = 'JCB',\n    masterCard = 'MASTERCARD',\n    unionPay = 'CHINA_UNIONPAY',\n    unknown = 'OTHER_BRAND',\n    visa = 'VISA',\n    squareGift = 'SQUARE_GIFT_CARD',\n}\n\nexport enum DigitalWalletType {\n    applePay = 'APPLEPAY',\n    masterpass = 'MASTERPASS',\n    none = 'NONE',\n}\n\n/**\n * Configures any form element provided by Square payment.\n */\nexport interface SquareFormElement {\n    /**\n     * The ID of the container which the form element should insert into.\n     */\n    elementId: string;\n\n    /**\n     * The placeholder text to use for the form element, if provided.\n     */\n    placeholder?: string;\n}\n\nexport interface SquareFormCallbacks {\n    paymentFormLoaded?(form: SquarePaymentForm): void;\n    unsupportedBrowserDetected?(): void;\n    cardNonceResponseReceived?(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): void;\n    methodsSupported?(methods: { [key: string]: boolean }): void;\n    createPaymentRequest?(): void;\n}\n\nexport type SquareFormFactory = (options: SquareFormOptions) => SquarePaymentForm;\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class ConvergePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _formPoster: FormPoster\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            )\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { HostedForm, HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class CreditCardPaymentStrategy implements PaymentStrategy {\n    protected _hostedForm?: HostedForm;\n\n    constructor(\n        protected _store: CheckoutStore,\n        protected _orderActionCreator: OrderActionCreator,\n        protected _paymentActionCreator: PaymentActionCreator,\n        protected _hostedFormFactory: HostedFormFactory\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._isHostedPaymentFormEnabled() ?\n            this._executeWithHostedForm(payload, options) :\n            this._executeWithoutHostedForm(payload, options);\n    }\n\n    finalize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._isHostedPaymentFormEnabled()) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        const formOptions = options && options.creditCard && options.creditCard.form;\n        const { config } = this._store.getState();\n        const { paymentSettings: { bigpayBaseUrl: host = '' } = {} } = config.getStoreConfig() || {};\n        const { payment: { formId = '' } = {} } = config.getContextConfig() || {};\n\n        if (!formOptions || !formId) {\n            throw new InvalidArgumentError();\n        }\n\n        const form = this._hostedFormFactory.create(host, formId, formOptions);\n\n        return form.attach()\n            .then(() => {\n                this._hostedForm = form;\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (this._hostedForm) {\n            this._hostedForm.detach();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            );\n    }\n\n    private _executeWithHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors>  {\n        const { payment, ...order } = payload;\n        const form = this._hostedForm;\n\n        if (!form) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payment || !payment.methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        return form.validate()\n            .then(() => this._store.dispatch(this._orderActionCreator.submitOrder(order, options)))\n            .then(() => form.submit(payment))\n            .then(() => this._store.dispatch(this._orderActionCreator.loadCurrentOrder()));\n    }\n\n    private _isHostedPaymentFormEnabled(): boolean {\n        const { config } = this._store.getState();\n        const { checkoutSettings: { isHostedPaymentFormEnabled = false } = {} } = config.getStoreConfig() || {};\n\n        return isHostedPaymentFormEnabled;\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class CyberSourcePaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { GooglePaymentData, PaymentMethodData } from './googlepay';\nimport GooglePayPaymentInitializeOptions from './googlepay-initialize-options';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\n\nexport default class GooglePayPaymentStrategy implements PaymentStrategy {\n    private _googlePayOptions?: GooglePayPaymentInitializeOptions;\n    private _methodId?: string;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._methodId = options.methodId;\n\n        return this._googlePayPaymentProcessor.initialize(this._methodId)\n            .then(() => {\n                this._googlePayOptions = this._getGooglePayOptions(options);\n\n                if (!this._googlePayOptions) {\n                    throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n                }\n\n                const walletButton = this._googlePayOptions.walletButton && document.getElementById(this._googlePayOptions.walletButton);\n\n                if (walletButton) {\n                    this._walletButton = walletButton;\n                    this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                }\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._googlePayOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n        }\n\n        const {\n            onError = () => {},\n            onPaymentSelect = () => {},\n        } = this._googlePayOptions;\n\n        return Promise.resolve(this._getPayment())\n            .then(payment => {\n                if (!payment.paymentData.nonce || !payment.paymentData.cardInformation) {\n                    // TODO: Find a way to share the code with _handleWalletButtonClick method\n                    return this._googlePayPaymentProcessor.displayWallet()\n                        .then(paymentData => this._paymentInstrumentSelected(paymentData))\n                        .then(() => onPaymentSelect())\n                        .then(() => this._getPayment())\n                        .catch(error => {\n                            if (error.statusCode !== 'CANCELED') {\n                                onError(error);\n                            }\n                        });\n                }\n\n                return payment;\n            })\n            .then(() =>\n                this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit: payload.useStoreCredit }, options))\n                    .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment(this._getPayment())))\n            );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _paymentInstrumentSelected(paymentData: GooglePaymentData) {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const methodId = this._methodId;\n\n        // TODO: Revisit how we deal with GooglePaymentData after receiving it from Google\n        return this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n    }\n\n    private _getGooglePayOptions(options: PaymentInitializeOptions): GooglePayPaymentInitializeOptions {\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError();\n    }\n\n    private _getPayment(): PaymentMethodData {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!paymentMethod.initializationData.nonce) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        const paymentData = {\n            method: this._methodId,\n            nonce: paymentMethod.initializationData.nonce,\n            cardInformation: paymentMethod.initializationData.card_information,\n        };\n\n        return {\n            methodId: this._methodId,\n            paymentData,\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<InternalCheckoutSelectors> {\n        event.preventDefault();\n\n        if (!this._methodId || !this._googlePayOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const methodId = this._methodId;\n\n        const {\n            onError = () => {},\n            onPaymentSelect = () => {},\n        } = this._googlePayOptions;\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._googlePayPaymentProcessor.displayWallet()\n                .then(paymentData => this._paymentInstrumentSelected(paymentData))\n                .then(() => onPaymentSelect())\n                .catch(error => {\n                    if (error.statusCode !== 'CANCELED') {\n                        onError(error);\n                    }\n                });\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport KlarnaCredit, { KlarnaAddress, KlarnaLoadResponse, KlarnaUpdateSessionParams } from './klarna-credit';\nimport KlarnaScriptLoader from './klarna-script-loader';\n\nexport default class KlarnaPaymentStrategy implements PaymentStrategy {\n    private _klarnaCredit?: KlarnaCredit;\n    private _unsubscribe?: (() => void);\n    private _supportedEUCountries = ['AT', 'DE', 'DK', 'FI', 'GB', 'NL', 'NO', 'SE', 'CH'];\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _klarnaScriptLoader: KlarnaScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._klarnaScriptLoader.load()\n            .then(klarnaCredit => { this._klarnaCredit = klarnaCredit; })\n            .then(() => {\n                this._unsubscribe = this._store.subscribe(\n                    state => {\n                        if (state.paymentStrategies.isInitialized(options.methodId)) {\n                            this._loadWidget(options);\n                        }\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.outstandingBalance;\n                    }\n                );\n\n                return this._loadWidget(options);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment\" argument is not provided.');\n        }\n\n        const { payment: { paymentData, ...paymentPayload } } = payload;\n\n        return this._authorize()\n            .then(({ authorization_token: authorizationToken }) => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { authorizationToken })\n            ))\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                    // Note: API currently doesn't support using Store Credit with Klarna.\n                    // To prevent deducting customer's store credit, set it as false.\n                    useStoreCredit: false,\n                }, options)\n            ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _loadWidget(options: PaymentInitializeOptions): Promise<KlarnaLoadResponse> {\n        if (!options.klarna) {\n            throw new InvalidArgumentError('Unable to load widget because \"options.klarna\" argument is not provided.');\n        }\n\n        const { methodId, klarna: { container, onLoad } } = options;\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise<KlarnaLoadResponse>(resolve => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!this._klarnaCredit || !paymentMethod.clientToken) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                this._klarnaCredit.init({ client_token: paymentMethod.clientToken });\n\n                this._klarnaCredit.load({ container }, response => {\n                    if (onLoad) {\n                        onLoad(response);\n                    }\n                    resolve(response);\n                });\n            }));\n    }\n\n    private _getUpdateSessionData(billingAddress: BillingAddress, shippingAddress?: Address): KlarnaUpdateSessionParams {\n        if (!includes(this._supportedEUCountries, billingAddress.countryCode)) {\n            return {};\n        }\n\n        const data: KlarnaUpdateSessionParams = {\n            billing_address: this._mapToKlarnaAddress(billingAddress, billingAddress.email),\n        };\n\n        if (shippingAddress) {\n            data.shipping_address = this._mapToKlarnaAddress(shippingAddress, billingAddress.email);\n        }\n\n        return data;\n    }\n\n    private _mapToKlarnaAddress(address: Address, email?: string): KlarnaAddress {\n        const klarnaAddress: KlarnaAddress = {\n            street_address: address.address1,\n            city: address.city,\n            country: address.countryCode,\n            given_name: address.firstName,\n            family_name: address.lastName,\n            postal_code: address.postalCode,\n            region: address.stateOrProvince,\n            email,\n        };\n\n        if (address.address2) {\n            klarnaAddress.street_address2 = address.address2;\n        }\n\n        if (address.phone) {\n            klarnaAddress.phone = address.phone;\n        }\n\n        return klarnaAddress;\n    }\n\n    private _authorize(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n            const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n            if (!billingAddress) {\n                throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n            }\n\n            if (!this._klarnaCredit) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const updateSessionData = this._getUpdateSessionData(billingAddress, shippingAddress);\n\n            this._klarnaCredit.authorize(updateSessionData, res => {\n                if (res.approved) {\n                    return resolve(res);\n                }\n\n                if (res.show_form) {\n                    return reject(new PaymentMethodCancelledError());\n                }\n\n                reject(new PaymentMethodInvalidError());\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport KlarnaCredit from './klarna-credit';\nimport KlarnaWindow from './klarna-window';\n\nconst SDK_URL = '//credit.klarnacdn.net/lib/v1/api.js';\n\nexport default class KlarnaScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<KlarnaCredit> {\n        return this._scriptLoader.loadScript(SDK_URL)\n            .then(() => (window as unknown as KlarnaWindow).Klarna.Credit);\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport KlarnaPayments, { KlarnaAddress, KlarnaAuthorizationResponse, KlarnaLoadResponse, KlarnaUpdateSessionParams } from './klarna-payments';\nimport KlarnaV2ScriptLoader from './klarnav2-script-loader';\n\nexport default class KlarnaV2PaymentStrategy implements PaymentStrategy {\n    private _klarnaPayments?: KlarnaPayments;\n    private _supportedEUCountries = ['AT', 'DE', 'DK', 'FI', 'GB', 'NL', 'NO', 'SE', 'CH'];\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _klarnav2ScriptLoader: KlarnaV2ScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._klarnav2ScriptLoader.load()\n            .then(klarnaPayments => { this._klarnaPayments = klarnaPayments; })\n            .then(() => this._loadPaymentsWidget(options))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment\" argument is not provided.');\n        }\n\n        const { payment: { paymentData, ...paymentPayload } } = payload;\n        const { gatewayId } = paymentPayload;\n\n        if (!gatewayId) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.gatewayId\" argument is not provided.');\n        }\n\n        return this._authorize(paymentPayload.methodId, gatewayId)\n            .then(({ authorization_token: authorizationToken }) => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializePayment(gatewayId, { authorizationToken })\n            ))\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                    // Note: API currently doesn't support using Store Credit with Klarna.\n                    // To prevent deducting customer's store credit, set it as false.\n                    useStoreCredit: false,\n                }, options)\n            ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _loadPaymentsWidget(options: PaymentInitializeOptions): Promise<KlarnaLoadResponse> {\n        if (!options.klarnav2) {\n            throw new InvalidArgumentError('Unable to load widget because \"options.klarnav2\" argument is not provided.');\n        }\n\n        const { methodId, klarnav2: { container, onLoad } } = options;\n        const state = this._store.getState();\n\n        return new Promise<KlarnaLoadResponse>(resolve => {\n            const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n            if (!this._klarnaPayments || !paymentMethod.clientToken) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._klarnaPayments.init({ client_token: paymentMethod.clientToken });\n            this._klarnaPayments.load({ container, payment_method_category: paymentMethod.id }, response => {\n                if (onLoad) {\n                    onLoad(response);\n                }\n                resolve(response);\n            });\n        });\n    }\n\n    private _getUpdateSessionData(billingAddress: BillingAddress, shippingAddress?: Address): KlarnaUpdateSessionParams {\n        if (!includes(this._supportedEUCountries, billingAddress.countryCode)) {\n            return {};\n        }\n\n        const data: KlarnaUpdateSessionParams = {\n            billing_address: this._mapToKlarnaAddress(billingAddress, billingAddress.email),\n        };\n\n        if (shippingAddress) {\n            data.shipping_address = this._mapToKlarnaAddress(shippingAddress, billingAddress.email);\n        }\n\n        return data;\n    }\n\n    private _mapToKlarnaAddress(address: Address, email?: string): KlarnaAddress {\n        const klarnaAddress: KlarnaAddress = {\n            street_address: address.address1,\n            city: address.city,\n            country: address.countryCode,\n            given_name: address.firstName,\n            family_name: address.lastName,\n            postal_code: address.postalCode,\n            region: address.stateOrProvince,\n            email,\n        };\n\n        if (address.address2) {\n            klarnaAddress.street_address2 = address.address2;\n        }\n\n        if (address.phone) {\n            klarnaAddress.phone = address.phone;\n        }\n\n        return klarnaAddress;\n    }\n\n    private async _updateOrder(gatewayId: string) {\n        await this._paymentMethodActionCreator.loadPaymentMethod(gatewayId).toPromise();\n    }\n\n    private _authorize(methodId: string, gatewayId: string): Promise<KlarnaAuthorizationResponse> {\n        return new Promise<KlarnaAuthorizationResponse>((resolve, reject) => {\n            const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n            const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n            if (!billingAddress) {\n                throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n            }\n\n            const updateSessionData = this._getUpdateSessionData(billingAddress, shippingAddress);\n\n            this._updateOrder(gatewayId);\n\n            if (!this._klarnaPayments) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._klarnaPayments.authorize({ payment_method_category: methodId }, updateSessionData, res => {\n                if (res.approved) {\n                    return resolve(res);\n                }\n\n                if (res.show_form) {\n                    return reject(new PaymentMethodCancelledError());\n                }\n\n                reject(new PaymentMethodInvalidError());\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport KlarnaPayments from './klarna-payments';\nimport KlarnaV2Window from './klarnav2-window';\n\nconst SDK_URL = 'https://x.klarnacdn.net/kp/lib/v1/api.js';\n\nexport default class KlarnaV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<KlarnaPayments> {\n        return this._scriptLoader.loadScript(SDK_URL)\n            .then(() => (window as unknown as KlarnaV2Window).Klarna.Payments);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class LegacyPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport getCallbackUrl from './get-callback-url';\nimport { Masterpass, MasterpassCheckoutOptions } from './masterpass';\nimport MasterpassScriptLoader from './masterpass-script-loader';\n\nexport default class MasterpassPaymentStrategy implements PaymentStrategy {\n    private _masterpassClient?: Masterpass;\n    private _paymentMethod?: PaymentMethod;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._masterpassScriptLoader.load(this._paymentMethod.config.testMode)\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n\n                if (!options.masterpass) {\n                    throw new InvalidArgumentError('Unable to initialize payment because \"options.masterpass\" argument is not provided.');\n                }\n\n                const walletButton  = options.masterpass.walletButton && document.getElementById(options.masterpass.walletButton);\n\n                if (walletButton) {\n                    this._walletButton = walletButton;\n                    this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                }\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._masterpassClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = payload;\n        const order = { useStoreCredit: payload.useStoreCredit };\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.gateway) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        // TODO: Refactor the API endpoint to return nonce in the right place.\n        const paymentData = this._paymentMethod.initializationData.paymentData;\n\n        // TODO: Redirect to Masterpass if nonce has not been generated yet. And then finalise the order when the shopper is redirected back to the checkout page.\n        if (!paymentData) {\n            throw new InvalidArgumentError('Unable to proceed because \"paymentMethod.initializationData.paymentData\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData })));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: this._paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.subtotal.toFixed(2),\n            currency: storeConfig.currency.code,\n            cartId: checkout.cart.id,\n            suppressShippingAddress: false,\n            callbackUrl: getCallbackUrl('checkout'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event) {\n        event.preventDefault();\n\n        if (!this._masterpassClient) {\n            return;\n        }\n\n        const payload = this._createMasterpassPayload();\n        this._masterpassClient.checkout(payload);\n    }\n}\n","import { omit } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class NoPaymentDataRequiredPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options)\n        );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OfflinePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const action = this._orderActionCreator.submitOrder({\n            ...payload,\n            payment: payload.payment ? { methodId: payload.payment.methodId } : undefined,\n        }, options);\n\n        return this._store.dispatch(action);\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport { HostedInstrument, VaultedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OffsitePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const orderPayload = this._shouldSubmitFullPayload(payment) ? payload : order;\n        const paymentData = payment && payment.paymentData;\n        const instrumentId = paymentData && (paymentData as VaultedInstrument).instrumentId;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(orderPayload, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment(\n                    payment.methodId,\n                    payment.gatewayId,\n                    instrumentId,\n                    shouldSaveInstrument))\n            );\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n        const status = state.payment.getPaymentStatus();\n\n        if (order && (status === paymentStatusTypes.ACKNOWLEDGE || status === paymentStatusTypes.FINALIZE)) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _shouldSubmitFullPayload(payment?: OrderPaymentRequestBody): boolean {\n        // FIXME: A temporary workaround to support offsite payment methods\n        // where their return URL needs to be provided by the core app.\n        if (!payment) {\n            return false;\n        }\n\n        return payment.gatewayId === 'adyen' || payment.gatewayId === 'barclaycard' || payment.methodId === 'ccavenuemars';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { ACKNOWLEDGE } from '../../payment-status-types';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class PaypalProPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { payment: { getPaymentStatus }, paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentStatus() === ACKNOWLEDGE) {\n            return this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: { methodId },\n                }, options)\n            );\n        }\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nimport PaypalScriptLoader from './paypal-script-loader';\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalExpressPaymentStrategy implements PaymentStrategy {\n    private _paypalSdk?: PaypalSDK;\n    private _paymentMethod?: PaymentMethod;\n    private _useRedirectFlow: boolean = false;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _scriptLoader: PaypalScriptLoader,\n        private _window: PaypalHostWindow = window\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n        this._useRedirectFlow = (options.paypalexpress && options.paypalexpress.useRedirectFlow) === true;\n\n        if (!this._isInContextEnabled()) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._scriptLoader.loadPaypal()\n            .then(paypal => {\n                this._paypalSdk = paypal;\n\n                if (!this._paymentMethod || !this._paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._paypalSdk.checkout.setup(this._paymentMethod.config.merchantId, {\n                    button: 'paypal-button',\n                    environment: this._paymentMethod.config.testMode ? 'sandbox' : 'production',\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._isInContextEnabled() && this._paypalSdk) {\n            this._paypalSdk.checkout.closeFlow();\n            this._paypalSdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paypal = this._paypalSdk;\n\n        if (this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n        }\n\n        if (!this._isInContextEnabled() || this._useRedirectFlow) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n                .then(state => {\n                    const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                    if (redirectUrl) {\n                        this._window.top.location.href = redirectUrl;\n                    }\n\n                    // We need to hold execution so the consumer does not redirect us somewhere else\n                    return new Promise<never>(() => {});\n                });\n        }\n\n        if (!paypal) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        paypal.checkout.initXO();\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n            .then(state => {\n                const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                if (redirectUrl) {\n                    paypal.checkout.startFlow(redirectUrl);\n                }\n\n                // We need to hold execution so the consumer does not redirect us somewhere else\n                return new Promise<never>(() => {});\n            })\n            .catch(error => {\n                paypal.checkout.closeFlow();\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _isAcknowledgedOrFinalized(): boolean {\n        const state = this._store.getState();\n\n        return state.payment.getPaymentStatus() === paymentStatusTypes.ACKNOWLEDGE\n            || state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE;\n    }\n\n    private _isInContextEnabled(): boolean {\n        return !!(this._paymentMethod && this._paymentMethod.config.merchantId);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class PaypalCommercePaymentStrategy implements PaymentStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        if (!paymentMethod || !paymentMethod.initializationData.orderId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const paymentData =  {\n            formattedPayload: {\n                vault_payment_instrument: null,\n                device_info: null,\n                paypal_account: {\n                    order_id: paymentMethod.initializationData.orderId,\n                },\n            },\n        };\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class SagePayPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _formPoster: FormPoster\n    ) {\n        super(store, orderActionCreator, paymentActionCreator, hostedFormFactory);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return super.execute(payload, options)\n            .catch((error: Error) => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    }, undefined, '_top');\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return super.finalize(options);\n    }\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if the shopper is using a browser version that is not\n * supported by us or any third party provider we use.\n */\nexport default class UnsupportedBrowserError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unsupported browser error');\n\n        this.name = 'UnsupportedBrowserError';\n        this.type = 'unsupported_browser';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\nimport { omit } from 'lodash';\nimport { noop } from 'rxjs';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, TimeoutError, UnsupportedBrowserError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { NonceInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport SquarePaymentForm, { CardData, Contact, DigitalWalletType, NonceGenerationError, SquareFormElement, SquareFormOptions, SquarePaymentRequest } from './square-form';\nimport SquarePaymentInitializeOptions from './square-payment-initialize-options';\nimport SquareScriptLoader from './square-script-loader';\n\nexport default class SquarePaymentStrategy implements PaymentStrategy {\n    private _deferredRequestNonce?: DeferredPromise;\n    private _paymentForm?: SquarePaymentForm;\n    private _paymentMethod?: PaymentMethod;\n    private _squareOptions?: SquarePaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _scriptLoader: SquareScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        this._syncPaymentMethod(methodId);\n\n        return this._scriptLoader.load()\n            .then(createSquareForm =>\n                new Promise((resolve, reject) => {\n                    this._paymentForm = createSquareForm(\n                        this._getFormOptions(options, { resolve, reject })\n                    );\n                    this._paymentForm.build();\n                }))\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment || !payment.methodId) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        this._syncPaymentMethod(payment.methodId);\n\n        return this._getNonceInstrument(payment.methodId)\n            .then(paymentData =>\n                this._store.dispatch(this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options))\n                .then(() =>\n                    this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n                ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _syncPaymentMethod(methodId: string): void {\n        const state = this._store.getState();\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n    }\n\n    private _getCountryCode(countryName: string) {\n        switch (countryName.toUpperCase()) {\n            case 'NEW ZELAND':\n                return 'NZ';\n            case 'AUSTRALIA':\n                return 'AU';\n            default:\n                return 'US';\n        }\n    }\n\n    private _getNonceInstrument(methodId: string): Promise<NonceInstrument> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (paymentMethod) {\n            const { initializationData } = paymentMethod;\n            if (initializationData && initializationData.paymentData.nonce) {\n                return Promise.resolve({ nonce: paymentMethod.initializationData.paymentData.nonce });\n            }\n        }\n\n        return new Promise<NonceInstrument>((resolve, reject) => {\n            if (!this._paymentForm) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            if (this._deferredRequestNonce) {\n                this._deferredRequestNonce.reject(new TimeoutError());\n            }\n\n            this._deferredRequestNonce = { resolve, reject };\n            this._paymentForm.requestCardNonce();\n        });\n    }\n\n    private _getFormOptions(options: PaymentInitializeOptions, deferred: DeferredPromise): SquareFormOptions {\n        const { square: squareOptions } = options;\n\n        if (!squareOptions || !this._paymentMethod) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.square\" argument is not provided.');\n        }\n\n        this._squareOptions = squareOptions;\n\n        return {\n            ...this._squareOptions,\n            ...this._paymentMethod.initializationData,\n            callbacks: {\n                cardNonceResponseReceived: (errors, nonce, cardData, billingContact, shippingContact) => {\n                    if (cardData && cardData.digital_wallet_type !== DigitalWalletType.none) {\n                        this._handleWalletNonceResponse(errors, nonce, cardData, billingContact, shippingContact);\n                    } else {\n                        this._handleCardNonceResponse(errors, nonce);\n                    }\n                },\n                createPaymentRequest: () => this._paymentRequestPayload(),\n                methodsSupported: methods => {\n                    const { masterpass } = squareOptions;\n\n                    if (masterpass) {\n                        this._showPaymentMethods(methods, masterpass);\n                    }\n                },\n                paymentFormLoaded: () => {\n                    deferred.resolve();\n                    this._setPostalCode();\n                },\n                unsupportedBrowserDetected: () => deferred.reject(new UnsupportedBrowserError()),\n            },\n        };\n    }\n\n    private _handleWalletNonceResponse(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact\n    ): void {\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n        const onPaymentSelect = this._squareOptions && this._squareOptions.onPaymentSelect || noop;\n\n        if (errors) {\n            onError(errors);\n        } else if (nonce && this._paymentMethod) {\n            this._paymentInstrumentSelected(\n                this._paymentMethod.id,\n                nonce,\n                cardData,\n                billingContact,\n                shippingContact\n            )\n                .then(onPaymentSelect)\n                .catch(onError);\n        }\n    }\n\n    private _handleCardNonceResponse(errors?: NonceGenerationError[], nonce?: string): void {\n        if (!this._deferredRequestNonce) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (nonce && !errors) {\n            this._deferredRequestNonce.resolve({ nonce });\n\n            return;\n        }\n\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n\n        onError(errors);\n\n        this._deferredRequestNonce.reject(errors);\n    }\n\n    private _paymentInstrumentSelected(\n        methodId: string,\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): Promise<InternalCheckoutSelectors> {\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._setExternalCheckoutData(nonce, cardData, billingContact, shippingContact)\n            .then(() =>\n                Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _paymentRequestPayload(): SquarePaymentRequest {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return {\n            requestShippingAddress: true,\n            requestBillingInfo: true,\n            currencyCode: storeConfig.currency.code,\n            countryCode: this._getCountryCode(storeConfig.storeProfile.storeCountry),\n            total: {\n                label: storeConfig.storeProfile.storeName,\n                amount: String(checkout.subtotal),\n                pending: false,\n            },\n        };\n    }\n\n    private _setExternalCheckoutData(nonce?: string, cardData?: CardData, billingContact?: Contact, shippingContact?: Contact): Promise<Response<any>> {\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                nonce,\n                provider: 'squarev2',\n                action: 'set_external_checkout',\n                cardData: JSON.stringify(cardData),\n                billingContact: JSON.stringify(billingContact),\n                shippingContact: JSON.stringify(shippingContact),\n            },\n        });\n    }\n\n    private _setPostalCode(): void {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!this._paymentForm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (billingAddress && billingAddress.postalCode) {\n            this._paymentForm.setPostalCode(billingAddress.postalCode);\n        }\n    }\n\n    private _showPaymentMethods(methods: { [key: string]: boolean }, element: SquareFormElement): void {\n        const masterpassBtn = document.getElementById(element.elementId);\n\n        if (masterpassBtn && methods.masterpass) {\n            masterpassBtn.style.display = 'inline-block';\n        }\n    }\n}\n\nexport interface DeferredPromise {\n    resolve(resolution?: NonceInstrument): void;\n    reject(reason?: any): void;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { SquareFormFactory, SquareFormOptions } from './square-form';\nimport SquareWindow from './square-window';\n\nexport default class SquareScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<SquareFormFactory> {\n        const scriptURI = '//js.squareup.com/v2/paymentform';\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (options: SquareFormOptions) =>\n                new (window as unknown as SquareWindow).SqPaymentForm(options)\n            );\n    }\n}\n","import { some } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { Customer } from '../../../customer';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { StripeAddress, StripeBillingDetails, StripeCardElement, StripeHandleCardPaymentOptions, StripePaymentMethodData, StripeShippingDetails, StripeV3Client } from './stripev3';\nimport StripeV3ScriptLoader from './stripev3-script-loader';\n\nexport default class StripeV3PaymentStrategy implements PaymentStrategy {\n    private _stripeV3Client?: StripeV3Client;\n    private _cardElement?: StripeCardElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _stripeScriptLoader: StripeV3ScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const stripeOptions = options.stripev3;\n\n        if (!stripeOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.stripev3\" argument is not provided.');\n        }\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._stripeScriptLoader.load(paymentMethod.initializationData.stripePublishableKey)\n            .then(stripeJs => {\n                this._stripeV3Client = stripeJs;\n                const elements = this._stripeV3Client.elements();\n                const cardElement = elements.create('card', {\n                    style: stripeOptions.style,\n                });\n\n                cardElement.mount(`#${stripeOptions.containerId}`);\n\n                this._cardElement = cardElement;\n\n                return Promise.resolve(this._store.getState());\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n        const shouldSaveInstrument = Boolean(paymentData && (paymentData as HostedInstrument).shouldSaveInstrument);\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                if (paymentData && isVaultedInstrument(paymentData)) {\n                    return this._store.dispatch(this._paymentActionCreator.submitPayment({...payment, paymentData}))\n                        .catch(error => {\n                            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                                return Promise.reject(error);\n                            }\n\n                            return this._getStripeJs().handleCardPayment(error.body.three_ds_result.token)\n                                .then(stripeResponse => {\n                                    if (stripeResponse.error || !stripeResponse.paymentIntent.id) {\n                                        throw new PaymentMethodFailedError(stripeResponse.error && stripeResponse.error.message);\n                                    }\n\n                                    const paymentPayload = {\n                                        methodId: payment.methodId,\n                                        paymentData: {\n                                            nonce: stripeResponse.paymentIntent.id,\n                                        },\n                                    };\n\n                                    return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n                                });\n                        });\n                }\n\n                return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId))\n                    .then(state => {\n                        const paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n                        const paymentIntent = paymentMethod && paymentMethod.clientToken;\n\n                        if (!this._cardElement) {\n                            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                        }\n\n                        return this._getStripeJs().createPaymentMethod('card', this._cardElement, this._mapStripePaymentMethodOptions())\n                            .then(stripePaymentMethod => {\n                                if (stripePaymentMethod.error || !stripePaymentMethod.paymentMethod.id) {\n                                    throw new PaymentMethodFailedError(stripePaymentMethod.error && stripePaymentMethod.error.message);\n                                }\n\n                                if (!paymentIntent) {\n                                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                                }\n\n                                const stripeCardPaymentOptions = {\n                                    ...this._mapStripeCardPaymentOptions(shouldSaveInstrument),\n                                    payment_method: stripePaymentMethod.paymentMethod.id,\n                                };\n\n                                return this._getStripeJs().handleCardPayment(paymentIntent, stripeCardPaymentOptions);\n                            })\n                            .then(stripeResponse => {\n                                if (stripeResponse.error || !stripeResponse.paymentIntent.id) {\n                                    throw new PaymentMethodFailedError(stripeResponse.error && stripeResponse.error.message);\n                                }\n\n                                const paymentPayload = {\n                                    methodId: payment.methodId,\n                                    paymentData: {\n                                        nonce: stripeResponse.paymentIntent.id,\n                                        shouldSaveInstrument,\n                                    },\n                                };\n\n                                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n                            });\n                    });\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._cardElement) {\n            this._cardElement.unmount();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _getStripeJs(): StripeV3Client {\n        if (!this._stripeV3Client) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._stripeV3Client;\n    }\n\n    private _mapStripeBillingAddress(billingAddress: BillingAddress | undefined): StripeAddress | undefined {\n        if (!billingAddress) {\n            return undefined;\n        }\n\n        return {\n            city: billingAddress.city,\n            country: billingAddress.countryCode,\n            line1: billingAddress.address1,\n            line2: billingAddress.address2,\n            postal_code: billingAddress.postalCode,\n            state: billingAddress.stateOrProvinceCode,\n        };\n    }\n\n    private _mapStripeShippingAddress(shippingAddress: Address | undefined): StripeAddress {\n        if (!shippingAddress) {\n            return { };\n        }\n\n        return {\n            city: shippingAddress.city,\n            country: shippingAddress.countryCode,\n            line1: shippingAddress.address1,\n            line2: shippingAddress.address2,\n            postal_code: shippingAddress.postalCode,\n            state: shippingAddress.stateOrProvinceCode,\n        };\n    }\n\n    private _mapStripeBillingDetails({ billingAddress, customer }: { billingAddress?: BillingAddress; customer?: Customer } = {}): StripeBillingDetails {\n        const stripeBillingDetails = {\n            address: this._mapStripeBillingAddress(billingAddress),\n        };\n\n        if (customer) {\n            return {\n                ...stripeBillingDetails,\n                email: customer.email,\n                name: `${customer.firstName} ${customer.lastName}`,\n            };\n        }\n\n        if (billingAddress) {\n            return {\n                ...stripeBillingDetails,\n                email: billingAddress.email,\n                name: `${billingAddress.firstName} ${billingAddress.lastName}`,\n            };\n        }\n\n        return {\n            name: 'Guest',\n        };\n    }\n\n    private _mapStripeShippingDetails({ shippingAddress, customer }: { shippingAddress?: Address ; customer?: Customer } = {}): StripeShippingDetails {\n        const stripeShippingDetails = {\n            address: this._mapStripeShippingAddress(shippingAddress),\n        };\n\n        if (customer) {\n            return {\n                ...stripeShippingDetails,\n                name: `${customer.firstName} ${customer.lastName}`,\n            };\n        }\n\n        if (shippingAddress) {\n            return {\n                ...stripeShippingDetails,\n                name: `${shippingAddress.firstName} ${shippingAddress.lastName}`,\n            };\n        }\n\n        return {\n            ...stripeShippingDetails,\n            name: 'Guest',\n        };\n    }\n\n    private _getCustomer(): Customer | undefined {\n        const customer = this._store.getState().customer.getCustomer();\n\n        if (customer) {\n            if (customer.firstName === '' || customer.lastName === '' || customer.email === '') {\n                return undefined;\n            }\n        }\n\n        return customer;\n    }\n\n    private _mapStripeCardPaymentOptions(shouldSaveInstrument: boolean): StripeHandleCardPaymentOptions {\n        const customer = this._getCustomer();\n        const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n        const shippingDetails = {\n            shipping: this._mapStripeShippingDetails({ shippingAddress, customer }),\n        };\n\n        if (customer) {\n            return {\n                ...shippingDetails,\n                receipt_email: customer.email,\n                save_payment_method: shouldSaveInstrument,\n            };\n        } else {\n            return {\n                ...shippingDetails,\n            };\n        }\n    }\n\n    private _mapStripePaymentMethodOptions(): StripePaymentMethodData {\n        const customer = this._getCustomer();\n        const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        return {\n            billing_details: this._mapStripeBillingDetails({ billingAddress, customer }),\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { StripeHostWindow, StripeV3Client } from './stripev3';\n\nexport default class StripeV3ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: StripeHostWindow = window\n    ) {}\n\n    load(publishableKey: string): Promise<StripeV3Client> {\n        return this._scriptLoader\n            .loadScript('https://js.stripe.com/v3/')\n            .then(() => {\n                if (!this._window.Stripe) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Stripe(publishableKey, {\n                    betas: ['payment_intent_beta_3'],\n                });\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport WepayRisk from './wepay-risk';\nimport WepayWindow from './wepay-window';\n\nconst SCRIPT_SRC = '//static.wepay.com/min/js/risk.1.latest.js';\n\nexport default class WepayRiskClient {\n    private _riskClient?: WepayRisk;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    initialize(): Promise<WepayRiskClient> {\n        return this._scriptLoader\n            .loadScript(SCRIPT_SRC)\n            .then(() => this._riskClient = (window as unknown as WepayWindow).WePay.risk)\n            .then(() => this);\n    }\n\n    getRiskToken(): string {\n        if (!this._riskClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._riskClient.generate_risk_token();\n\n        return this._riskClient.get_risk_token();\n    }\n}\n","import { merge } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nimport WepayRiskClient from './wepay-risk-client';\n\nexport default class WepayPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        super(store, orderActionCreator, paymentActionCreator, hostedFormFactory);\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._wepayRiskClient.initialize();\n\n        return super.initialize(options);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const token = this._wepayRiskClient.getRiskToken();\n        const payloadWithToken = merge({}, payload, {\n            payment: {\n                paymentData: {\n                    deviceSessionId: token,\n                },\n            },\n        });\n\n        return super.execute(payloadWithToken, options);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if a payment method explicitly returns a declined error and\n * the shopper has to choose a different payment method if they wish to continue\n * their checkout process.\n */\nexport default class PaymentMethodDeclinedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'The selected payment method was declined. Please select another payment method.');\n\n        this.name = 'PaymentMethodDeclinedError';\n        this.type = 'payment_declined';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { ContentType, INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentMethodCancelledError, PaymentMethodDeclinedError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Zip, ZipModalEvent } from './zip';\nimport ZipScriptLoader from './zip-script-loader';\n\nexport default class ZipPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _zipClient?: Zip;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _zipScriptLoader: ZipScriptLoader,\n        private _requestSender: RequestSender\n    ) { }\n\n    async initialize(): Promise<InternalCheckoutSelectors> {\n        const zip = await this._zipScriptLoader.load();\n        this._zipClient = zip;\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n        this._zipClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const { _zipClient: zipClient } = this;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!zipClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        const { useStoreCredit } = payload;\n\n        if (useStoreCredit !== undefined) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId, options));\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const nonce = await new Promise<string | undefined>((resolve, reject) => {\n            zipClient.Checkout.init({\n                onComplete: async ({ checkoutId, state }) => {\n                    if (state === ZipModalEvent.CancelCheckout) {\n                        return reject(new PaymentMethodCancelledError());\n                    }\n\n                    if (state === ZipModalEvent.CheckoutReferred && checkoutId) {\n                        await this._prepareForReferredRegistration(payment.methodId, checkoutId);\n\n                        return resolve();\n                    }\n\n                    if (state === ZipModalEvent.CheckoutApproved && checkoutId) {\n                        return resolve(checkoutId);\n                    }\n\n                    if (state === ZipModalEvent.CheckoutDeclined) {\n                        return reject(new PaymentMethodDeclinedError('Unfortunately your application was declined. Please select another payment method.'));\n                    }\n\n                    reject(new PaymentMethodInvalidError());\n                },\n                onCheckout: openModal => {\n                    if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    openModal(JSON.parse(this._paymentMethod.clientToken));\n                },\n            });\n        });\n\n        if (nonce !== undefined) {\n            return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                methodId: payment.methodId,\n                paymentData: { nonce },\n            }));\n        }\n\n        return this._store.getState();\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _prepareForReferredRegistration(provider: string, externalId: string): Promise<Response> {\n        const url = `/api/storefront/payment/${provider}/save-external-id`;\n        const options = {\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n            body: {\n                externalId,\n                provider,\n            },\n        };\n\n        return this._requestSender.post(url, options);\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { Zip, ZipHostWindow } from '../zip';\n\nexport default class ZipScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ZipHostWindow = window\n    ) {}\n\n    load(): Promise<Zip> {\n        return this._scriptLoader\n            .loadScript(`//static.zipmoney.com.au/checkout/checkout-v1.min.js`)\n            .then(() => {\n                if (!this._window.Zip) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Zip;\n            });\n    }\n}\n","import { createAction, createDataStore, Action, DataStore, ReadableDataStore } from '@bigcommerce/data-store';\n\nenum ProjectionActionType {\n    Synchronize = 'SYNCHRONIZE',\n}\n\ninterface SynchronizeAction<TState> extends Action<TState> {\n    type: ProjectionActionType.Synchronize;\n    payload: TState;\n}\n\nexport interface DataStoreProjection<TTransformedState> extends ReadableDataStore<TTransformedState> {\n    notifyState(): void;\n}\n\nexport default function createDataStoreProjection<TState, TTransformedState = TState>(\n    store: DataStore<any, Action, TState>,\n    stateTransformer: (state: TState) => TTransformedState\n): DataStoreProjection<TTransformedState> {\n    const projection = createDataStore<TState | undefined, SynchronizeAction<TState>, TTransformedState>(\n        (state, action) => action.type === ProjectionActionType.Synchronize ?\n            action.payload :\n            state,\n        store.getState(),\n        { stateTransformer }\n    );\n\n    store.subscribe(state => {\n        projection.dispatch(createAction(ProjectionActionType.Synchronize, state) as SynchronizeAction<TState>);\n    }, { initial: false });\n\n    return projection;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { Address } from '../../address';\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../../checkout';\nimport { addMinutes, isFuture } from '../../common/date-time';\nimport { MissingDataError, MissingDataErrorType } from '../../common/error/errors';\n\nimport { SessionContext, VaultAccessToken } from './instrument';\nimport { DeleteInstrumentAction, InstrumentActionType, LoadInstrumentsAction } from './instrument-actions';\nimport InstrumentRequestSender from './instrument-request-sender';\n\nexport default class InstrumentActionCreator {\n    constructor(\n        private _instrumentRequestSender: InstrumentRequestSender\n    ) {}\n\n    loadInstruments(): ThunkAction<LoadInstrumentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadInstrumentsAction>) => {\n            observer.next(createAction(InstrumentActionType.LoadInstrumentsRequested));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n            const shippingAddress = this._getShippingAddress(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.loadInstruments({\n                            ...session,\n                            authToken: currentToken.vaultAccessToken,\n                        },\n                        shippingAddress\n                    )\n                        .then(({ body }) => {\n                            observer.next(createAction(\n                                InstrumentActionType.LoadInstrumentsSucceeded,\n                                body,\n                                currentToken\n                            ));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.LoadInstrumentsFailed, response));\n                });\n        });\n    }\n\n    deleteInstrument(instrumentId: string): ThunkAction<DeleteInstrumentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteInstrumentAction>) => {\n            observer.next(createAction(InstrumentActionType.DeleteInstrumentRequested, undefined, { instrumentId }));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.deleteInstrument({\n                        ...session,\n                        authToken: currentToken.vaultAccessToken,\n                    }, instrumentId)\n                        .then(({ body }) => {\n                            observer.next(createAction(InstrumentActionType.DeleteInstrumentSucceeded, body, {\n                                instrumentId,\n                                ...currentToken,\n                            }));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.DeleteInstrumentFailed, response, { instrumentId }));\n                });\n        });\n    }\n\n    private _isValidVaultAccessToken(token: VaultAccessToken): boolean {\n        if (!token || !token.vaultAccessToken) {\n            return false;\n        }\n\n        const expiryBuffer = 2;\n        const expiry = addMinutes(new Date(token.vaultAccessExpiry), expiryBuffer);\n\n        return isFuture(expiry);\n    }\n\n    private _getCurrentAccessToken(store: ReadableCheckoutStore): VaultAccessToken | undefined {\n        const { instruments } = store.getState();\n        const meta = instruments.getInstrumentsMeta();\n\n        if (!meta) {\n            return;\n        }\n\n        return {\n            vaultAccessToken: meta.vaultAccessToken,\n            vaultAccessExpiry: meta.vaultAccessExpiry,\n        };\n    }\n\n    private _getValidAccessToken(token?: VaultAccessToken): Promise<VaultAccessToken> {\n        return token && this._isValidVaultAccessToken(token) ?\n            Promise.resolve(token) :\n            this._instrumentRequestSender.getVaultAccessToken().then(({ body }) => body);\n    }\n\n    private _getShippingAddress(store: ReadableCheckoutStore): Address | undefined {\n        const state = store.getState();\n\n        return state.shippingAddress.getShippingAddress();\n    }\n\n    private _getSessionContext(store: ReadableCheckoutStore): SessionContext {\n        const state = store.getState();\n        const config = state.config.getStoreConfig();\n        const cart = state.cart.getCart();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        const { customerId } = cart;\n        const { storeId } = config.storeProfile;\n        const { code } = config.shopperCurrency.isTransactional ? config.shopperCurrency : config.currency;\n\n        return {\n            customerId,\n            storeId,\n            currencyCode: code,\n        };\n    }\n}\n","export default function isFuture(date: Date): boolean {\n    return date.valueOf() > Date.now();\n}\n","export default function addMinutes(date: Date, amount: number): Date {\n    const newDate = new Date(date.getTime());\n\n    newDate.setMinutes(date.getMinutes() + amount);\n\n    return newDate;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentResponse from '../payment-response';\n\nimport PaymentInstrument, { VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody, InstrumentErrorResponseBody, InternalInstrument, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody, InternalVaultAccessTokenResponseBody } from './instrument-response-body';\nimport { mapToAccountInstrument } from './map-to-account-instrument';\nimport { mapToCardInstrument } from './map-to-card-instrument';\n\nexport default class InstrumentResponseTransformer {\n    transformResponse(\n        response: PaymentResponse<InternalInstrumentsResponseBody>\n    ): Response<InstrumentsResponseBody> {\n        const { body, ...payload } = this._transformResponse(response);\n\n        return {\n            ...payload,\n            body: {\n                vaultedInstruments: this._transformVaultedInstruments(body.vaulted_instruments),\n            },\n        };\n    }\n\n    transformErrorResponse(\n        response: PaymentResponse<InternalInstrumentErrorResponseBody>\n    ): Response<InstrumentErrorResponseBody> {\n        return this._transformResponse(response);\n    }\n\n    transformVaultAccessResponse(\n        response: Response<InternalVaultAccessTokenResponseBody>\n    ): Response<VaultAccessToken> {\n        return {\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        };\n    }\n\n    private _transformVaultedInstruments(vaultedInstruments: InternalInstrument[] = []): PaymentInstrument[] {\n        return vaultedInstruments\n            .map(instrument => {\n                switch (instrument.method_type) {\n                    case 'paypal':\n                        return mapToAccountInstrument(instrument);\n                    default:\n                        return mapToCardInstrument(instrument);\n                }\n            });\n    }\n\n    private _transformResponse<T>(response: PaymentResponse<T>): Response<T> {\n        const { data: body, ...payload } = response;\n\n        return {\n            ...payload,\n            body,\n        };\n    }\n}\n","import { AccountInstrument } from './instrument';\nimport { AccountInternalInstrument } from './instrument-response-body';\n\nexport function mapToAccountInstrument(instrument: AccountInternalInstrument): AccountInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        externalId: instrument.external_id,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method: instrument.method_type,\n        type: 'account',\n    };\n}\n","import { CardInstrument } from './instrument';\nimport { CardInternalInstrument } from './instrument-response-body';\n\nexport function mapToCardInstrument(instrument: CardInternalInstrument): CardInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        iin: instrument.iin,\n        last4: instrument.last_4,\n        expiryMonth: instrument.expiry_month,\n        expiryYear: instrument.expiry_year,\n        brand: instrument.brand,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method:  instrument.method,\n        type: 'card',\n    };\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { mapToInternalAddress, Address } from '../../address';\nimport { RequestOptions } from '../../common/http-request';\nimport PaymentResponse from '../payment-response';\n\nimport { InstrumentRequestContext, VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody } from './instrument-response-body';\nimport InstrumentResponseTransformer from './instrument-response-transformer';\n\nexport default class InstrumentRequestSender {\n    private _transformer: InstrumentResponseTransformer;\n\n    constructor(\n        private _client: any,\n        private _requestSender: RequestSender\n    ) {\n        this._transformer = new InstrumentResponseTransformer();\n    }\n\n    getVaultAccessToken(\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<VaultAccessToken>> {\n        const url = '/internalapi/v1/checkout/payments/vault-access-token';\n\n        return this._requestSender.get(url, { timeout }).then(response => ({\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        }));\n    }\n\n    loadInstruments(\n        requestContext: InstrumentRequestContext,\n        shippingAddress?: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return (shippingAddress) ?\n            this._loadInstrumentsWithAddress(requestContext, shippingAddress) :\n            this._loadInstruments(requestContext);\n    }\n\n    deleteInstrument(\n        requestContext: InstrumentRequestContext,\n        instrumentId: string\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            instrumentId,\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.deleteShopperInstrument(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) =>  errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstruments(\n        requestContext: InstrumentRequestContext\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return new Promise((resolve, reject) => {\n            this._client.loadInstruments(\n                requestContext, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstrumentsWithAddress(\n        requestContext: InstrumentRequestContext,\n        shippingAddress: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            shippingAddress: mapToInternalAddress(shippingAddress),\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.loadInstrumentsWithAddress(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryRequestSender from './shipping-country-request-sender';\n\nexport default class ShippingCountryActionCreator {\n    constructor(\n        private _shippingCountryRequestSender: ShippingCountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<LoadShippingCountriesAction> {\n        return Observable.create((observer: Observer<LoadShippingCountriesAction>) => {\n            observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesRequested));\n\n            this._shippingCountryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ShippingCountryActionType.LoadShippingCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\nimport { CountryResponseBody } from '../geography';\n\nexport default class ShippingCountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/shipping/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport { ShippingInitializeOptions, ShippingRequestOptions } from './shipping-request-options';\nimport { ShippingStrategyActionType, ShippingStrategyDeinitializeAction, ShippingStrategyInitializeAction, ShippingStrategySelectOptionAction, ShippingStrategyUpdateAddressAction } from './shipping-strategy-actions';\nimport { ShippingStrategy } from './strategies';\n\nexport default class ShippingStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<ShippingStrategy>\n    ) {}\n\n    updateAddress(address: Partial<AddressRequestBody>, options?: ShippingRequestOptions): ThunkAction<ShippingStrategyUpdateAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyUpdateAddressAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .updateAddress(address, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId }));\n                });\n        });\n    }\n\n    selectOption(shippingOptionId: string, options?: ShippingRequestOptions): ThunkAction<ShippingStrategySelectOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategySelectOptionAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.SelectOptionRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .selectOption(shippingOptionId, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.SelectOptionSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.SelectOptionFailed, error, { methodId }));\n                });\n        });\n    }\n\n    initialize(options?: ShippingInitializeOptions): ThunkAction<ShippingStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyInitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n            const mergedOptions = { ...options, methodId };\n\n            if (methodId && state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(mergedOptions)\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options?: ShippingRequestOptions): ThunkAction<ShippingStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            if (methodId && !state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize({ ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayAddressBook, AmazonPayOrderReference, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../../shipping-request-options';\nimport { ShippingStrategyActionType } from '../../shipping-strategy-actions';\nimport ShippingStrategy from '../shipping-strategy';\n\nimport AmazonPayShippingInitializeOptions from './amazon-pay-shipping-initialize-options';\n\nexport default class AmazonPayShippingStrategy implements ShippingStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const onReady = () => {\n                    this._createAddressBook(amazonOptions)\n                        .then(resolve)\n                        .catch(reject);\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        const updateAddressRequestBody = {\n            ...this._store.getState().shippingAddress.getShippingAddress(),\n            customFields: address.customFields,\n        } as AddressRequestBody;\n\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(updateAddressRequestBody, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    private _createAddressBook(options: AmazonPayShippingInitializeOptions): Promise<AmazonPayAddressBook> {\n        return new Promise((resolve, reject) => {\n            const { container, onAddressSelect = () => {}, onError = () => {}, onReady = () => {} } = options;\n            const merchantId = this._paymentMethod && this._paymentMethod.config.merchantId;\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay AddressBook widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.AddressBook({\n                design: {\n                    designMode: 'responsive',\n                },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onAddressSelect: orderReference => {\n                    this._synchronizeShippingAddress()\n                        .then(() => onAddressSelect(orderReference))\n                        .catch(onError);\n                },\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onReady: orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                },\n            });\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeShippingAddress(): Promise<InternalCheckoutSelectors> {\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n        const amazon = this._store.getState().remoteCheckout.getCheckout('amazon');\n        const referenceId = amazon ? amazon.referenceId : undefined;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId })\n        )\n            .then(() => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializeShipping(methodId, { referenceId })\n            ))\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.shipping && amazon.shipping.address;\n                const address = state.shippingAddress.getShippingAddress();\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, address || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._consignmentActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            })\n            .then(() => this._store.dispatch(\n                createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId })\n            ))\n            .catch(error => this._store.dispatch(\n                createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId })\n            ));\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n}\n","import { AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingRequestOptions } from '../../shipping-request-options';\nimport ShippingStrategy from '../shipping-strategy';\n\nexport default class DefaultShippingStrategy implements ShippingStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(address, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","export interface MutationObeserverCreator {\n    prototype: MutationObserver;\n    new(callback: MutationCallback): MutationObserver;\n}\n\nexport interface MutationObserverWindow extends Window {\n    MutationObserver: MutationObeserverCreator;\n}\n\nexport class MutationObserverFactory {\n    constructor(\n        private _window: MutationObserverWindow = window as MutationObserverWindow\n    ) {}\n\n    create(callback: MutationCallback): MutationObserver {\n        return new this._window.MutationObserver(callback);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if spam protection is not loaded when trying to\n * complete the required spam protection verification.\n */\nexport default class SpamProtectionNotLoadedError extends StandardError {\n    constructor() {\n        super('Spam protection is not loaded. Please try again.');\n\n        this.name = 'SpamProtectionNotLoadedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam protection\n * challenge (i.e.: they close the reCaptcha window).\n */\nexport default class SpamProtectionChallengeNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam protection challenge. Please try again.');\n\n        this.name = 'SpamProtectionChallengeNotCompletedError';\n        this.type = 'spam_protection_challenge_not_completed';\n    }\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { defer, of, throwError, Observable, Subject } from 'rxjs';\nimport { catchError, delay, retryWhen, switchMap } from 'rxjs/operators';\n\nimport { MutationObserverFactory } from '../common/dom';\nimport { NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\n\nimport { SpamProtectionChallengeNotCompletedError, SpamProtectionFailedError, SpamProtectionNotLoadedError } from './errors';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nexport interface RecaptchaResult {\n    error?: Error;\n    token?: string;\n}\n\nexport default class GoogleRecaptcha {\n    private _event$?: Subject<RecaptchaResult>;\n    private _recaptcha?: ReCaptchaV2.ReCaptcha;\n    private _memoized: (recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => Subject<RecaptchaResult>;\n\n    constructor(\n        private googleRecaptchaScriptLoader: GoogleRecaptchaScriptLoader,\n        private mutationObserverFactory: MutationObserverFactory\n    ) {\n        this._memoized = memoize((recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => {\n            const event$ = new Subject<RecaptchaResult>();\n\n            if (!container) {\n                throw new Error();\n            }\n\n            recaptcha.render(container.id, {\n                sitekey,\n                size: 'invisible',\n                callback: () => {\n                    event$.next({\n                        token: recaptcha.getResponse(),\n                    });\n                    recaptcha.reset();\n                },\n                'error-callback': () => {\n                    event$.next({\n                        error: new SpamProtectionFailedError(),\n                    });\n                },\n            });\n\n            return event$;\n        }, { isEqual: (a, b) => a === b });\n    }\n\n    load(containerId: string, sitekey: string): Promise<void> {\n        return this.googleRecaptchaScriptLoader.load()\n            .then(recaptcha => {\n                this._event$ = this._memoized(recaptcha, sitekey, document.getElementById(containerId));\n\n                this._recaptcha = recaptcha;\n            });\n    }\n\n    execute(): Observable<RecaptchaResult> {\n        const event$ = this._event$;\n        const recaptcha = this._recaptcha;\n\n        if (!event$ || !recaptcha) {\n            throw new NotInitializedError(NotInitializedErrorType.SpamProtectionNotInitialized);\n        }\n\n        const timeout = 7000;\n        const retryInterval = 250;\n        const maxRetries = timeout / retryInterval;\n\n        return defer(() => {\n            const element = document.querySelector('iframe[src*=\"bframe\"]');\n\n            return element ?\n                of(element) :\n                throwError(new SpamProtectionNotLoadedError());\n        })\n            .pipe(\n                retryWhen(errors => errors.pipe(\n                    delay(retryInterval),\n                    switchMap((error, index) =>\n                        index < maxRetries ? of(error) : throwError(error)\n                    )\n                )),\n                switchMap(element => {\n                    this._watchRecaptchaChallengeWindow(event$, element);\n                    recaptcha.execute();\n\n                    return event$;\n                }),\n                catchError(error => of({ error }))\n            );\n    }\n\n    private _watchRecaptchaChallengeWindow(event: Subject<RecaptchaResult>, element: Element) {\n        const iframeContainer = element.parentElement;\n\n        if (!iframeContainer) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        const container = iframeContainer.parentElement;\n\n        if (!container) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        this.mutationObserverFactory.create(() => {\n            // When customer closes the Google ReCaptcha challenge window, throw SpamProtectionNotCompletedError\n            if (container.style.visibility === 'hidden') {\n                event.next({\n                    error: new SpamProtectionChallengeNotCompletedError(),\n                });\n            }\n        }).observe(container, { attributes: true, attributeFilter: ['style'] });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nexport default class GoogleRecaptchaScriptLoader {\n    private _loadPromise?: Promise<ReCaptchaV2.ReCaptcha>;\n\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GoogleRecaptchaWindow = window\n    ) {}\n\n    load(): Promise<ReCaptchaV2.ReCaptcha> {\n        if (!this._loadPromise) {\n            this._loadPromise = this._loadScript();\n        }\n\n        return this._loadPromise;\n    }\n\n    private _loadScript(): Promise<ReCaptchaV2.ReCaptcha> {\n        const callbackName = 'initRecaptcha';\n        const params = [\n            `onload=${callbackName}`,\n            'render=explicit',\n        ].join('&');\n\n        return new Promise((resolve, reject) => {\n            this._window[callbackName] = () => resolve(this._window.grecaptcha);\n\n            this._scriptLoader.loadScript(`//www.google.com/recaptcha/api.js?${params}`)\n                .catch(error => {\n                    this._loadPromise = undefined;\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport interface GoogleRecaptchaWindow extends Window {\n    grecaptcha?: ReCaptchaV2.ReCaptcha;\n    initRecaptcha?(): void;\n}\n","import { memoize } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\n\nconst cloneDeep = memoize(<T>(input: T): T => {\n    if (Array.isArray(input)) {\n        return input.map((value: T[keyof T]) => (\n            cloneDeepSafe(value)\n        )) as any;\n    }\n\n    if (isPlainObject(input)) {\n        return (Object.keys(input) as Array<keyof T>)\n            .reduce((result, key) => ({\n                ...result,\n                [key]: cloneDeepSafe(input[key]),\n            }), {}) as T;\n    }\n\n    return input;\n});\n\n// Use WeakMap as the MapCache, this allows for better garbage collection\n// There's a deprecated `clear` method in the lodash implementation\n// of MapCache, hence the `any`\ncloneDeep.cache = new WeakMap() as any;\n\n/**\n * This is a wrapper function for `cloneDeep`. We need it because `cloneDeep` is\n * a memoized function using an instance of `WeakMap` as its cache. Without this\n * wrapper, the memoized function will throw an error if it is called with a\n * non-object argument.\n */\nconst cloneDeepSafe = <T>(input: T): T => {\n    return typeof input === 'object' && input !== null ?\n        cloneDeep(input) :\n        input;\n};\n\n/**\n * Clone the return value of a function. If the result is the same as previous\n * calls, return the previous clone instead of cloning it again.\n */\nexport default function cloneResult<T extends Func>(fn: T): T {\n    return ((...args: any[]) => cloneDeepSafe(fn(...args))) as T;\n}\n\nexport type Func = (...args: any[]) => any;\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport shallowEqual from 'shallowequal';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\nconst createShallowEqualSelector = createSelectorCreator(\n    defaultMemoize,\n    (a: any, b: any) => shallowEqual(a, b)\n);\n\nexport default withMemoizedCombiner(createShallowEqualSelector);\n","import { createCheckoutStoreErrorSelectorFactory, createCheckoutStoreSelectorFactory, createCheckoutStoreStatusSelectorFactory, CheckoutSelectors, InternalCheckoutSelectors } from '../checkout';\n\nexport type CheckoutSelectorsFactory = (selectors: InternalCheckoutSelectors) => CheckoutSelectors;\n\nexport function createCheckoutSelectorsFactory(): CheckoutSelectorsFactory {\n    const createCheckoutStoreSelector = createCheckoutStoreSelectorFactory();\n    const createCheckoutStoreErrorSelector = createCheckoutStoreErrorSelectorFactory();\n    const createCheckoutStoreStatusSelector = createCheckoutStoreStatusSelectorFactory();\n\n    return (selectors: InternalCheckoutSelectors) => {\n        const data = createCheckoutStoreSelector(selectors);\n        const errors = createCheckoutStoreErrorSelector(selectors);\n        const statuses = createCheckoutStoreStatusSelector(selectors);\n\n        return {\n            data,\n            errors,\n            statuses,\n        };\n    };\n}\n\nexport default function createCheckoutSelectors(selectors: InternalCheckoutSelectors): CheckoutSelectors {\n    return createCheckoutSelectorsFactory()(selectors);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { omit, values } from 'lodash';\n\nimport { Address } from '../address';\nimport { BillingAddress } from '../billing';\nimport { Cart } from '../cart';\nimport { createSelector } from '../common/selector';\nimport { cloneResult as clone } from '../common/utility';\nimport { StoreConfig } from '../config';\nimport { Coupon, GiftCertificate } from '../coupon';\nimport { Customer } from '../customer';\nimport { FormField } from '../form';\nimport { Country } from '../geography';\nimport { Order } from '../order';\nimport { PaymentMethod } from '../payment';\nimport { CardInstrument, PaymentInstrument } from '../payment/instrument';\nimport { Consignment, ShippingOption } from '../shipping';\n\nimport Checkout from './checkout';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type Instrument = CardInstrument;\n\n/**\n * Responsible for getting the state of the current checkout.\n *\n * This object has a set of methods that allow you to get a specific piece of\n * checkout information, such as shipping and billing details.\n */\nexport default interface CheckoutStoreSelector {\n    /**\n     * Gets the current checkout.\n     *\n     * @returns The current checkout if it is loaded, otherwise undefined.\n     */\n    getCheckout(): Checkout | undefined;\n\n    /**\n     * Gets the current order.\n     *\n     * @returns The current order if it is loaded, otherwise undefined.\n     */\n    getOrder(): Order | undefined;\n\n    /**\n     * Gets the checkout configuration of a store.\n     *\n     * @returns The configuration object if it is loaded, otherwise undefined.\n     */\n    getConfig(): StoreConfig | undefined;\n\n    /**\n     * Gets the shipping address of the current checkout.\n     *\n     * If the address is partially complete, it may not have shipping options\n     * associated with it.\n     *\n     * @returns The shipping address object if it is loaded, otherwise\n     * undefined.\n     */\n    getShippingAddress(): Address | undefined;\n\n    /**\n     * Gets a list of shipping options available for the shipping address.\n     *\n     * If there is no shipping address assigned to the current checkout, the\n     * list of shipping options will be empty.\n     *\n     * @returns The list of shipping options if any, otherwise undefined.\n     */\n    getShippingOptions(): ShippingOption[] | undefined;\n\n    /**\n     * Gets a list of consignments.\n     *\n     * If there are no consignments created for to the current checkout, the\n     * list will be empty.\n     *\n     * @returns The list of consignments if any, otherwise undefined.\n     */\n    getConsignments(): Consignment[] | undefined;\n\n    /**\n     * Gets the selected shipping option for the current checkout.\n     *\n     * @returns The shipping option object if there is a selected option,\n     * otherwise undefined.\n     */\n    getSelectedShippingOption(): ShippingOption | undefined;\n\n    /**\n     * Gets a list of countries available for shipping.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getShippingCountries(): Country[] | undefined;\n\n    /**\n     * Gets the billing address of an order.\n     *\n     * @returns The billing address object if it is loaded, otherwise undefined.\n     */\n    getBillingAddress(): BillingAddress | undefined;\n\n    /**\n     * Gets a list of countries available for billing.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getBillingCountries(): Country[] | undefined;\n\n    /**\n     * Gets a list of payment methods available for checkout.\n     *\n     * @returns The list of payment methods if it is loaded, otherwise undefined.\n     */\n    getPaymentMethods(): PaymentMethod[] | undefined;\n\n    /**\n     * Gets a payment method by an id.\n     *\n     * The method returns undefined if unable to find a payment method with the\n     * specified id, either because it is not available for the customer, or it\n     * is not loaded.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns The payment method object if loaded and available, otherwise,\n     * undefined.\n     */\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n\n    /**\n     * Gets the payment method that is selected for checkout.\n     *\n     * @returns The payment method object if there is a selected method;\n     * undefined if otherwise.\n     */\n    getSelectedPaymentMethod(): PaymentMethod | undefined;\n\n    /**\n     * Gets the current cart.\n     *\n     * @returns The current cart object if it is loaded, otherwise undefined.\n     */\n    getCart(): Cart | undefined;\n\n    /**\n     * Gets a list of coupons that are applied to the current checkout.\n     *\n     * @returns The list of applied coupons if there is any, otherwise undefined.\n     */\n    getCoupons(): Coupon[] | undefined;\n\n    /**\n     * Gets a list of gift certificates that are applied to the current checkout.\n     *\n     * @returns The list of applied gift certificates if there is any, otherwise undefined.\n     */\n    getGiftCertificates(): GiftCertificate[] | undefined;\n\n    /**\n     * Gets the current customer.\n     *\n     * @returns The current customer object if it is loaded, otherwise\n     * undefined.\n     */\n    getCustomer(): Customer | undefined;\n\n    /**\n     * Checks if payment data is required or not.\n     *\n     * If payment data is required, customers should be prompted to enter their\n     * payment details.\n     *\n     * ```js\n     * if (state.checkout.isPaymentDataRequired()) {\n     *     // Render payment form\n     * } else {\n     *     // Render \"Payment is not required for this order\" message\n     * }\n     * ```\n     *\n     * @param useStoreCredit - If true, check whether payment data is required\n     * with store credit applied; otherwise, check without store credit.\n     * @returns True if payment data is required, otherwise false.\n     */\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n\n    /**\n     * Checks if payment data is submitted or not.\n     *\n     * If payment data is already submitted using a payment method, customers\n     * should not be prompted to enter their payment details again.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns True if payment data is submitted, otherwise false.\n     */\n    isPaymentDataSubmitted(methodId: string, gatewayId?: string): boolean;\n\n    /**\n     * Gets a list of payment instruments associated with the current customer.\n     *\n     * @returns The list of payment instruments if it is loaded, otherwise undefined.\n     */\n    getInstruments(): Instrument[] | undefined;\n    getInstruments(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their billing address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of billing address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getBillingAddressFields(countryCode: string): FormField[];\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their shipping address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of shipping address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getShippingAddressFields(countryCode: string): FormField[];\n}\n\nexport type CheckoutStoreSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreSelector;\n\nexport function createCheckoutStoreSelectorFactory(): CheckoutStoreSelectorFactory {\n    const getCheckout = createSelector(\n        ({ checkout }: InternalCheckoutSelectors) => checkout.getCheckout,\n        getCheckout => clone(getCheckout)\n    );\n\n    const getOrder = createSelector(\n        ({ order }: InternalCheckoutSelectors) => order.getOrder,\n        getOrder => clone(getOrder)\n    );\n\n    const getConfig = createSelector(\n        ({ config }: InternalCheckoutSelectors) => config.getStoreConfig,\n        getStoreConfig => clone(getStoreConfig)\n    );\n\n    const getShippingAddress = createSelector(\n        ({ shippingAddress }: InternalCheckoutSelectors) => shippingAddress.getShippingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getShippingAddress, getContextConfig) => clone(() => {\n            const shippingAddress = getShippingAddress();\n            const context = getContextConfig();\n\n            if (!shippingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return;\n                }\n\n                return {\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return shippingAddress;\n        })\n    );\n\n    const getShippingOptions = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (consignments && consignments.length) {\n                return consignments[0].availableShippingOptions;\n            }\n        })\n    );\n\n    const getConsignments = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(getConsignments)\n    );\n\n    const getSelectedShippingOption = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return consignments[0].selectedShippingOption;\n        })\n    );\n\n    const getShippingCountries = createSelector(\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        getShippingCountries => clone(getShippingCountries)\n    );\n\n    const getBillingAddress = createSelector(\n        ({ billingAddress }: InternalCheckoutSelectors) => billingAddress.getBillingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getBillingAddress, getContextConfig) => clone(() => {\n            const billingAddress = getBillingAddress();\n            const context = getContextConfig();\n            const isEmptyBillingAddress = !billingAddress ||\n                values(omit(billingAddress, 'email', 'id')).every(val => !val || !val.length);\n\n            if (isEmptyBillingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return billingAddress;\n                }\n\n                return {\n                    id: billingAddress ? billingAddress.id : '',\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    email: billingAddress ? billingAddress.email : '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return billingAddress;\n        })\n    );\n\n    const getBillingCountries = createSelector(\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        getCountries => clone(getCountries)\n    );\n\n    const getPaymentMethods = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethods,\n        getPaymentMethods => clone(getPaymentMethods)\n    );\n\n    const getPaymentMethod = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        getPaymentMethod => clone(getPaymentMethod)\n    );\n\n    const getSelectedPaymentMethod = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.getPaymentId,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (getPaymentId, getPaymentMethod) => clone(() => {\n            const payment = getPaymentId();\n\n            return payment && getPaymentMethod(payment.providerId, payment.gatewayId);\n        })\n    );\n\n    const getCart = createSelector(\n        ({ cart }: InternalCheckoutSelectors) => cart.getCart,\n        getCart => clone(getCart)\n    );\n\n    const getCoupons = createSelector(\n        ({ coupons }: InternalCheckoutSelectors) => coupons.getCoupons,\n        getCoupons => clone(getCoupons)\n    );\n\n    const getGiftCertificates = createSelector(\n        ({ giftCertificates }: InternalCheckoutSelectors) => giftCertificates.getGiftCertificates,\n        getGiftCertificates => clone(getGiftCertificates)\n    );\n\n    const getCustomer = createSelector(\n        ({ customer }: InternalCheckoutSelectors) => customer.getCustomer,\n        getCustomer => clone(getCustomer)\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataRequired,\n        isPaymentDataRequired => clone(isPaymentDataRequired)\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataSubmitted,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (isPaymentDataSubmitted, getPaymentMethod) => clone((methodId: string, gatewayId?: string) => {\n            return isPaymentDataSubmitted(getPaymentMethod(methodId, gatewayId));\n        })\n    );\n\n    const getInstruments = createSelector(\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstruments,\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstrumentsByPaymentMethod,\n        (getInstruments, getInstrumentsByPaymentMethod) => {\n            function getInstrumentsSelector(): Instrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod?: PaymentMethod): PaymentInstrument[] | undefined {\n                return paymentMethod ? getInstrumentsByPaymentMethod(paymentMethod) : getInstruments();\n            }\n\n            return clone(getInstrumentsSelector);\n        }\n    );\n\n    const getBillingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getBillingAddressFields,\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        (getBillingAddressFields, getCountries) => clone((countryCode: string) => {\n            return getBillingAddressFields(getCountries(), countryCode);\n        })\n    );\n\n    const getShippingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getShippingAddressFields,\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        (getShippingAddressFields, getShippingCountries) => clone((countryCode: string) => {\n            return getShippingAddressFields(getShippingCountries(), countryCode);\n        })\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreSelector => {\n        return {\n            getCheckout: getCheckout(state),\n            getOrder: getOrder(state),\n            getConfig: getConfig(state),\n            getShippingAddress: getShippingAddress(state),\n            getShippingOptions: getShippingOptions(state),\n            getConsignments: getConsignments(state),\n            getSelectedShippingOption: getSelectedShippingOption(state),\n            getShippingCountries: getShippingCountries(state),\n            getBillingAddress: getBillingAddress(state),\n            getBillingCountries: getBillingCountries(state),\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getSelectedPaymentMethod: getSelectedPaymentMethod(state),\n            getCart: getCart(state),\n            getCoupons: getCoupons(state),\n            getGiftCertificates: getGiftCertificates(state),\n            getCustomer: getCustomer(state),\n            isPaymentDataRequired: isPaymentDataRequired(state),\n            isPaymentDataSubmitted: isPaymentDataSubmitted(state),\n            getInstruments: getInstruments(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n            getShippingAddressFields: getShippingAddressFields(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for getting the error of any asynchronous checkout action, if\n * there is any.\n *\n * This object has a set of getters that would return an error if an action is\n * not executed successfully. For example, if you are unable to submit an order,\n * you can use this object to retrieve the reason for the failure.\n */\nexport default interface CheckoutStoreErrorSelector {\n    getError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current checkout.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update the current checkout.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to submit the current order.\n     *\n     * @returns The error object if unable to submit, otherwise undefined.\n     */\n    getSubmitOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to finalize the current order.\n     *\n     * @returns The error object if unable to finalize, otherwise undefined.\n     */\n    getFinalizeOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current order.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current cart.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCartError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load billing countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadBillingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load payment methods.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to load.\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to initialize.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializePaymentError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign in.\n     *\n     * @returns The error object if unable to sign in, otherwise undefined.\n     */\n    getSignInError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign out.\n     *\n     * @returns The error object if unable to sign out, otherwise undefined.\n     */\n    getSignOutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the customer step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeCustomerError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping options.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingOptionsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to select a shipping option.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to select, otherwise undefined.\n     */\n    getSelectShippingOptionError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to continue as guest.\n     *\n     * @returns The error object if unable to continue, otherwise undefined.\n     */\n    getContinueAsGuestError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update billing address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateBillingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update shipping address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateShippingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to update a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to create consignments.\n     *\n     * @returns The error object if unable to create, otherwise undefined.\n     */\n    getCreateConsignmentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the shipping step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeShippingError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to apply store credit.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyStoreCreditError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a coupon code.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a coupon code.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a gift certificate.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a gift certificate.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to load payment instruments.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadInstrumentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a payment instrument.\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteInstrumentError(instrumentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the checkout configuration of a store.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadConfigError(): Error | undefined;\n}\n\nexport type CheckoutStoreErrorSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreErrorSelector;\n\nexport function createCheckoutStoreErrorSelectorFactory(): CheckoutStoreErrorSelectorFactory {\n    const getError = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreErrorSelector, 'getError'>) => selector,\n        selector => () => {\n            for (const key of Object.keys(selector) as Array<keyof Omit<CheckoutStoreErrorSelector, 'getError'>>) {\n                const error = selector[key]();\n\n                if (error) {\n                    return error;\n                }\n            }\n        }\n    );\n\n    const getSelectShippingOptionError = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.getSelectOptionError,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getUpdateShippingOptionError,\n        (getSelectOptionError, getUpdateShippingOptionError) => (consignmentId?: string) => {\n            return (\n                getSelectOptionError() ||\n                getUpdateShippingOptionError(consignmentId)\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreErrorSelector => {\n        const selector = {\n            getLoadCheckoutError: state.checkout.getLoadError,\n            getUpdateCheckoutError: state.checkout.getUpdateError,\n            getSubmitOrderError: state.paymentStrategies.getExecuteError,\n            getFinalizeOrderError: state.paymentStrategies.getFinalizeError,\n            getLoadOrderError: state.order.getLoadError,\n            getLoadCartError: state.cart.getLoadError,\n            getLoadBillingCountriesError: state.countries.getLoadError,\n            getLoadShippingCountriesError: state.shippingCountries.getLoadError,\n            getLoadPaymentMethodsError: state.paymentMethods.getLoadError,\n            getLoadPaymentMethodError: state.paymentMethods.getLoadMethodError,\n            getInitializePaymentError: state.paymentStrategies.getInitializeError,\n            getSignInError: state.customerStrategies.getSignInError,\n            getSignOutError: state.customerStrategies.getSignOutError,\n            getInitializeCustomerError: state.customerStrategies.getInitializeError,\n            getLoadShippingOptionsError: state.consignments.getLoadShippingOptionsError,\n            getSelectShippingOptionError: getSelectShippingOptionError(state),\n            getContinueAsGuestError: state.billingAddress.getContinueAsGuestError,\n            getUpdateBillingAddressError: state.billingAddress.getUpdateError,\n            getUpdateShippingAddressError: state.shippingStrategies.getUpdateAddressError,\n            getDeleteConsignmentError: state.consignments.getDeleteError,\n            getUpdateConsignmentError: state.consignments.getUpdateError,\n            getCreateConsignmentsError: state.consignments.getCreateError,\n            getInitializeShippingError: state.shippingStrategies.getInitializeError,\n            getApplyStoreCreditError: state.storeCredit.getApplyError,\n            getApplyCouponError: state.coupons.getApplyError,\n            getRemoveCouponError: state.coupons.getRemoveError,\n            getApplyGiftCertificateError: state.giftCertificates.getApplyError,\n            getRemoveGiftCertificateError: state.giftCertificates.getRemoveError,\n            getLoadInstrumentsError: state.instruments.getLoadError,\n            getDeleteInstrumentError: state.instruments.getDeleteError,\n            getLoadConfigError: state.config.getLoadError,\n        };\n\n        return {\n            getError: getError(selector),\n            ...selector,\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for checking the statuses of various asynchronous actions related\n * to checkout.\n *\n * This object has a set of getters that return true if an action is in\n * progress. For example, you can check whether a customer is submitting an\n * order and waiting for the request to complete.\n */\nexport default interface CheckoutStoreStatusSelector {\n    /**\n     * Checks whether any checkout action is pending.\n     *\n     * @returns True if there is a pending action, otherwise false.\n     */\n    isPending(): boolean;\n\n    /**\n     * Checks whether the current checkout is loading.\n     *\n     * @returns True if the current checkout is loading, otherwise false.\n     */\n    isLoadingCheckout(): boolean;\n\n    /**\n     * Checks whether the current checkout is being updated.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isUpdatingCheckout(): boolean;\n\n    /**\n     * Checks whether spam check is executing.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isExecutingSpamCheck(): boolean;\n\n    /**\n     * Checks whether the current order is submitting.\n     *\n     * @returns True if the current order is submitting, otherwise false.\n     */\n    isSubmittingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is finalizing.\n     *\n     * @returns True if the current order is finalizing, otherwise false.\n     */\n    isFinalizingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is loading.\n     *\n     * @returns True if the current order is loading, otherwise false.\n     */\n    isLoadingOrder(): boolean;\n\n    /**\n     * Checks whether the current cart is loading.\n     *\n     * @returns True if the current cart is loading, otherwise false.\n     */\n    isLoadingCart(): boolean;\n\n    /**\n     * Checks whether billing countries are loading.\n     *\n     * @returns True if billing countries are loading, otherwise false.\n     */\n    isLoadingBillingCountries(): boolean;\n\n    /**\n     * Checks whether shipping countries are loading.\n     *\n     * @returns True if shipping countries are loading, otherwise false.\n     */\n    isLoadingShippingCountries(): boolean;\n\n    /**\n     * Checks whether payment methods are loading.\n     *\n     * @returns True if payment methods are loading, otherwise false.\n     */\n    isLoadingPaymentMethods(): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is loading.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is loading.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is loading, otherwise false.\n     */\n    isLoadingPaymentMethod(methodId?: string): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is initializing.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is initializing.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is initializing, otherwise false.\n     */\n    isInitializingPayment(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing in.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing in using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing in the\n     * current customer.\n     * @returns True if the customer is signing in, otherwise false.\n     */\n    isSigningIn(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing out.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing out using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing out the\n     * current customer.\n     * @returns True if the customer is signing out, otherwise false.\n     */\n    isSigningOut(methodId?: string): boolean;\n\n    /**\n     * Checks whether the customer step is initializing.\n     *\n     * If an ID is provided, the method also checks whether the customer step is\n     * initializing using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for initializing the\n     * customer step of checkout.\n     * @returns True if the customer step is initializing, otherwise false.\n     */\n    isInitializingCustomer(methodId?: string): boolean;\n\n    /**\n     * Checks whether shipping options are loading.\n     *\n     * @returns True if shipping options are loading, otherwise false.\n     */\n    isLoadingShippingOptions(): boolean;\n\n    /**\n     * Checks whether a shipping option is being selected.\n     *\n     * A consignment ID should be provided when checking if a shipping option\n     * is being selected for a specific consignment, otherwise it will check\n     * for all consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if selecting a shipping option, otherwise false.\n     */\n    isSelectingShippingOption(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether the billing address is being updated.\n     *\n     * @returns True if updating their billing address, otherwise false.\n     */\n    isUpdatingBillingAddress(): boolean;\n\n    /**\n     * Checks whether the shopper is continuing out as a guest.\n     *\n     * @returns True if continuing as guest, otherwise false.\n     */\n    isContinuingAsGuest(): boolean;\n\n    /**\n     * Checks the shipping address is being updated.\n     *\n     * @returns True if updating their shipping address, otherwise false.\n     */\n    isUpdatingShippingAddress(): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if updating consignment(s), otherwise false.\n     */\n    isUpdatingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being deleted.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if deleting consignment(s), otherwise false.\n     */\n    isDeletingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @returns True if creating consignments, otherwise false.\n     */\n    isCreatingConsignments(): boolean;\n\n    /**\n     * Checks whether the shipping step of a checkout process is initializing.\n     *\n     * If an identifier is provided, the method also checks whether the shipping\n     * step is initializing using a specific shipping method with the same\n     * identifier.\n     *\n     * @param methodId - The identifer of the initialization method to check.\n     * @returns True if the shipping step is initializing, otherwise false.\n     */\n    isInitializingShipping(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is applying a coupon code.\n     *\n     * @returns True if applying a coupon code, otherwise false.\n     */\n    isApplyingCoupon(): boolean;\n\n    /**\n     * Checks whether the current customer is applying store credit.\n     *\n     * @returns True if applying store credit, otherwise false.\n     */\n    isApplyingStoreCredit(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a coupon code.\n     *\n     * @returns True if removing a coupon code, otherwise false.\n     */\n    isRemovingCoupon(): boolean;\n\n    /**\n     * Checks whether the current customer is applying a gift certificate.\n     *\n     * @returns True if applying a gift certificate, otherwise false.\n     */\n    isApplyingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a gift certificate.\n     *\n     * @returns True if removing a gift certificate, otherwise false.\n     */\n    isRemovingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer's payment instruments are loading.\n     *\n     * @returns True if payment instruments are loading, otherwise false.\n     */\n    isLoadingInstruments(): boolean;\n\n    /**\n     * Checks whether the current customer is deleting a payment instrument.\n     *\n     * @returns True if deleting a payment instrument, otherwise false.\n     */\n    isDeletingInstrument(instrumentId?: string): boolean;\n\n    /**\n     * Checks whether the checkout configuration of a store is loading.\n     *\n     * @returns True if the configuration is loading, otherwise false.\n     */\n    isLoadingConfig(): boolean;\n\n    /**\n     * Checks whether the customer step of a checkout is in a pending state.\n     *\n     * The customer step is considered to be pending if it is in the process of\n     * initializing, signing in, signing out, and/or interacting with a customer\n     * widget.\n     *\n     * @returns True if the customer step is pending, otherwise false.\n     */\n    isCustomerStepPending(): boolean;\n\n    /**\n     * Checks whether the payment step of a checkout is in a pending state.\n     *\n     * The payment step is considered to be pending if it is in the process of\n     * initializing, submitting an order, finalizing an order, and/or\n     * interacting with a payment widget.\n     *\n     * @returns True if the payment step is pending, otherwise false.\n     */\n    isPaymentStepPending(): boolean;\n}\n\nexport type CheckoutStoreStatusSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreStatusSelector;\n\nexport function createCheckoutStoreStatusSelectorFactory(): CheckoutStoreStatusSelectorFactory {\n    const isPending = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreStatusSelector, 'isPending'>) => selector,\n        selector => () => {\n            return (Object.keys(selector) as Array<keyof Omit<CheckoutStoreStatusSelector, 'isPending'>>)\n                .some(key => selector[key]());\n        }\n    );\n\n    const isSelectingShippingOption = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isSelectingOption,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.isUpdatingShippingOption,\n        (isSelectingOption, isUpdatingShippingOption) => (consignmentId?: string) => {\n            return (\n                isSelectingOption() ||\n                isUpdatingShippingOption(consignmentId)\n            );\n        }\n    );\n\n    const isCustomerStepPending = createSelector(\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isInitializing,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningIn,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningOut,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isWidgetInteracting,\n        (isInitializing, isSigningIn, isSigningOut, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isSigningIn(methodId) ||\n                isSigningOut(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isPaymentStepPending = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isInitializing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isFinalizing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isWidgetInteracting,\n        (isInitializing, isExecuting, isFinalizing, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isExecuting(methodId) ||\n                isFinalizing(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isSubmittingOrder = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ checkout }: InternalCheckoutSelectors) => checkout.isExecutingSpamCheck, // Remove this when CheckoutService#initializeSpamProtection is deprecated\n        (isExecuting, isExecutingSpamCheck) => (methodId?: string) => {\n            return (\n                isExecuting(methodId) ||\n                isExecutingSpamCheck()\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreStatusSelector => {\n        const selector = {\n            isLoadingCheckout: state.checkout.isLoading,\n            isUpdatingCheckout: state.checkout.isUpdating,\n            isExecutingSpamCheck: state.checkout.isExecutingSpamCheck,\n            isSubmittingOrder: isSubmittingOrder(state),\n            isFinalizingOrder: state.paymentStrategies.isFinalizing,\n            isLoadingOrder: state.order.isLoading,\n            isLoadingCart: state.cart.isLoading,\n            isLoadingBillingCountries: state.countries.isLoading,\n            isLoadingShippingCountries: state.shippingCountries.isLoading,\n            isLoadingPaymentMethods: state.paymentMethods.isLoading,\n            isLoadingPaymentMethod: state.paymentMethods.isLoadingMethod,\n            isInitializingPayment: state.paymentStrategies.isInitializing,\n            isSigningIn: state.customerStrategies.isSigningIn,\n            isSigningOut: state.customerStrategies.isSigningOut,\n            isInitializingCustomer: state.customerStrategies.isInitializing,\n            isLoadingShippingOptions: state.consignments.isLoadingShippingOptions,\n            isSelectingShippingOption: isSelectingShippingOption(state),\n            isUpdatingBillingAddress: state.billingAddress.isUpdating,\n            isContinuingAsGuest: state.billingAddress.isContinuingAsGuest,\n            isUpdatingShippingAddress: state.shippingStrategies.isUpdatingAddress,\n            isUpdatingConsignment: state.consignments.isUpdating,\n            isDeletingConsignment: state.consignments.isDeleting,\n            isCreatingConsignments: state.consignments.isCreating,\n            isInitializingShipping: state.shippingStrategies.isInitializing,\n            isApplyingStoreCredit: state.storeCredit.isApplying,\n            isApplyingCoupon: state.coupons.isApplying,\n            isRemovingCoupon: state.coupons.isRemoving,\n            isApplyingGiftCertificate: state.giftCertificates.isApplying,\n            isRemovingGiftCertificate: state.giftCertificates.isRemoving,\n            isLoadingInstruments: state.instruments.isLoading,\n            isDeletingInstrument: state.instruments.isDeleting,\n            isLoadingConfig: state.config.isLoading,\n            isCustomerStepPending: isCustomerStepPending(state),\n            isPaymentStepPending: isPaymentStepPending(state),\n        };\n\n        return {\n            isPending: isPending(selector),\n            ...selector,\n        };\n    });\n}\n","import { toSingleLine } from '../utility';\n\nexport default class ErrorMessageTransformer<TError extends Error = Error> {\n    constructor(\n        private _messageCustomizer: (type: TError) => string\n    ) {}\n\n    transform(error: TError): TError {\n        error.message = toSingleLine(this._messageCustomizer(error));\n\n        return error;\n    }\n}\n","export default function toSingleLine(input?: string) {\n    if (!input) {\n        return '';\n    }\n\n    return input.split(/(?:\\r\\n|\\n|\\r)/)\n        .map(line => line.replace(/^\\s+/gm, ''))\n        .join(' ')\n        .trim();\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { BillingAddressActionCreator, BillingAddressRequestBody } from '../billing';\nimport { createDataStoreProjection, DataStoreProjection } from '../common/data-store';\nimport { ErrorActionCreator, ErrorMessageTransformer } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\nimport { bindDecorator as bind } from '../common/utility';\nimport { ConfigActionCreator } from '../config';\nimport { CouponActionCreator, GiftCertificateActionCreator } from '../coupon';\nimport { CustomerCredentials, CustomerInitializeOptions, CustomerRequestOptions, CustomerStrategyActionCreator, GuestCredentials } from '../customer';\nimport { CountryActionCreator } from '../geography';\nimport { OrderActionCreator, OrderRequestBody } from '../order';\nimport { PaymentInitializeOptions, PaymentMethodActionCreator, PaymentRequestOptions, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator } from '../payment/instrument';\nimport { ConsignmentsRequestBody, ConsignmentActionCreator, ConsignmentAssignmentRequestBody, ConsignmentUpdateRequestBody, ShippingCountryActionCreator, ShippingInitializeOptions, ShippingRequestOptions, ShippingStrategyActionCreator } from '../shipping';\nimport { SpamProtectionActionCreator, SpamProtectionOptions } from '../spam-protection';\nimport { StoreCreditActionCreator } from '../store-credit';\n\nimport { CheckoutRequestBody } from './checkout';\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutParams from './checkout-params';\nimport CheckoutSelectors from './checkout-selectors';\nimport CheckoutStore from './checkout-store';\nimport { createCheckoutSelectorsFactory, CheckoutSelectorsFactory } from './create-checkout-selectors';\nimport createCheckoutServiceErrorTransformer from './create-checkout-service-error-transformer';\n\n/**\n * Responsible for completing the checkout process for the current customer.\n *\n * This object can be used to collect all information that is required for\n * checkout, such as shipping and billing information. It can also be used to\n * retrieve the current checkout state and subscribe to its changes.\n */\n@bind\nexport default class CheckoutService {\n    private _storeProjection: DataStoreProjection<CheckoutSelectors>;\n    private _errorTransformer: ErrorMessageTransformer;\n    private _selectorsFactory: CheckoutSelectorsFactory;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _configActionCreator: ConfigActionCreator,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _countryActionCreator: CountryActionCreator,\n        private _couponActionCreator: CouponActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _errorActionCreator: ErrorActionCreator,\n        private _giftCertificateActionCreator: GiftCertificateActionCreator,\n        private _instrumentActionCreator: InstrumentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _shippingCountryActionCreator: ShippingCountryActionCreator,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator\n    ) {\n        this._errorTransformer = createCheckoutServiceErrorTransformer();\n        this._selectorsFactory = createCheckoutSelectorsFactory();\n        this._storeProjection = createDataStoreProjection(this._store, this._selectorsFactory);\n    }\n\n    /**\n     * Returns a snapshot of the current checkout state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * checkout state. You can query the state by calling any of its getter\n     * methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.data.getOrder());\n     * console.log(state.errors.getSubmitOrderError());\n     * console.log(state.statuses.isSubmittingOrder());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutSelectors {\n        return this._storeProjection.getState();\n    }\n\n    /**\n     * Notifies all subscribers with the current state.\n     *\n     * When this method gets called, the subscribers get called regardless if\n     * they have any filters applied.\n     */\n    notifyState(): void {\n        this._storeProjection.notifyState();\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the checkout state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.data.getCart();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutSelectors) => void,\n        ...filters: Array<(state: CheckoutSelectors) => any>\n    ): () => void {\n        return this._storeProjection.subscribe(subscriber, ...filters);\n    }\n\n    /**\n     * Loads the current checkout.\n     *\n     * This method can only be called if there is an active checkout. Also, it\n     * can only retrieve data that belongs to the current customer. When it is\n     * successfully executed, you can retrieve the data by calling\n     * `CheckoutStoreSelector#getCheckout`.\n     *\n     * ```js\n     * const state = await service.loadCheckout('0cfd6c06-57c3-4e29-8d7a-de55cc8a9052');\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param id - The identifier of the checkout to load, or the default checkout if not provided.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    loadCheckout(id?: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors> {\n        return this._dispatch(id ?\n            this._checkoutActionCreator.loadCheckout(id, options) :\n            this._checkoutActionCreator.loadDefaultCheckout(options)\n        );\n    }\n\n    /**\n     * Updates specific properties of the current checkout.\n     *\n     * ```js\n     * const state = await service.updateCheckout(checkout);\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param payload - The checkout properties to be updated.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    updateCheckout(payload: CheckoutRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._checkoutActionCreator.updateCheckout(payload, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads an order by an id.\n     *\n     * The method can only retrieve an order if the order belongs to the current\n     * customer. If it is successfully executed, the data can be retrieved by\n     * calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.loadOrder(123);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param orderId - The identifier of the order to load.\n     * @param options - Options for loading the order.\n     * @returns A promise that resolves to the current state.\n     */\n    loadOrder(orderId: number, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const loadCheckoutAction = this._orderActionCreator.loadOrder(orderId, options);\n        const loadConfigAction = this._configActionCreator.loadConfig(options);\n\n        return Promise.all([\n            this._dispatch(loadCheckoutAction),\n            this._dispatch(loadConfigAction, { queueId: 'config' }),\n        ])\n            .then(() => this.getState());\n    }\n\n    /**\n     * Submits an order, thereby completing a checkout process.\n     *\n     * Before you can submit an order, you must initialize the payment method\n     * chosen by the customer by calling `CheckoutService#initializePayment`.\n     *\n     * ```js\n     * await service.initializePayment({ methodId: 'braintree' });\n     * await service.submitOrder({\n     *     payment: {\n     *         methodId: 'braintree',\n     *         paymentData: {\n     *             ccExpiry: { month: 10, year: 20 },\n     *             ccName: 'BigCommerce',\n     *             ccNumber: '4111111111111111',\n     *             ccCvv: 123,\n     *         },\n     *     },\n     * });\n     * ```\n     *\n     * You are not required to include `paymentData` if the order does not\n     * require additional payment details. For example, the customer has already\n     * entered their payment details on the cart page using one of the hosted\n     * payment methods, such as PayPal. Or the customer has applied a gift\n     * certificate that exceeds the grand total amount.\n     *\n     * If the order is submitted successfully, you can retrieve the newly\n     * created order by calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.submitOrder(payload);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param payload - The request payload to submit for the current order.\n     * @param options - Options for submitting the current order.\n     * @returns A promise that resolves to the current state.\n     */\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.execute(payload, options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Finalizes the submission process for an order.\n     *\n     * This method is only required for certain hosted payment methods that\n     * require a customer to enter their credit card details on their website.\n     * You need to call this method once the customer has redirected back to\n     * checkout in order to complete the checkout process.\n     *\n     * If the method is called before order finalization is required or for a\n     * payment method that does not require order finalization, an error will be\n     * thrown. Conversely, if the method is called successfully, you should\n     * immediately redirect the customer to the order confirmation page.\n     *\n     * ```js\n     * try {\n     *     await service.finalizeOrderIfNeeded();\n     *\n     *     window.location.assign('/order-confirmation');\n     * } catch (error) {\n     *     if (error.type !== 'order_finalization_not_required') {\n     *         throw error;\n     *     }\n     * }\n     * ```\n     *\n     * @param options - Options for finalizing the current order.\n     * @returns A promise that resolves to the current state.\n     * @throws `OrderFinalizationNotRequiredError` error if order finalization\n     * is not required for the current order at the time of execution.\n     */\n    finalizeOrderIfNeeded(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.finalize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of payment methods available for checkout.\n     *\n     * If a customer enters their payment details before navigating to the\n     * checkout page (i.e.: using PayPal checkout button on the cart page), only\n     * one payment method will be available for the customer - the selected\n     * payment method. Otherwise, by default, all payment methods configured by\n     * the merchant will be available for the customer.\n     *\n     * Once the method is executed successfully, you can call\n     * `CheckoutStoreSelector#getPaymentMethods` to retrieve the list of payment\n     * methods.\n     *\n     * ```js\n     * const state = service.loadPaymentMethods();\n     *\n     * console.log(state.data.getPaymentMethods());\n     * ```\n     *\n     * @param options - Options for loading the payment methods that are\n     * available to the current customer.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethods(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethods(options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Loads a payment method by an id.\n     *\n     * This method does not work with multi-option payment providers. Due to its\n     * limitation, it is deprecated and will be removed in the future.\n     *\n     * @deprecated\n     * @internal\n     * @param methodId - The identifier for the payment method to load.\n     * @param options - Options for loading the payment method.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethod(methodId: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethod(methodId, options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Initializes the payment step of a checkout process.\n     *\n     * Before a payment method can accept payment details, it must first be\n     * initialized. Some payment methods require you to provide additional\n     * initialization options. For example, Amazon requires a container ID in\n     * order to initialize their payment widget.\n     *\n     * ```js\n     * await service.initializePayment({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'walletWidget',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializePayment(options: PaymentInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * De-initializes the payment step of a checkout process.\n     *\n     * The method should be called once you no longer require a payment method\n     * to be initialized. It can perform any necessary clean-up behind the\n     * scene, i.e.: remove DOM nodes or event handlers that are attached as a\n     * result of payment initialization.\n     *\n     * ```js\n     * await service.deinitializePayment({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializePayment(options: PaymentRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of countries available for billing.\n     *\n     * Once you make a successful request, you will be able to retrieve the list\n     * of countries by calling `CheckoutStoreSelector#getBillingCountries`.\n     *\n     * ```js\n     * const state = await service.loadBillingCountries();\n     *\n     * console.log(state.data.getBillingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available billing countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._countryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'billingCountries' });\n    }\n\n    /**\n     * Loads a list of countries available for shipping.\n     *\n     * The list is determined based on the shipping zones configured by a\n     * merchant. Once you make a successful call, you will be able to retrieve\n     * the list of available shipping countries by calling\n     * `CheckoutStoreSelector#getShippingCountries`.\n     *\n     * ```js\n     * const state = await service.loadShippingCountries();\n     *\n     * console.log(state.data.getShippingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available shipping countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingCountryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'shippingCountries' });\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their billing address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getBillingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadBillingAddressFields();\n     *\n     * console.log(state.data.getBillingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the billing address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadBillingCountries(options);\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their shipping address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getShippingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadShippingAddressFields();\n     *\n     * console.log(state.data.getShippingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the shipping address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadShippingCountries(options);\n    }\n\n    /**\n     * Initializes the sign-in step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, have their own sign-in flow. In\n     * order to support them, this method must be called.\n     *\n     * ```js\n     * await service.initializeCustomer({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'signInButton',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeCustomer(options?: CustomerInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * De-initializes the sign-in step of a checkout process.\n     *\n     * It should be called once you no longer want to prompt customers to sign\n     * in. It can perform any necessary clean-up behind the scene, i.e.: remove\n     * DOM nodes or event handlers that are attached as a result of customer\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeCustomer({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Continues to check out as a guest.\n     *\n     * The customer is required to provide their email address in order to\n     * continue. Once they provide their email address, it will be stored as a\n     * part of their billing address.\n     *\n     * @param credentials - The guest credentials to use.\n     * @param options - Options for continuing as a guest.\n     * @returns A promise that resolves to the current state.\n     */\n    continueAsGuest(credentials: GuestCredentials, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.continueAsGuest(credentials, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Signs into a customer's registered account.\n     *\n     * Once the customer is signed in successfully, the checkout state will be\n     * populated with information associated with the customer, such as their\n     * saved addresses. You can call `CheckoutStoreSelector#getCustomer` to\n     * retrieve the data.\n     *\n     * ```js\n     * const state = await service.signInCustomer({\n     *     email: 'foo@bar.com',\n     *     password: 'password123',\n     * });\n     *\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * @param credentials - The credentials to be used for signing in the customer.\n     * @param options - Options for signing in the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signInCustomer(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signIn(credentials, options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Signs out the current customer if they are previously signed in.\n     *\n     * Once the customer is successfully signed out, the checkout state will be\n     * reset automatically.\n     *\n     * ```js\n     * const state = await service.signOutCustomer();\n     *\n     * // The returned object should not contain information about the previously signed-in customer.\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * @param options - Options for signing out the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signOutCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signOut(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Loads a list of shipping options available for checkout.\n     *\n     * Available shipping options can only be determined once a customer\n     * provides their shipping address. If the method is executed successfully,\n     * `CheckoutStoreSelector#getShippingOptions` can be called to retrieve the\n     * list of shipping options.\n     *\n     * ```js\n     * const state = await service.loadShippingOptions();\n     *\n     * console.log(state.data.getShippingOptions());\n     * ```\n     *\n     * @param options - Options for loading the available shipping options.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingOptions(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.loadShippingOptions(options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the shipping step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, can provide shipping information to\n     * be used for checkout. In order to support them, this method must be\n     * called.\n     *\n     * ```js\n     * await service.initializeShipping({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'addressBook',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeShipping(options?: ShippingInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * De-initializes the shipping step of a checkout process.\n     *\n     * It should be called once you no longer need to collect shipping details.\n     * It can perform any necessary clean-up behind the scene, i.e.: remove DOM\n     * nodes or event handlers that are attached as a result of shipping\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeShipping({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeShipping(options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for the current address.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectShippingOption('address-id', 'shipping-option-id');\n     *\n     * console.log(state.data.getSelectedShippingOption());\n     * ```\n     *\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectShippingOption(shippingOptionId: string, options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.selectOption(shippingOptionId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the shipping address for the current checkout.\n     *\n     * When a customer updates their shipping address for an order, they will\n     * see an updated list of shipping options and the cost for each option,\n     * unless no options are available. If the update is successful, you can\n     * call `CheckoutStoreSelector#getShippingAddress` to retrieve the address.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateShippingAddress(address);\n     *\n     * console.log(state.data.getShippingAddress());\n     * ```\n     *\n     * @param address - The address to be used for shipping.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateShippingAddress(\n        address: Partial<AddressRequestBody>,\n        options?: ShippingRequestOptions<CheckoutParams>\n    ): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Creates consignments given a list.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * When consignments are created, an updated list of shipping options will\n     * become available for each consignment, unless no options are available.\n     * If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve the updated list of\n     * consignments.'\n     *\n     * Beware that if a consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.createConsignments(consignments);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignments - The list of consignments to be created.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.createConsignments(consignments, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Deletes a consignment\n     *\n     * ```js\n     * const state = await service.deleteConsignment('55c96cda6f04c');\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The ID of the consignment to be deleted\n     * @param options - Options for the consignment delete request\n     * @returns A promise that resolves to the current state.\n     */\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.deleteConsignment(consignmentId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates a specific consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#selectShippingOption`.\n     *\n     * When a shipping address for a consignment is updated, an updated list of\n     * shipping options will become available for the consignment, unless no\n     * options are available. If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve updated list of\n     * consignments.\n     *\n     * Beware that if the updated consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateConsignment(consignment);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateConsignment(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that assigns items to be shipped to a specific address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and assigns the provided items. If no consignment matches the address, a new one\n     * will be created.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    assignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.assignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that unassigns items from a specific shipping address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and unassigns the specified items. If the consignment ends up with no line items\n     * after the unassignment, it will be deleted.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    unassignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.unassignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for a given consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectConsignmentShippingOption(consignmentId, optionId);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The identified of the consignment to be updated.\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectConsignmentShippingOption(\n        consignmentId: string,\n        shippingOptionId: string,\n        options?: ShippingRequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateShippingOption({\n            id: consignmentId,\n            shippingOptionId,\n        }, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the billing address for the current checkout.\n     *\n     * A customer must provide their billing address before they can proceed to\n     * pay for their order.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateBillingAddress(address);\n     *\n     * console.log(state.data.getBillingAddress());\n     * ```\n     *\n     * @param address - The address to be used for billing.\n     * @param options - Options for updating the billing address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateBillingAddress(address: Partial<BillingAddressRequestBody>, options: RequestOptions = {}): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies or removes customer's store credit code to the current checkout.\n     *\n     * Once the store credit gets applied, the outstanding balance will be adjusted accordingly.\n     *\n     * ```js\n     * const state = await service.applyStoreCredit(true);\n     *\n     * console.log(state.data.getCheckout().outstandingBalance);\n     * ```\n     *\n     * @param options - Options for applying store credit.\n     * @returns A promise that resolves to the current state.\n     */\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._storeCreditActionCreator.applyStoreCredit(useStoreCredit, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a coupon code to the current checkout.\n     *\n     * Once the coupon code gets applied, the quote for the current checkout will\n     * be adjusted accordingly. The same coupon code cannot be applied more than\n     * once.\n     *\n     * ```js\n     * await service.applyCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to apply to the current checkout.\n     * @param options - Options for applying the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    applyCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.applyCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a coupon code from the current checkout.\n     *\n     * Once the coupon code gets removed, the quote for the current checkout will\n     * be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to remove from the current checkout.\n     * @param options - Options for removing the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    removeCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.removeCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a gift certificate to the current checkout.\n     *\n     * Once the gift certificate gets applied, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.applyGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to apply to the current checkout.\n     * @param options - Options for applying the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    applyGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.applyGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a gift certificate from an order.\n     *\n     * Once the gift certificate gets removed, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to remove from the current checkout.\n     * @param options - Options for removing the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    removeGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.removeGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads a list of payment instruments associated with a customer.\n     *\n     * Once the method has been called successfully, you can retrieve the list\n     * of payment instruments by calling `CheckoutStoreSelector#getInstruments`.\n     * If the customer does not have any payment instruments on record, i.e.:\n     * credit card, you will get an empty list instead.\n     *\n     * ```js\n     * const state = service.loadInstruments();\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    loadInstruments(): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.loadInstruments();\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Deletes a payment instrument by an id.\n     *\n     * Once an instrument gets removed, it can no longer be retrieved using\n     * `CheckoutStoreSelector#getInstruments`.\n     *\n     * ```js\n     * const state = service.deleteInstrument('123');\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns A promise that resolves to the current state.\n     */\n    deleteInstrument(instrumentId: string): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.deleteInstrument(instrumentId);\n\n        return this._dispatch(action)\n            .then(() => this.loadInstruments());\n    }\n\n    /**\n     * Clear errors that have been collected from previous calls.\n     *\n     * ```js\n     * const state = await service.clearError(error);\n     *\n     * console.log(state.errors.getError());\n     * ```\n     *\n     * @param error - Specific error object to clear\n     * @returns A promise that resolves to the current state.\n     */\n    clearError(error: Error): Promise<CheckoutSelectors> {\n        const action = this._errorActionCreator.clearError(error);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the spam protection for order creation.\n     *\n     * Note: Use `CheckoutService#executeSpamCheck` instead.\n     * You do not need to call this method before calling\n     * `CheckoutService#executeSpamCheck`.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails.\n     *\n     * ```js\n     * await service.initializeSpamProtection();\n     * ```\n     *\n     * @param options - Options for initializing spam protection.\n     * @returns A promise that resolves to the current state.\n     * @deprecated - Use CheckoutService#executeSpamCheck instead.\n     */\n    initializeSpamProtection(options: SpamProtectionOptions): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'spamProtection' });\n    }\n\n    /**\n     * Verifies whether the current checkout is created by a human.\n     *\n     * Note: this method will do the initialization, therefore you do not\n     * need to call `CheckoutService#initializeSpamProtection`\n     * before calling this method.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails.\n     *\n     * ```js\n     * await service.executeSpamCheck();\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    executeSpamCheck(): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.initialize();\n\n        return this._dispatch(action, { queueId: 'spamProtection' })\n            .then(() => {\n                const action = this._spamProtectionActionCreator.execute();\n\n                return this._dispatch(action, { queueId: 'spamProtection' });\n            });\n    }\n\n    /**\n     * Dispatches an action through the data store and returns the current state\n     * once the action is dispatched.\n     *\n     * @param action - The action to dispatch.\n     * @returns A promise that resolves to the current state.\n     */\n    private _dispatch(action: Action | Observable<Action> | ThunkAction<Action>, options?: { queueId?: string }): Promise<CheckoutSelectors> {\n        return this._store.dispatch(action, options)\n            .then(() => this.getState())\n            .catch(error => {\n                throw this._errorTransformer.transform(error);\n            });\n    }\n}\n","import { ErrorMessageTransformer } from '../common/error';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\nimport { getEnvironment } from '../common/utility';\n\nexport type CheckoutServiceErrorType = MissingDataError | NotInitializedError;\nexport type CheckoutServiceErrorTransformer = ErrorMessageTransformer<CheckoutServiceErrorType | Error>;\n\nexport default function createCheckoutServiceErrorTransformer(\n    isDevelopment: boolean = getEnvironment() === 'development'\n): CheckoutServiceErrorTransformer {\n    return new ErrorMessageTransformer(error => {\n        if (!isDevelopment || !isCheckoutServiceError(error)) {\n            return error.message;\n        }\n\n        switch (error.subtype || error.type) {\n        case MissingDataErrorType.MissingConsignments:\n            return `\n                ${error.message}\n                The data could be unavailable because no shipping address has been provided.\n                To fix this, create a consignment or update the shipping address before performing\n                the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCart:\n        case MissingDataErrorType.MissingCheckout:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadCheckout\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCheckoutConfig:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you need to make sure \\`CheckoutService\\` is initialized\n                properly by calling \\`CheckoutService#loadCheckout\\` before performing any\n                other actions.\n            `;\n\n        case MissingDataErrorType.MissingOrder:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadOrder\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingOrderId:\n            return `\n                ${error.message}\n                The data could be unavailable because no order has been created yet. You have\n                to first create the order before you can perform the action.\n            `;\n\n        case MissingDataErrorType.MissingPaymentMethod:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server, or\n                configured by the merchant yet. To fix the former issue, you can try calling\n                \\`CheckoutService#loadPaymentMethods\\` before performing the same action again.\n            `;\n\n        case NotInitializedErrorType.CustomerNotInitialized:\n            return `\n                In order to initialize the customer step of checkout, you need to call\n                \\`CheckoutService#initializeCustomer\\`. Afterwards, you should be able to\n                submit customer details.\n            `;\n\n        case NotInitializedErrorType.PaymentNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the payment step of checkout, you need to call\n                \\`CheckoutService#initializePayment\\`. Afterwards, you should be able to\n                submit payment details.\n            `;\n\n        case NotInitializedErrorType.ShippingNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the shipping step of checkout, you need to call\n                \\`CheckoutService#initializeShipping\\`. Afterwards, you should be able to\n                submit shipping details.\n            `;\n\n        default:\n            return error.message;\n        }\n    });\n}\n\nfunction isCheckoutServiceError(error: any): error is CheckoutServiceErrorType {\n    return !!(error.subtype || error.type);\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { createScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { ErrorActionCreator } from '../common/error';\nimport { getDefaultLogger } from '../common/log';\nimport { getEnvironment } from '../common/utility';\nimport { ConfigActionCreator, ConfigRequestSender, ConfigState } from '../config';\nimport { CouponActionCreator, CouponRequestSender, GiftCertificateActionCreator, GiftCertificateRequestSender } from '../coupon';\nimport { createCustomerStrategyRegistry, CustomerRequestSender, CustomerStrategyActionCreator } from '../customer';\nimport { CountryActionCreator, CountryRequestSender } from '../geography';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { createPaymentClient, createPaymentStrategyRegistry, PaymentMethodActionCreator, PaymentMethodRequestSender, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator, InstrumentRequestSender } from '../payment/instrument';\nimport { createShippingStrategyRegistry, ConsignmentActionCreator, ConsignmentRequestSender, ShippingCountryActionCreator, ShippingCountryRequestSender, ShippingStrategyActionCreator } from '../shipping';\nimport { createSpamProtection, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\n\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport CheckoutService from './checkout-service';\nimport CheckoutValidator from './checkout-validator';\nimport createCheckoutStore from './create-checkout-store';\n\n/**\n * Creates an instance of `CheckoutService`.\n *\n * @remarks\n * ```js\n * const service = createCheckoutService();\n *\n * service.subscribe(state => {\n *     console.log(state);\n * });\n *\n * service.loadCheckout();\n * ```\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutService`.\n */\nexport default function createCheckoutService(options?: CheckoutServiceOptions): CheckoutService {\n    if (document.location.protocol !== 'https:') {\n        getDefaultLogger().warn('The BigCommerce Checkout SDK should not be used on a non-HTTPS page');\n    }\n\n    if (getEnvironment() !== 'production') {\n        getDefaultLogger().warn('Note that the development build is not optimized. To create a production build, set process.env.NODE_ENV to `production`.');\n    }\n\n    const config: ConfigState = {\n        meta: {\n            externalSource: options && options.externalSource,\n        },\n        errors: {},\n        statuses: {},\n    };\n    const { locale = '', shouldWarnMutation = true } = options || {};\n    const requestSender = createRequestSender({ host: options && options.host });\n    const store = createCheckoutStore({ config }, { shouldWarnMutation });\n    const paymentClient = createPaymentClient(store);\n    const orderRequestSender = new OrderRequestSender(requestSender);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const spamProtection = createSpamProtection(createScriptLoader());\n    const spamProtectionRequestSender = new SpamProtectionRequestSender(requestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, spamProtectionRequestSender);\n    const orderActionCreator = new OrderActionCreator(\n        orderRequestSender,\n        new CheckoutValidator(checkoutRequestSender)\n    );\n\n    return new CheckoutService(\n        store,\n        new BillingAddressActionCreator(\n            new BillingAddressRequestSender(requestSender),\n            new CustomerRequestSender(requestSender)\n        ),\n        new CheckoutActionCreator(checkoutRequestSender, configActionCreator),\n        configActionCreator,\n        new ConsignmentActionCreator(new ConsignmentRequestSender(requestSender), checkoutRequestSender),\n        new CountryActionCreator(new CountryRequestSender(requestSender, { locale })),\n        new CouponActionCreator(new CouponRequestSender(requestSender)),\n        new CustomerStrategyActionCreator(createCustomerStrategyRegistry(store, requestSender)),\n        new ErrorActionCreator(),\n        new GiftCertificateActionCreator(new GiftCertificateRequestSender(requestSender)),\n        new InstrumentActionCreator(new InstrumentRequestSender(paymentClient, requestSender)),\n        orderActionCreator,\n        new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n        new PaymentStrategyActionCreator(\n            createPaymentStrategyRegistry(store, paymentClient, requestSender, spamProtection, locale),\n            orderActionCreator,\n            spamProtectionActionCreator\n        ),\n        new ShippingCountryActionCreator(new ShippingCountryRequestSender(requestSender, { locale })),\n        new ShippingStrategyActionCreator(createShippingStrategyRegistry(store, requestSender)),\n        spamProtectionActionCreator,\n        new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender))\n    );\n}\n\nexport interface CheckoutServiceOptions {\n    locale?: string;\n    host?: string;\n    shouldWarnMutation?: boolean;\n    externalSource?: string;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { MutationObserverFactory } from '../common/dom';\n\nimport GoogleRecaptcha from './google-recaptcha';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nexport default function createSpamProtection(scriptLoader: ScriptLoader) {\n    return new GoogleRecaptcha(\n        new GoogleRecaptchaScriptLoader(scriptLoader),\n        new MutationObserverFactory()\n    );\n}\n","// tslint:disable-next-line:no-reference\n/// <reference path=\"../payment/bigpay-client.d.ts\" />\nimport { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { CheckoutStore } from '../checkout';\n\nexport default function createPaymentClient(store: CheckoutStore) {\n    const paymentClient = createBigpayClient();\n\n    store.subscribe(\n        state => {\n            const config = state.config.getStoreConfig();\n\n            if (config) {\n                paymentClient.setHost(config.paymentSettings.bigpayBaseUrl);\n            }\n        },\n        state => state.config.getStoreConfig()\n    );\n\n    return paymentClient;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { createBraintreeVisaCheckoutPaymentProcessor, BraintreeScriptLoader, BraintreeSDKCreator, VisaCheckoutScriptLoader } from '../payment/strategies/braintree';\nimport { ChasePayScriptLoader } from '../payment/strategies/chasepay';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport CustomerActionCreator from './customer-action-creator';\nimport CustomerRequestSender from './customer-request-sender';\nimport CustomerStrategyActionCreator from './customer-strategy-action-creator';\nimport { CustomerStrategy } from './strategies';\nimport { AmazonPayCustomerStrategy } from './strategies/amazon';\nimport { BraintreeVisaCheckoutCustomerStrategy } from './strategies/braintree';\nimport { ChasePayCustomerStrategy } from './strategies/chasepay';\nimport { DefaultCustomerStrategy } from './strategies/default';\nimport { GooglePayCustomerStrategy } from './strategies/googlepay';\nimport { MasterpassCustomerStrategy } from './strategies/masterpass';\nimport { SquareCustomerStrategy } from './strategies/square';\n\nexport default function createCustomerStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<CustomerStrategy> {\n    const registry = new Registry<CustomerStrategy>();\n    const scriptLoader = getScriptLoader();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutActionCreator = new CheckoutActionCreator(\n        checkoutRequestSender,\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n    const formPoster = createFormPoster();\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutRequestSender = new RemoteCheckoutRequestSender(requestSender);\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(remoteCheckoutRequestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            remoteCheckoutRequestSender,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('braintreevisacheckout', () =>\n        new BraintreeVisaCheckoutCustomerStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            new CustomerStrategyActionCreator(registry),\n            remoteCheckoutActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('chasepay', () =>\n        new ChasePayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new ChasePayScriptLoader(scriptLoader),\n            requestSender,\n            formPoster\n        )\n    );\n\n    registry.register('squarev2', () =>\n        new SquareCustomerStrategy(\n            store,\n            new RemoteCheckoutActionCreator(remoteCheckoutRequestSender)\n        )\n    );\n\n    registry.register('masterpass', () =>\n        new MasterpassCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('googlepaybraintree', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaystripe', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            ),\n            formPoster\n    )\n);\n\n    registry.register('default', () =>\n        new DefaultCustomerStrategy(\n            store,\n            new CustomerActionCreator(\n                new CustomerRequestSender(requestSender),\n                checkoutActionCreator\n            )\n        )\n    );\n\n    return registry;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader, getStylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore, CheckoutValidator } from '../checkout';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { CustomerRequestSender } from '../customer';\nimport { HostedFormFactory } from '../hosted-form';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { GoogleRecaptcha, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\n\nimport PaymentActionCreator from './payment-action-creator';\nimport PaymentMethodActionCreator from './payment-method-action-creator';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\nimport PaymentStrategyActionCreator from './payment-strategy-action-creator';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { AdyenV2PaymentStrategy, AdyenV2ScriptLoader } from './strategies/adyenv2';\nimport { AffirmPaymentStrategy, AffirmScriptLoader } from './strategies/affirm';\nimport { AfterpayPaymentStrategy, AfterpayScriptLoader } from './strategies/afterpay';\nimport { AmazonPayPaymentStrategy, AmazonPayScriptLoader } from './strategies/amazon-pay';\nimport { BlueSnapV2PaymentStrategy } from './strategies/bluesnapv2';\nimport { createBraintreePaymentProcessor, createBraintreeVisaCheckoutPaymentProcessor, BraintreeCreditCardPaymentStrategy, BraintreePaypalPaymentStrategy, BraintreeScriptLoader, BraintreeSDKCreator, BraintreeVisaCheckoutPaymentStrategy, VisaCheckoutScriptLoader } from './strategies/braintree';\nimport { CardinalClient, CardinalScriptLoader, CardinalThreeDSecureFlow } from './strategies/cardinal';\nimport { ChasePayPaymentStrategy, ChasePayScriptLoader } from './strategies/chasepay';\nimport { ConvergePaymentStrategy } from './strategies/converge';\nimport { CreditCardPaymentStrategy } from './strategies/credit-card';\nimport { CyberSourcePaymentStrategy } from './strategies/cybersource/index';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayPaymentStrategy, GooglePayStripeInitializer } from './strategies/googlepay';\nimport { KlarnaPaymentStrategy, KlarnaScriptLoader } from './strategies/klarna';\nimport { KlarnaV2PaymentStrategy, KlarnaV2ScriptLoader } from './strategies/klarnav2';\nimport { LegacyPaymentStrategy } from './strategies/legacy';\nimport { MasterpassPaymentStrategy, MasterpassScriptLoader } from './strategies/masterpass';\nimport { NoPaymentDataRequiredPaymentStrategy } from './strategies/no-payment';\nimport { OfflinePaymentStrategy } from './strategies/offline';\nimport { OffsitePaymentStrategy } from './strategies/offsite';\nimport { PaypalExpressPaymentStrategy, PaypalProPaymentStrategy, PaypalScriptLoader } from './strategies/paypal';\nimport { PaypalCommercePaymentStrategy } from './strategies/paypal-commerce';\nimport { SagePayPaymentStrategy } from './strategies/sage-pay';\nimport { SquarePaymentStrategy, SquareScriptLoader } from './strategies/square';\nimport { StripeScriptLoader, StripeV3PaymentStrategy } from './strategies/stripev3';\nimport { WepayPaymentStrategy, WepayRiskClient } from './strategies/wepay';\nimport { ZipPaymentStrategy, ZipScriptLoader } from './strategies/zip';\n\nexport default function createPaymentStrategyRegistry(\n    store: CheckoutStore,\n    paymentClient: any,\n    requestSender: RequestSender,\n    spamProtection: GoogleRecaptcha,\n    locale: string\n) {\n    const registry = new PaymentStrategyRegistry(store, { defaultToken: PaymentStrategyType.CREDIT_CARD });\n    const scriptLoader = getScriptLoader();\n    const paymentRequestTransformer = new PaymentRequestTransformer();\n    const paymentRequestSender = new PaymentRequestSender(paymentClient);\n    const billingAddressActionCreator = new BillingAddressActionCreator(\n        new BillingAddressRequestSender(requestSender),\n        new CustomerRequestSender(requestSender)\n    );\n    const braintreePaymentProcessor = createBraintreePaymentProcessor(scriptLoader);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutValidator = new CheckoutValidator(checkoutRequestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, new SpamProtectionRequestSender(requestSender));\n    const orderActionCreator = new OrderActionCreator(new OrderRequestSender(requestSender), checkoutValidator);\n    const storeCreditActionCreator = new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender));\n    const paymentActionCreator = new PaymentActionCreator(paymentRequestSender, orderActionCreator, paymentRequestTransformer);\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender));\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const checkoutActionCreator = new CheckoutActionCreator(checkoutRequestSender, configActionCreator);\n    const paymentStrategyActionCreator = new PaymentStrategyActionCreator(registry, orderActionCreator, spamProtectionActionCreator);\n    const formPoster = createFormPoster();\n    const hostedFormFactory = new HostedFormFactory(store);\n\n    registry.register(PaymentStrategyType.ADYENV2, () =>\n        new AdyenV2PaymentStrategy(\n            store,\n            paymentActionCreator,\n            orderActionCreator,\n            new AdyenV2ScriptLoader(scriptLoader, getStylesheetLoader()),\n            formPoster,\n            locale\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFFIRM, () =>\n        new AffirmPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            new AffirmScriptLoader()\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFTERPAY, () =>\n        new AfterpayPaymentStrategy(\n            store,\n            checkoutValidator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new AfterpayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.AMAZON, () =>\n        new AmazonPayPaymentStrategy(\n            store,\n            orderActionCreator,\n            billingAddressActionCreator,\n            remoteCheckoutActionCreator,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.BLUESNAPV2, () =>\n        new BlueSnapV2PaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.CREDIT_CARD, () =>\n        new CreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    registry.register(PaymentStrategyType.CYBERSOURCE, () =>\n        new CyberSourcePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.KLARNA, () =>\n        new KlarnaPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new KlarnaScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.KLARNAV2, () =>\n        new KlarnaV2PaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new KlarnaV2ScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.LEGACY, () =>\n        new LegacyPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFLINE, () =>\n        new OfflinePaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFSITE, () =>\n        new OffsitePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL, () =>\n        new PaypalProPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS_CREDIT, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_COMMERCE, () =>\n        new PaypalCommercePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.SAGE_PAY, () =>\n        new SagePayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.SQUARE, () =>\n        new SquarePaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new SquareScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED, () =>\n        new NoPaymentDataRequiredPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE, () =>\n        new BraintreeCreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor,\n            true\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_VISA_CHECKOUT, () =>\n        new BraintreeVisaCheckoutPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHASE_PAY, () =>\n        new ChasePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new ChasePayScriptLoader(scriptLoader),\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.WE_PAY, () =>\n        new WepayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.MASTERPASS, () =>\n        new MasterpassPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.ZIP, () =>\n        new ZipPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new ZipScriptLoader(scriptLoader),\n            requestSender\n        )\n    );\n\n    registry.register(PaymentStrategyType.CONVERGE, () =>\n        new ConvergePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPEV3, () =>\n        new StripeV3PaymentStrategy(\n            store,\n            paymentMethodActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            new StripeScriptLoader(scriptLoader)\n        )\n    );\n\n    return registry;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { Overlay } from '../../../common/overlay';\n\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport default function createBraintreePaymentProcessor(scriptLoader: ScriptLoader) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n    const overlay = new Overlay();\n\n    return new BraintreePaymentProcessor(braintreeSDKCreator, overlay);\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport ConsignmentActionCreator from './consignment-action-creator';\nimport ConsignmentRequestSender from './consignment-request-sender';\nimport { ShippingStrategy } from './strategies';\nimport { AmazonPayShippingStrategy } from './strategies/amazon';\nimport { DefaultShippingStrategy } from './strategies/default';\n\nexport default function createShippingStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<ShippingStrategy> {\n    const registry = new Registry<ShippingStrategy>();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const consignmentRequestSender = new ConsignmentRequestSender(requestSender);\n    const consignmentActionCreator = new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayShippingStrategy(\n            store,\n            consignmentActionCreator,\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender)),\n            new AmazonPayScriptLoader(getScriptLoader())\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultShippingStrategy(\n            store,\n            consignmentActionCreator\n        )\n    );\n\n    return registry;\n}\n","import { EmbeddedCheckoutFrameLoadedEvent } from '../embedded-checkout-events';\n\nexport default function handleFrameLoadedEvent(message: EmbeddedCheckoutFrameLoadedEvent): void {\n    if (!message.payload || !message.payload.contentId) {\n        return;\n    }\n\n    const body = document.getElementById(message.payload.contentId);\n\n    if (!body || body.hasAttribute('data-iframe-height')) {\n        return;\n    }\n\n    body.setAttribute('data-iframe-height', '');\n}\n","export default interface CustomError extends Error {\n    message: string;\n    type: string;\n    subtype?: string;\n}\n\nexport function isCustomError(error: any): error is CustomError {\n    return (\n        typeof error.message === 'string' &&\n        typeof error.type === 'string' &&\n        (typeof error.subtype === 'string' || !error.subtype) &&\n        error instanceof Error\n    );\n}\n","import { isCustomError, CustomError } from '../../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { bindDecorator as bind } from '../../common/utility';\nimport EmbeddedCheckoutError from '../embedded-checkout-error';\nimport { EmbeddedCheckoutCompleteEvent, EmbeddedCheckoutErrorEvent, EmbeddedCheckoutEvent, EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType, EmbeddedCheckoutFrameErrorEvent, EmbeddedCheckoutFrameLoadedEvent, EmbeddedCheckoutLoadedEvent, EmbeddedCheckoutSignedOutEvent } from '../embedded-checkout-events';\nimport EmbeddedCheckoutStyles from '../embedded-checkout-styles';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport { EmbeddedContentEventMap, EmbeddedContentEventType } from './embedded-content-events';\nimport EmbeddedContentOptions from './embedded-content-options';\n\n@bind\nexport default class IframeEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    /**\n     * @internal\n     */\n    constructor(\n        private _messageListener: IframeEventListener<EmbeddedContentEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _untargetedMessagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _messageHandlers: EventCallbacks<EmbeddedCheckoutEventMap> = {}\n    ) {\n        this._messageListener.listen();\n    }\n\n    postComplete(): void {\n        const message: EmbeddedCheckoutCompleteEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutComplete,\n        };\n\n        this._postMessage(message);\n    }\n\n    postError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutErrorEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutError,\n            payload: this._transformError(payload),\n        };\n\n        this._postMessage(message);\n    }\n\n    postFrameError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutFrameErrorEvent = {\n            type: EmbeddedCheckoutEventType.FrameError,\n            payload: this._transformError(payload),\n        };\n\n        // Ideally, all messages should be targeted at a specific origin.\n        // However, for `FrameError` message, we have to post it in an\n        // untargeted fashion. This is because the error could be caused by a\n        // missing cart. That makes it not possible to determine of site origin\n        // of the parent window. Nevertheless, we still want to notify the\n        // parent window about the error.\n        this._postMessage(message, { untargeted: true });\n    }\n\n    postFrameLoaded(payload?: EmbeddedContentOptions): void {\n        const message: EmbeddedCheckoutFrameLoadedEvent = {\n            type: EmbeddedCheckoutEventType.FrameLoaded,\n            payload,\n        };\n\n        this._postMessage(message);\n    }\n\n    postLoaded(): void {\n        const message: EmbeddedCheckoutLoadedEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutLoaded,\n        };\n\n        this._postMessage(message);\n    }\n\n    postSignedOut(): void {\n        const message: EmbeddedCheckoutSignedOutEvent = {\n            type: EmbeddedCheckoutEventType.SignedOut,\n        };\n\n        this._postMessage(message);\n    }\n\n    receiveStyles(handler: (styles: EmbeddedCheckoutStyles) => void): void {\n        this._messageListener.addListener(EmbeddedContentEventType.StyleConfigured, ({ payload }) => {\n            handler(payload);\n        });\n    }\n\n    private _postMessage(message: EmbeddedCheckoutEvent, options?: { untargeted?: boolean }): void {\n        this._notifyMessageHandlers(message);\n\n        if (options && options.untargeted) {\n            return this._untargetedMessagePoster.post(message);\n        }\n\n        this._messagePoster.post(message);\n    }\n\n    private _notifyMessageHandlers(message: EmbeddedCheckoutEvent): void {\n        Object.keys(this._messageHandlers)\n            .forEach(key => {\n                if (message.type !== key) {\n                    return;\n                }\n\n                const handler = this._messageHandlers[key];\n\n                if (handler) {\n                    (handler as (event: EmbeddedCheckoutEvent) => void).call(null, message);\n                }\n            });\n    }\n\n    private _transformError(error: Error | CustomError): EmbeddedCheckoutError {\n        return {\n            message: error.message,\n            type: isCustomError(error) ? error.type : undefined,\n            subtype: isCustomError(error) ? error.subtype : undefined,\n        };\n    }\n}\n\nexport type EventCallbacks<TEventMap> = {\n    [key in keyof TEventMap]?: (event: TEventMap[key]) => void;\n};\n","import { bindDecorator as bind } from '../../common/utility';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\n\n@bind\nexport default class NoopEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    postComplete(): void {}\n\n    postError(): void {}\n\n    postFrameError(): void {}\n\n    postFrameLoaded(): void {}\n\n    postLoaded(): void {}\n\n    postSignedOut(): void {}\n\n    receiveStyles(): void {}\n}\n","import { setupContentWindowForIframeResizer, IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { EmbeddedCheckoutEvent, EmbeddedCheckoutEventType } from '../embedded-checkout-events';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport EmbeddedCheckoutMessengerOptions from './embedded-checkout-messenger-options';\nimport { EmbeddedContentEventMap } from './embedded-content-events';\nimport handleFrameLoadedEvent from './handle-frame-loaded-event';\nimport IframeEmbeddedCheckoutMessenger from './iframe-embedded-checkout-messenger';\nimport NoopEmbeddedCheckoutMessenger from './noop-embedded-checkout-messenger';\n\n/**\n * Create an instance of `EmbeddedCheckoutMessenger`.\n *\n * @remarks\n * The object is responsible for posting messages to the parent window from the\n * iframe when certain events have occurred. For example, when the checkout\n * form is first loaded, you should notify the parent window about it.\n *\n * The iframe can only be embedded in domains that are allowed by the store.\n *\n * ```ts\n * const messenger = createEmbeddedCheckoutMessenger({\n *     parentOrigin: 'https://some/website',\n * });\n *\n * messenger.postFrameLoaded();\n * ```\n *\n * @alpha\n * Please note that this feature is currently in an early stage of development.\n * Therefore the API is unstable and not ready for public consumption.\n *\n * @param options - Options for creating `EmbeddedCheckoutMessenger`\n * @returns - An instance of `EmbeddedCheckoutMessenger`\n */\nexport default function createEmbeddedCheckoutMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger {\n    setupContentWindowForIframeResizer();\n\n    const parentWindow = options.parentWindow || window.parent;\n\n    // Return a No-op messenger if it is not called inside an iframe\n    if (window === parentWindow) {\n        return new NoopEmbeddedCheckoutMessenger();\n    }\n\n    return new IframeEmbeddedCheckoutMessenger(\n        new IframeEventListener<EmbeddedContentEventMap>(options.parentOrigin),\n        new IframeEventPoster<EmbeddedCheckoutEvent>(options.parentOrigin, parentWindow),\n        new IframeEventPoster<EmbeddedCheckoutEvent>('*', parentWindow),\n        { [EmbeddedCheckoutEventType.FrameLoaded]: handleFrameLoadedEvent }\n    );\n}\n","import { isObject, union } from 'lodash';\nimport MessageFormat from 'messageformat';\n\nimport { Logger } from '../common/log';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport LanguageConfig, { Locales, Translations } from './language-config';\n\nconst DEFAULT_LOCALE = 'en';\nconst KEY_PREFIX = 'optimized_checkout';\n\n/**\n * Responsible for getting language strings.\n *\n * This object can be used to retrieve language strings that are most\n * appropriate for a given locale.\n *\n * The language strings provided to the object should follow [ICU\n * MessageFormat](http://userguide.icu-project.org/formatparse/messages) syntax.\n */\n@bind\nexport default class LanguageService {\n    private _locale: string;\n    private _locales: Locales;\n    private _translations: Translations;\n    private _formatters: { [key: string]: any };\n\n    /**\n     * @internal\n     */\n    constructor(\n        config: Partial<LanguageConfig>,\n        private _logger: Logger\n    ) {\n        const { locale, locales, translations } = this._transformConfig(config);\n\n        this._locale = locale;\n        this._locales = locales;\n        this._translations = translations;\n        this._formatters = {};\n    }\n\n    /**\n     * Remaps a set of language strings with a different set of keys.\n     *\n     * ```js\n     * service.mapKeys({\n     *     'new_key': 'existing_key',\n     * });\n     *\n     * console.log(service.translate('new_key'));\n     * ```\n     *\n     * @param maps - The set of language strings.\n     */\n    mapKeys(maps: { [key: string]: string }): void {\n        Object.keys(maps).forEach(key => {\n            const translationKey = `${KEY_PREFIX}.${maps[key]}`;\n\n            this._translations[`${KEY_PREFIX}.${key}`] = this._translations[translationKey];\n        });\n    }\n\n    /**\n     * Gets the preferred locale of the current customer.\n     *\n     * @returns The preferred locale code.\n     */\n    getLocale(): string {\n        return this._hasTranslations() ? this._locale : DEFAULT_LOCALE;\n    }\n\n    /**\n     * Gets a language string by a key.\n     *\n     * ```js\n     * service.translate('language_key');\n     * ```\n     *\n     * If the language string contains a placeholder, you can replace it by\n     * providing a second argument.\n     *\n     * ```js\n     * service.translate('language_key', { placeholder: 'Hello' });\n     * ```\n     *\n     * @param key - The language key.\n     * @param data - Data for replacing placeholders in the language string.\n     * @returns The translated language string.\n     */\n    translate(key: string, data: TranslationData = {}): string {\n        const prefixedKey = `${KEY_PREFIX}.${key}`;\n\n        if (typeof this._translations[prefixedKey] !== 'string') {\n            this._logger.warn(`Translation key \"${prefixedKey}\" is missing`);\n\n            return prefixedKey;\n        }\n\n        if (!this._formatters[prefixedKey]) {\n            const messageFormat = new MessageFormat(this._locales[prefixedKey]);\n\n            this._formatters[prefixedKey] = messageFormat.compile(this._translations[prefixedKey] || '');\n        }\n\n        return this._formatters[prefixedKey](this._transformData(data));\n    }\n\n    private _transformConfig(config: Partial<LanguageConfig> = {}): LanguageConfig {\n        const output: LanguageConfig = {\n            defaultTranslations: {},\n            translations: {},\n            locales: {},\n            locale: config.locale || DEFAULT_LOCALE,\n        };\n\n        const locales = config.locales || {};\n        const translations = this._flattenObject(config.translations || {});\n        const defaultTranslations = this._flattenObject(config.defaultTranslations || {});\n        const translationKeys = union(Object.keys(defaultTranslations), Object.keys(translations));\n\n        translationKeys.forEach(key => {\n            if (translations && translations[key]) {\n                output.translations[key] = translations[key];\n                output.locales[key] = locales[key] || output.locale;\n            } else {\n                output.translations[key] = defaultTranslations[key];\n                output.locales[key] = DEFAULT_LOCALE;\n            }\n        });\n\n        return output;\n    }\n\n    private _flattenObject(object: Translations, result: Translations = {}, parentKey: string = ''): Translations {\n        try {\n            Object.keys(object).forEach(key => {\n                const value = object[key];\n                const resultKey = parentKey ? `${parentKey}.${key}` : key;\n\n                if (isObject(value)) {\n                    return this._flattenObject(value, result, resultKey);\n                }\n\n                result[resultKey] = value;\n            });\n        } catch (err) {\n            this._logger.warn(`Unable to parse object: ${err}`);\n        }\n\n        return result;\n    }\n\n    private _transformData(data: TranslationData): TranslationData {\n        return Object.keys(data).reduce((result, key) => {\n            const value = data[key];\n\n            result[key] = value === null || value === undefined ? '' : value;\n\n            return result;\n        }, {} as TranslationData);\n    }\n\n    private _hasTranslations(): boolean {\n        return Object.keys(this._locales).map(key => this._locales[key])\n            .filter(code => code.split('-')[0] === this._locale.split('-')[0])\n            .length > 0;\n    }\n}\n\nexport interface TranslationData {\n    [key: string]: string | number;\n}\n","import { getDefaultLogger } from '../common/log';\n\nimport LanguageConfig from './language-config';\nimport LanguageService from './language-service';\n\n/**\n * Creates an instance of `LanguageService`.\n *\n * @remarks\n * ```js\n * const language = {{{langJson 'optimized_checkout'}}}; // `langJson` is a Handlebars helper provided by BigCommerce's Stencil template engine.\n * const service = createLanguageService(language);\n *\n * console.log(service.translate('address.city_label'));\n * ```\n *\n * @param config - A configuration object.\n * @returns An instance of `LanguageService`.\n */\nexport default function createLanguageService(config: Partial<LanguageConfig> = {}): LanguageService {\n    return new LanguageService(\n        config,\n        getDefaultLogger()\n    );\n}\n","import { InvalidArgumentError } from '../common/error/errors';\n\nimport { CurrencyConfig } from './currency';\n\nexport default class CurrencyFormatter {\n    private _decimalPlaces: number;\n    private _symbolLocation: string;\n    private _symbol: string;\n    private _thousandsSeparator: string;\n    private _decimalSeparator: string;\n\n    constructor(\n        currencySettings: CurrencyConfig\n    ) {\n        if (!currencySettings) {\n            throw new Error('Currency settings missing');\n        }\n\n        const {\n            decimalPlaces,\n            symbolLocation,\n            symbol,\n            thousandsSeparator,\n            decimalSeparator,\n        } = currencySettings;\n\n        if (\n            typeof symbolLocation !== 'string' ||\n            typeof symbol !== 'string' ||\n            typeof thousandsSeparator !== 'string' ||\n            typeof decimalSeparator !== 'string' ||\n            typeof decimalPlaces !== 'string'\n        ) {\n            throw new InvalidArgumentError('Invalid currency settings provided');\n        }\n\n        this._decimalPlaces = parseInt(decimalPlaces, 10);\n        this._symbolLocation = symbolLocation;\n        this._symbol = symbol;\n        this._thousandsSeparator = thousandsSeparator;\n        this._decimalSeparator = decimalSeparator;\n    }\n\n    format(amount?: number): string {\n        if (typeof amount !== 'number') {\n            throw new InvalidArgumentError('Invalid amount provided');\n        }\n\n        const formattedNumber = this._formatNumber(amount);\n\n        const formattedCurrency = this._formatCurrency(formattedNumber);\n\n        return amount < 0 ?\n            `-${formattedCurrency}` :\n            formattedCurrency;\n    }\n\n    private _formatNumber(amount: number): string {\n        const positiveAmount = Math.abs(amount);\n        const [ integerAmount, decimalAmount = '' ] = (this._toFixed(positiveAmount, this._decimalPlaces)).split('.');\n        const parsedIntegerAmount = integerAmount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this._thousandsSeparator);\n\n        if (this._decimalPlaces < 1) {\n            return parsedIntegerAmount;\n        }\n\n        return [\n            parsedIntegerAmount,\n            decimalAmount,\n        ].join(this._decimalSeparator);\n    }\n\n    private _formatCurrency(formattedNumber: string): string {\n        return (this._symbolLocation.toLowerCase() === 'left') ?\n            `${this._symbol}${formattedNumber}` :\n            `${formattedNumber}${this._symbol}`;\n    }\n\n    private _toFixed(value: number, precision: number): string {\n        return (+(Math.round(+(value + 'e' + precision)) + 'e' + -precision)).toFixed(precision);\n    }\n}\n","import { bindDecorator as bind } from '../common/utility';\nimport { StoreConfig } from '../config';\n\nimport CurrencyFormatter from './currency-formatter';\n\n/**\n * Responsible for formatting and converting currencies.\n */\n@bind\nexport default class CurrencyService {\n    private _customerFormatter: CurrencyFormatter;\n    private _storeFormatter: CurrencyFormatter;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _storeConfig: StoreConfig\n    ) {\n        this._customerFormatter = new CurrencyFormatter(this._storeConfig.shopperCurrency);\n        this._storeFormatter = new CurrencyFormatter(this._storeConfig.currency);\n    }\n\n    toCustomerCurrency(amount: number): string {\n        const exchangeRate = this._storeConfig.shopperCurrency.exchangeRate;\n\n        return this._customerFormatter.format(amount * exchangeRate);\n    }\n\n    toStoreCurrency(amount: number): string {\n        return this._storeFormatter.format(amount);\n    }\n}\n","import { StoreConfig } from '../config';\n\nimport CurrencyService from './currency-service';\n\n/**\n * Creates an instance of `CurrencyService`.\n *\n * @remarks\n * ```js\n * const { data } = checkoutService.getState();\n * const config = data.getConfig();\n * const checkout = data.getCheckout();\n * const currencyService = createCurrencyService(config);\n *\n * currencyService.toStoreCurrency(checkout.grandTotal);\n * currencyService.toCustomerCurrency(checkout.grandTotal);\n * ```\n *\n * @alpha\n * Please note that `CurrencyService` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param config - The config object containing the currency configuration\n * @returns an instance of `CurrencyService`.\n */\nexport default function createCurrencyService(\n    config: StoreConfig\n): CurrencyService {\n    return new CurrencyService(config);\n}\n","import { keys } from 'lodash';\n\nimport { LineItemMap } from '../cart';\nimport { Checkout, CheckoutService } from '../checkout';\nimport { InvalidArgumentError } from '../common/error/errors';\nimport { ShopperCurrency, StoreProfile } from '../config';\nimport { Coupon } from '../coupon';\nimport { Order } from '../order';\nimport { ShippingOption } from '../shipping';\n\nimport { AnalyticsTracker } from './analytics-tracker-window';\nimport StepTracker from './step-tracker';\n\nexport interface StepTrackerConfig {\n    checkoutSteps?: AnalyticStepType[];\n}\n\nexport type AnalyticStepType = 'customer' | 'shipping' | 'billing' | 'payment';\n\nconst ORDER_ITEMS_STORAGE_KEY = 'ORDER_ITEMS';\n\nexport enum AnalyticStepId {\n    CUSTOMER = 1,\n    SHIPPING,\n    BILLING,\n    PAYMENT,\n}\n\nconst ANALYTIC_STEPS: { [key: string]: AnalyticStepId } = {\n    customer: AnalyticStepId.CUSTOMER,\n    shipping: AnalyticStepId.SHIPPING,\n    billing: AnalyticStepId.BILLING,\n    payment: AnalyticStepId.PAYMENT,\n};\n\nexport default class AnalyticsStepTracker implements StepTracker {\n    private _checkoutStarted: boolean = false;\n    private _completedSteps: { [key: string]: boolean } = {};\n    private _viewedSteps: { [key in AnalyticStepId]?: boolean; } = {};\n    private _analyticStepOrder: AnalyticStepType[] = [\n        'customer',\n        'shipping',\n        'billing',\n        'payment',\n    ];\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private storage: StorageFallback,\n        private analytics: AnalyticsTracker,\n        { checkoutSteps }: StepTrackerConfig = {}\n    ) {\n        if (checkoutSteps !== undefined) {\n            if (checkoutSteps.some(value => !(value in ANALYTIC_STEPS))) {\n                throw new InvalidArgumentError(\n                    `Invalid checkout steps provided. Valid values are: ${keys(ANALYTIC_STEPS).join(', ')}.`\n                );\n            }\n            this._analyticStepOrder = checkoutSteps;\n\n        }\n    }\n\n    trackCheckoutStarted(): void {\n        if (this._checkoutStarted) {\n            return;\n        }\n\n        const checkout = this.getCheckout();\n\n        if (!checkout) {\n            return;\n        }\n\n        const {\n            coupons,\n            grandTotal,\n            shippingCostTotal,\n            taxTotal,\n            cart: {\n                lineItems,\n                discountAmount,\n                id,\n            },\n        } = checkout;\n\n        const extraItemsData = this.saveExtraItemsData(id, lineItems);\n\n        this.analytics.track('Checkout Started', this.getTrackingPayload({\n            revenue: grandTotal,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            lineItems,\n            extraItemsData,\n        }));\n\n        this._checkoutStarted = true;\n    }\n\n    trackOrderComplete(): void {\n        const order = this.getOrder();\n\n        if (!order) {\n            return;\n        }\n\n        const {\n            isComplete,\n            orderId,\n            orderAmount,\n            shippingCostTotal,\n            taxTotal,\n            discountAmount,\n            coupons,\n            lineItems,\n            cartId,\n        } = order;\n\n        if (!isComplete) {\n            return;\n        }\n\n        const extraItemsData = this.readExtraItemsData(cartId);\n\n        if (extraItemsData === null) {\n            return;\n        }\n\n        this.analytics.track('Order Completed', this.getTrackingPayload({\n            orderId,\n            revenue: orderAmount,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            extraItemsData,\n            lineItems,\n        }));\n\n        this.clearExtraItemData(cartId);\n    }\n\n    trackStepViewed(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepViewed(stepId)) {\n            return;\n        }\n\n        this.trackViewed(stepId);\n        this.backfill(stepId);\n    }\n\n    trackStepCompleted(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepCompleted(stepId)) {\n            return;\n        }\n\n        this.backfill(stepId);\n        this.trackCompleted(stepId);\n    }\n\n    private backfill(stepId: AnalyticStepId): void {\n        for (const i of this._analyticStepOrder) {\n            const id = this.getIdFromStep(i);\n\n            if (!id) {\n                break;\n            }\n\n            if (!this.hasStepViewed(id)) {\n                this.trackViewed(id);\n            }\n\n            if (id === stepId) {\n                break;\n            }\n\n            if (!this.hasStepCompleted(id)) {\n                this.trackCompleted(id);\n            }\n        }\n    }\n\n    private trackCompleted(stepId: AnalyticStepId): void {\n        const shippingMethod = this.getSelectedShippingOption();\n        const { code: currency = '' } = this.getShopperCurrency() || {};\n        const paymentMethod = this.getPaymentMethodName();\n\n        const payload: {\n            step: number;\n            currency: string;\n            shippingMethod?: string;\n            paymentMethod?: string;\n        } = {\n            step: stepId,\n            currency,\n        };\n\n        if (shippingMethod) {\n            payload.shippingMethod = shippingMethod.description;\n        }\n\n        if (paymentMethod) {\n            payload.paymentMethod = paymentMethod;\n        }\n\n        // due to an issue with the way the segment library works, we must send at least one of the two\n        // options--otherwise it rejects the track call with no diagnostic messages. however, if we blindly\n        // include both options, it sends a single comma for the value, which is undesireable. by only adding\n        // one of the two (shippingMethod here being arbitrarily chosen), we always have at least one value, but\n        // never send two empty values.\n        if (!payload.shippingMethod && !payload.paymentMethod) {\n            payload.shippingMethod = ' ';\n        }\n\n        this.analytics.track('Checkout Step Completed', payload);\n\n        const shippingMethodId = shippingMethod ? shippingMethod.id : '';\n        const completedStepId = stepId === AnalyticStepId.SHIPPING ?\n            `${stepId}-${shippingMethodId}` :\n            stepId;\n\n        this._completedSteps[completedStepId] = true;\n    }\n\n    private getTrackingPayload({\n        orderId,\n        revenue,\n        shipping,\n        tax,\n        discount,\n        coupons,\n        extraItemsData,\n        lineItems,\n    }: {\n        orderId?: number;\n        revenue: number;\n        shipping: number;\n        tax: number;\n        discount: number;\n        coupons: Coupon[];\n        extraItemsData: ExtraItemsData;\n        lineItems: LineItemMap;\n    }) {\n        const { code = '' } = this.getShopperCurrency() || {};\n        const { storeName = '' } = this.getStoreProfile() || {};\n\n        return {\n            orderId,\n            affiliation: storeName,\n            revenue: this.toShopperCurrency(revenue),\n            shipping: this.toShopperCurrency(shipping),\n            tax: this.toShopperCurrency(tax),\n            discount: this.toShopperCurrency(discount),\n            coupon: (coupons || []).map(coupon => coupon.code).join(','),\n            currency: code,\n            products: this.getProducts(extraItemsData, lineItems),\n        };\n    }\n\n    private hasStepCompleted(stepId: AnalyticStepId): boolean {\n        const shippingOption = this.getSelectedShippingOption();\n        const shippingMethodId = shippingOption ? shippingOption.id : '';\n\n        return this._completedSteps.hasOwnProperty(stepId) ||\n            (\n                stepId === AnalyticStepId.SHIPPING &&\n                this._completedSteps.hasOwnProperty(`${stepId}-${shippingMethodId}`)\n            );\n    }\n\n    private hasStepViewed(stepId: AnalyticStepId): boolean {\n        return !!this._viewedSteps[stepId];\n    }\n\n    private getIdFromStep(step: string): AnalyticStepId | null {\n        const name = step.split('.');\n\n        return ANALYTIC_STEPS[name[0]] || null;\n    }\n\n    private trackViewed(stepId: AnalyticStepId): void {\n        const currency = this.getShopperCurrency();\n\n        this.analytics.track('Checkout Step Viewed', {\n            step: stepId,\n            currency: currency ? currency.code : '',\n        });\n\n        this._viewedSteps[stepId] = true;\n    }\n\n    private getOrder(): Order | undefined {\n        const { data: { getOrder } } = this.checkoutService.getState();\n\n        return getOrder();\n    }\n\n    private getCheckout(): Checkout | undefined {\n        const { data: { getCheckout } } = this.checkoutService.getState();\n\n        return getCheckout();\n    }\n\n    private getShopperCurrency(): ShopperCurrency | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.shopperCurrency;\n    }\n\n    private getStoreProfile(): StoreProfile | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.storeProfile;\n    }\n\n    private toShopperCurrency(amount: number): number {\n        const { exchangeRate = 1 } = this.getShopperCurrency() || {};\n\n        return Math.round(amount * exchangeRate * 100) / 100;\n    }\n\n    private saveExtraItemsData(id: string, lineItems: LineItemMap): ExtraItemsData {\n        const data = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].reduce((result, item) => {\n            result[item.productId] = {\n                brand: item.brand ? item.brand : '',\n                category: item.categoryNames ? item.categoryNames.join(', ') : '',\n            };\n\n            return result;\n        }, {} as ExtraItemsData);\n\n        try {\n            this.storage.setItem(this.getStorageKey(id), JSON.stringify(data));\n\n            return data;\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private getStorageKey(id: string): string {\n        return id ? `${ORDER_ITEMS_STORAGE_KEY}_${id}` : '';\n    }\n\n    private readExtraItemsData(id: string): ExtraItemsData | null {\n        try {\n            const item = this.storage.getItem(this.getStorageKey(id));\n\n            return item ? JSON.parse(item) : null;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    private clearExtraItemData(id: string): void {\n        try {\n            this.storage.removeItem(this.getStorageKey(id));\n        } catch (err) {\n            // silently ignore the failure\n        }\n    }\n\n    private getSelectedShippingOption(): ShippingOption | null {\n        const { data } = this.checkoutService.getState();\n        const shippingOption = data.getSelectedShippingOption();\n\n        return (shippingOption && shippingOption.id && shippingOption.description) ?\n            shippingOption :\n            null;\n    }\n\n    private getPaymentMethodName(): string {\n        const { data } = this.checkoutService.getState();\n        const paymentMethod = data.getSelectedPaymentMethod();\n\n        return (paymentMethod && paymentMethod.config) ?\n            paymentMethod.config.displayName || '' :\n            '';\n    }\n\n    private getProducts(itemsData: ExtraItemsData, lineItems: LineItemMap): AnalyticsProduct[] {\n        const customItems: AnalyticsProduct[] = (lineItems.customItems || []).map(item => ({\n            product_id: item.id,\n            sku: item.sku,\n            price: item.listPrice,\n            quantity: item.quantity,\n            name: item.name,\n        }));\n\n        const giftCertificateItems: AnalyticsProduct[] = lineItems.giftCertificates.map(item => {\n            return {\n                product_id: item.id,\n                price: this.toShopperCurrency(item.amount),\n                name: item.name,\n                quantity: 1,\n            };\n        });\n\n        const physicalAndDigitalItems: AnalyticsProduct[] = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].map(item => {\n            let itemAttributes;\n\n            if (item.options && item.options.length) {\n                itemAttributes = item.options.map(option => `${option.name}:${option.value}`);\n                itemAttributes.sort();\n            }\n\n            return {\n                product_id: item.productId,\n                sku: item.sku,\n                price: item.listPrice,\n                image_url: item.imageUrl,\n                name: item.name,\n                quantity: item.quantity,\n                brand: itemsData[item.productId] ? itemsData[item.productId].brand : '',\n                category: itemsData[item.productId] ? itemsData[item.productId].category : '',\n                variant: (itemAttributes || []).join(', '),\n            };\n        });\n\n        return [\n            ...customItems,\n            ...physicalAndDigitalItems,\n            ...giftCertificateItems,\n        ];\n    }\n}\n\nexport interface AnalyticsProduct {\n    product_id: string | number;\n    price: number;\n    quantity: number;\n    name: string;\n    sku?: string;\n    image_url?: string;\n    category?: string;\n    variant?: string;\n    brand?: string;\n}\n\nexport interface ExtraItemsData {\n    [productId: string]: {\n        brand: string;\n        category: string;\n    };\n}\n","import StepTracker from './step-tracker';\n\nexport default class NoopStepTracker implements StepTracker {\n    trackCheckoutStarted(): void {\n        return;\n    }\n\n    trackOrderComplete(): void {\n        return;\n    }\n\n    trackStepViewed(): void {\n        return;\n    }\n\n    trackStepCompleted(): void {\n        return;\n    }\n}\n","import localStorageFallback from 'local-storage-fallback';\n\nimport { CheckoutService } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport AnalyticsStepTracker, { StepTrackerConfig } from './analytics-step-tracker';\nimport { isAnalyticsTrackerWindow } from './is-analytics-step-tracker-window';\nimport NoopStepTracker from './noop-step-tracker';\nimport StepTracker from './step-tracker';\n\n/**\n * Creates an instance of `StepTracker`.\n *\n * @remarks\n * ```js\n * const checkoutService = createCheckoutService();\n * await checkoutService.loadCheckout();\n * const stepTracker = createStepTracker(checkoutService);\n *\n * stepTracker.trackCheckoutStarted();\n * ```\n *\n * @alpha\n * Please note that `StepTracker` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param CheckoutService - An instance of CheckoutService\n * @param StepTrackerConfig - A step tracker config object\n * @returns an instance of `StepTracker`.\n */\nexport default function createStepTracker(\n    checkoutService: CheckoutService,\n    stepTrackerConfig?: StepTrackerConfig\n): StepTracker {\n    const { data } = checkoutService.getState();\n    const config = data.getConfig();\n\n    if (!config) {\n        throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n    }\n\n    const { isAnalyticsEnabled } = config.checkoutSettings;\n\n    if (isAnalyticsEnabled && isAnalyticsTrackerWindow(window)) {\n        return new AnalyticsStepTracker(\n            checkoutService,\n            localStorageFallback,\n            window.analytics,\n            stepTrackerConfig\n        );\n    }\n\n    return new NoopStepTracker();\n}\n","import AnalyticsTrackerWindow from './analytics-tracker-window';\n\nexport function isAnalyticsTrackerWindow(window: Window): window is AnalyticsTrackerWindow {\n    return Boolean((window as AnalyticsTrackerWindow).analytics);\n}\n","export { createTimeout } from '@bigcommerce/request-sender';\n\nexport { createCheckoutService } from '../checkout';\nexport { createCheckoutButtonInitializer } from '../checkout-buttons';\nexport { embedCheckout } from '../embedded-checkout';\nexport { createEmbeddedCheckoutMessenger } from '../embedded-checkout/iframe-content';\nexport { createLanguageService } from '../locale';\nexport { createCurrencyService } from '../currency';\nexport { createStepTracker } from '../analytics';\n","import { Checkout } from '../../../checkout';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeModuleCreator, GooglePayBraintreeSDK } from '../braintree';\n\nexport type EnvironmentType = 'PRODUCTION' | 'TEST';\ntype TokenizeType = 'AndroidPayCard' | 'CreditCard';\n\nexport interface GooglePayInitializer {\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean, publishableKey?: string): Promise<GooglePayPaymentDataRequestV2>;\n    teardown(): Promise<void>;\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload;\n}\n\nexport interface GooglePayCreator extends BraintreeModuleCreator<GooglePayBraintreeSDK> {}\n\nexport interface GooglePayPaymentOptions {\n    environment: EnvironmentType;\n}\n\nexport interface GooglePayIsReadyToPayResponse {\n    result: boolean;\n    paymentMethodPresend?: boolean;\n}\n\nexport interface GooglePaySDK {\n    payments: {\n        api: {\n            PaymentsClient: new(options: GooglePayPaymentOptions) => GooglePayClient;\n        };\n    };\n}\n\nexport interface GooglePayClient {\n    isReadyToPay(options: object): Promise<GooglePayIsReadyToPayResponse>;\n    loadPaymentData(paymentDataRequest: GooglePayPaymentDataRequestV2): Promise<GooglePaymentData>;\n    createButton(options: { [key: string]: string | object }): HTMLElement;\n}\n\nexport interface GooglePayHostWindow extends Window {\n    google?: GooglePaySDK;\n}\n\nexport interface TokenizePayload {\n    nonce: string;\n    details: {\n        cardType: string;\n        lastFour: string;\n        lastTwo?: string;\n    };\n    description?: string;\n    type: TokenizeType;\n    binData?: {\n        commercial: string;\n        countryOfIssuance: string;\n        debit: string;\n        durbinRegulated: string;\n        healthcare: string;\n        issuingBank: string;\n        payroll: string;\n        prepaid: string;\n        productId: string;\n    };\n}\n\nexport interface GooglePaymentData {\n    apiVersion: number;\n    apiVersionMinor: number;\n    paymentMethodData: {\n        description: string;\n        info: {\n            cardDetails: string;\n            cardNetwork: string;\n            billingAddress: GooglePayAddress;\n        };\n        tokenizationData: {\n            token: string;\n            type: string;\n        };\n        type: string;\n    };\n    shippingAddress: GooglePayAddress;\n    email: string;\n}\n\nexport interface GooglePayAddress {\n    address1: string;\n    address2: string;\n    address3: string;\n    administrativeArea: string;\n    companyName: string;\n    countryCode: string;\n    locality: string;\n    name: string;\n    postalCode: string;\n    sortingCode: string;\n    phoneNumber: string;\n}\n\nexport interface GooglePaymentsError {\n    statusCode: string;\n    statusMessage?: string;\n}\n\nexport interface PaymentMethodData {\n    methodId: string;\n    paymentData: {\n        method: string;\n        nonce: string;\n        cardInformation: {\n            type: string;\n            number: string;\n        };\n    };\n}\n\nexport enum ButtonType {\n    Long = 'long',\n    Short = 'short',\n}\nexport enum ButtonColor {\n    Default = 'default',\n    Black = 'black',\n    White = 'white',\n}\n\nexport interface GooglePayPaymentDataRequestV2 {\n    apiVersion: number;\n    apiVersionMinor: number;\n    merchantInfo: {\n        authJwt?: string;\n        merchantId?: string;\n        merchantName?: string;\n    };\n    allowedPaymentMethods: [{\n        type: string;\n        parameters: {\n            allowedAuthMethods: string[];\n            allowedCardNetworks: string[];\n            allowPrepaidCards?: boolean;\n            billingAddressRequired?: boolean;\n            billingAddressParameters?: {\n                format?: string;\n                phoneNumberRequired?: boolean;\n            };\n        };\n        tokenizationSpecification?: {\n            type: string;\n            parameters: {\n                gateway: string;\n                gatewayMerchantId?: string;\n                'braintree:apiVersion'?: string;\n                'braintree:clientKey'?: string;\n                'braintree:merchantId'?: string;\n                'braintree:sdkVersion'?: string;\n                'braintree:authorizationFingerprint'?: string;\n                'stripe:version'?: string;\n                'stripe:publishableKey'?: string;\n            };\n        };\n    }];\n    transactionInfo: {\n        currencyCode: string;\n        totalPriceStatus: string;\n        totalPrice?: string;\n        checkoutOption?: string;\n    };\n    emailRequired?: boolean;\n    shippingAddressRequired?: boolean;\n    shippingAddressParameters?: {\n        allowedCountryCodes?: string[];\n        phoneNumberRequired?: boolean;\n    };\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../../../address';\nimport { BillingAddressActionCreator, BillingAddressUpdateRequestBody } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport { ConsignmentActionCreator } from '../../../shipping';\nimport { PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\n\nimport { ButtonColor, ButtonType, EnvironmentType, GooglePaymentData, GooglePayAddress, GooglePayClient, GooglePayInitializer, GooglePayPaymentDataRequestV2, GooglePaySDK, TokenizePayload } from './googlepay';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default class GooglePayPaymentProcessor {\n    private _googlePayClient?: GooglePayClient;\n    private _methodId?: string;\n    private _paymentDataRequest?: GooglePayPaymentDataRequestV2;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayInitializer: GooglePayInitializer,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _consigmentActionCreator: ConsignmentActionCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(methodId: string): Promise<void> {\n        this._methodId = methodId;\n\n        return this._configureWallet();\n    }\n\n    deinitialize(): Promise<void> {\n        return this._googlePayInitializer.teardown();\n    }\n\n    createButton(\n        onClick: (event: Event) => Promise<void>,\n        buttonType: ButtonType = ButtonType.Short,\n        buttonColor: ButtonColor = ButtonColor.Default\n    ): HTMLElement {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.createButton({\n            buttonColor,\n            buttonType,\n            onClick,\n        });\n    }\n\n    displayWallet(): Promise<GooglePaymentData> {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.loadPaymentData(this._getPaymentDataRequest());\n    }\n\n    handleSuccess(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        return this._postForm(this._googlePayInitializer.parseResponse(paymentData))\n            .then(() => this._updateBillingAddress(paymentData));\n    }\n\n    updateShippingAddress(shippingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consigmentActionCreator.updateAddress(this._mapGooglePayAddressToShippingAddress(shippingAddress))\n        );\n    }\n\n    private _configureWallet(): Promise<void> {\n        const methodId = this._getMethodId();\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                const checkout = state.checkout.getCheckout();\n                const hasShippingAddress = !!state.shippingAddress.getShippingAddress();\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { testMode } = paymentMethod.config;\n\n                return Promise.all([\n                    this._googlePayScriptLoader.load(),\n                    this._googlePayInitializer.initialize(checkout, paymentMethod, hasShippingAddress),\n                ]).then(([googlePay, paymentDataRequest]) => {\n                    this._googlePayClient = this._getGooglePayClient(googlePay, testMode);\n                    this._paymentDataRequest = paymentDataRequest;\n\n                    return this._googlePayClient.isReadyToPay({\n                        allowedPaymentMethods: [\n                            {\n                                type: paymentDataRequest.allowedPaymentMethods[0].type,\n                                parameters: {\n                                    allowedAuthMethods: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedAuthMethods,\n                                    allowedCardNetworks: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedCardNetworks,\n                                },\n                            },\n                        ],\n                        apiVersion: paymentDataRequest.apiVersion,\n                        apiVersionMinor: paymentDataRequest.apiVersionMinor,\n                    }).then(response => {\n                        if (response.result) {\n                            return;\n                        }\n\n                        throw new PaymentMethodInvalidError();\n                    });\n                });\n            });\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastFour: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastFour,\n        };\n    }\n\n    private _getPaymentDataRequest(): GooglePayPaymentDataRequestV2 {\n        if (!this._paymentDataRequest) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._paymentDataRequest;\n    }\n\n    private _getGooglePayClient(google: GooglePaySDK, testMode?: boolean): GooglePayClient {\n        if (testMode === undefined) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const environment: EnvironmentType = testMode ? 'TEST' : 'PRODUCTION';\n\n        return new google.payments.api.PaymentsClient({ environment });\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    private _mapGooglePayAddressToBillingAddress(paymentData: GooglePaymentData, id: string): BillingAddressUpdateRequestBody {\n        return {\n            id,\n            firstName: paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(0, -1).join(' '),\n            lastName: paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(-1).join(' '),\n            company: paymentData.paymentMethodData.info.billingAddress.companyName,\n            address1: paymentData.paymentMethodData.info.billingAddress.address1,\n            address2: paymentData.paymentMethodData.info.billingAddress.address2 + paymentData.paymentMethodData.info.billingAddress.address3,\n            city: paymentData.paymentMethodData.info.billingAddress.locality,\n            stateOrProvince: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            stateOrProvinceCode: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            postalCode: paymentData.paymentMethodData.info.billingAddress.postalCode,\n            countryCode: paymentData.paymentMethodData.info.billingAddress.countryCode,\n            phone: paymentData.paymentMethodData.info.billingAddress.phoneNumber,\n            customFields: [],\n            email: paymentData.email,\n        };\n    }\n\n    private _mapGooglePayAddressToShippingAddress(address: GooglePayAddress): AddressRequestBody {\n        return {\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n\n    private _postForm(postPaymentData: TokenizePayload): Promise<Response<void>> {\n        const cardInformation = postPaymentData.details;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: postPaymentData.type,\n                nonce: postPaymentData.nonce,\n                provider: this._getMethodId(),\n                action: 'set_external_checkout',\n                card_information: this._getCardInformation(cardInformation),\n            },\n        });\n    }\n\n    private _updateBillingAddress(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        const remoteBillingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        if (!remoteBillingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const googlePayAddressMapped = this._mapGooglePayAddressToBillingAddress(paymentData, remoteBillingAddress.id);\n\n        return this._store.dispatch(\n            this._billingAddressActionCreator.updateAddress(googlePayAddressMapped)\n        );\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { GooglePayHostWindow, GooglePaySDK } from './googlepay';\n\nexport default class GooglePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GooglePayHostWindow = window\n    ) {}\n\n    load(): Promise<GooglePaySDK> {\n        return this._scriptLoader\n            .loadScript('https://pay.google.com/gp/p/js/pay.js')\n            .then(() => {\n                if (!this._window.google) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.google;\n            });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../../../billing';\nimport { CheckoutRequestSender, CheckoutStore } from '../../../checkout';\nimport { CustomerRequestSender } from '../../../customer';\nimport { ConsignmentActionCreator, ConsignmentRequestSender } from '../../../shipping';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport PaymentMethodRequestSender from '../../payment-method-request-sender';\n\nimport { GooglePayInitializer } from './googlepay';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default function createGooglePayPaymentProcessor(store: CheckoutStore, initializer: GooglePayInitializer): GooglePayPaymentProcessor {\n    const requestSender = createRequestSender();\n    const scriptLoader = getScriptLoader();\n\n    return new GooglePayPaymentProcessor(\n        store,\n        new PaymentMethodActionCreator(\n            new PaymentMethodRequestSender(requestSender)\n        ),\n        new GooglePayScriptLoader(scriptLoader),\n        initializer,\n        new BillingAddressActionCreator(\n            new BillingAddressRequestSender(requestSender),\n            new CustomerRequestSender(requestSender)\n        ),\n        new ConsignmentActionCreator(\n            new ConsignmentRequestSender(requestSender),\n            new CheckoutRequestSender(requestSender)\n        ),\n        requestSender\n    );\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a shopper tries to sign in as a guest but\n * they are already signed in as a registered customer.\n */\nexport default class UnableToContinueAsGuestError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to continue as a guest because the customer is already signed in.');\n\n        this.name = 'UnableToContinueAsGuestError';\n        this.type = 'unable_to_continue_as_guest';\n    }\n}\n","import { RequestError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the customer fails to be updated\n */\nexport default class UpdateCustomerError extends RequestError {\n    constructor(response?: Response) {\n        super(response);\n\n        this.name = 'UpdateCustomerError';\n        this.type = 'update_customer';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Response } from '@bigcommerce/request-sender';\nimport { concat, defer, empty, merge, of, Observable, Observer } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Checkout, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { CustomerAction, CustomerActionType, CustomerRequestSender, GuestCredentials } from '../customer';\n\nimport { BillingAddressRequestSender } from '.';\nimport { BillingAddressUpdateRequestBody } from './billing-address';\nimport { BillingAddressActionType, ContinueAsGuestAction, UpdateBillingAddressAction } from './billing-address-actions';\nimport { UnableToContinueAsGuestError, UpdateCustomerError } from './errors';\n\nexport default class BillingAddressActionCreator {\n    constructor(\n        private _requestSender: BillingAddressRequestSender,\n        private _customerRequestSender: CustomerRequestSender\n    ) {}\n\n    continueAsGuest(\n        credentials: GuestCredentials,\n        options?: RequestOptions\n    ): ThunkAction<ContinueAsGuestAction | CustomerAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const customer = state.customer.getCustomer();\n\n            if (customer && !customer.isGuest) {\n                throw new UnableToContinueAsGuestError();\n            }\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            let billingAddressRequestBody: Partial<BillingAddressUpdateRequestBody>;\n\n            if (!billingAddress) {\n                billingAddressRequestBody = credentials;\n            } else {\n                const { country, ...existingBillingAddressRequestBody } = billingAddress;\n\n                billingAddressRequestBody = {\n                    ...existingBillingAddressRequestBody,\n                    ...credentials,\n                };\n            }\n\n            return merge(\n                concat(\n                    of(createAction(BillingAddressActionType.ContinueAsGuestRequested)),\n                    defer(async () => {\n                        const { body } = await this._createOrUpdateBillingAddress(\n                            checkout.id,\n                            billingAddressRequestBody,\n                            options\n                        );\n\n                        return createAction(BillingAddressActionType.ContinueAsGuestSucceeded, body);\n                    })\n                ).pipe(\n                    catchError(error => throwErrorAction(BillingAddressActionType.ContinueAsGuestFailed, error))\n                ),\n                this._updateCustomerConsent(credentials, options)\n            );\n        };\n    }\n\n    updateAddress(\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): ThunkAction<UpdateBillingAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateBillingAddressAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(BillingAddressActionType.UpdateBillingAddressRequested));\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            // If email is not present in the address provided by the client, then\n            // fall back to the stored email as it could have been set separately\n            // using a convenience method. We can't rely on billingAddress having\n            // an ID to consider that there's a preexisting email, as billingAddress\n            // object from Order doesn't have an ID.\n            const billingAddressRequestBody = {\n                ...address,\n                email: typeof address.email === 'undefined' && billingAddress ? billingAddress.email : address.email,\n            };\n\n            if (billingAddress && billingAddress.id) {\n                billingAddressRequestBody.id = billingAddress.id;\n            }\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.UpdateBillingAddressSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.UpdateBillingAddressFailed, response));\n                });\n        });\n    }\n\n    private _updateCustomerConsent(\n        {\n            email,\n            marketingEmailConsent,\n        }: GuestCredentials,\n        options?: RequestOptions\n    ): Observable<CustomerAction> {\n        if (marketingEmailConsent === undefined || marketingEmailConsent === null) {\n            return empty();\n        }\n\n        return concat(\n            of(createAction(CustomerActionType.UpdateCustomerRequested)),\n            defer(async () => {\n                const { body } = await this._customerRequestSender.updateCustomer({\n                    email,\n                    acceptsMarketing: marketingEmailConsent,\n                }, options);\n\n                return createAction(CustomerActionType.UpdateCustomerSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(\n                CustomerActionType.UpdateCustomerFailed,\n                new UpdateCustomerError(error)\n            ))\n        );\n    }\n\n    private _createOrUpdateBillingAddress(\n        checkoutId: string,\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): Promise<Response<Checkout>> {\n        if (!address.id) {\n            return this._requestSender.createAddress(checkoutId, address, options);\n        }\n\n        return this._requestSender.updateAddress(checkoutId, address, options);\n    }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(subject: Subject<T>, selector: (shared: Observable<T>) => O): UnaryFunction<Observable<T>, ConnectableObservable<ObservedValueOf<O>>>;\nexport function multicast<T>(subjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic, MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```ts\n * import { fromEvent, timer } from 'rxjs';\n * import { throwIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the document was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport function throwIfEmpty <T>(errorFactory: (() => any) = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator<T> implements Operator<T, T> {\n  constructor(private errorFactory: () => any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n}\n\nclass ThrowIfEmptySubscriber<T> extends Subscriber<T> {\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>, private errorFactory: () => any) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  protected _complete() {\n    if (!this.hasValue) {\n      let err: any;\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n      this.destination.error(err);\n    } else {\n        return this.destination.complete();\n    }\n  }\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","export default class Timeout {\n    private _promise: Promise<any>;\n    private _resolve: () => void;\n    private _timeoutToken?: number;\n\n    constructor(\n        private _delay?: number\n    ) {\n        // tslint:disable-next-line:no-empty\n        this._resolve = () => {};\n\n        this._promise = new Promise(resolve => {\n            this._resolve = resolve;\n        });\n    }\n\n    onComplete(callback: () => void): void {\n        this._promise.then(callback);\n    }\n\n    complete(): void {\n        this._resolve();\n\n        if (this._timeoutToken) {\n            window.clearTimeout(this._timeoutToken);\n        }\n    }\n\n    start(): void {\n        if (this._delay) {\n            this._timeoutToken = window.setTimeout(() => this.complete(), this._delay);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { takeLast } from 'rxjs/operators';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { scan, mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n      this.destination.next(innerValue);\n  }\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isNil(value) {\n    if (value === null || value === undefined) {\n        return true;\n    }\n\n    return false;\n}\n","import isObject from './is-object';\n\n/**\n * @param {Object} object\n * @param {Function} predicateFn\n * @returns {Object}\n */\nexport default function omitProperty(object, predicateFn) {\n    if (!isObject(object)) {\n        return object;\n    }\n\n    const keys = Object.keys(object);\n\n    return keys.reduce((result, key) => {\n        const value = object[key];\n\n        if (!predicateFn(value)) {\n            result[key] = value;\n        }\n\n        return result;\n    }, {});\n}\n","import { MULTI_OPTION } from '../payment-method-types';\nimport {\n    BRAINTREE,\n    BRAINTREE_GOOGLEPAY,\n    BRAINTREE_PAYPAL,\n    BRAINTREE_PAYPAL_CREDIT,\n    BRAINTREE_VISACHECKOUT,\n} from '../payment-method-ids';\n\n/**\n * @param {string} id\n * @return {Boolean}\n */\nfunction isBraintreePaymentMethod(id) {\n    switch (id) {\n    case BRAINTREE_PAYPAL:\n    case BRAINTREE_PAYPAL_CREDIT:\n    case BRAINTREE_VISACHECKOUT:\n    case BRAINTREE_GOOGLEPAY:\n        return true;\n    default:\n        return false;\n    }\n}\n\nexport default class PaymentMethodIdMapper {\n    /**\n     * @returns {PaymentMethodIdMapper}\n     */\n    static create() {\n        return new PaymentMethodIdMapper();\n    }\n\n    /**\n     * @param {PaymentMethod} paymentMethod\n     * @returns {string}\n     */\n    mapToId(paymentMethod) {\n        let { id } = paymentMethod;\n\n        if (paymentMethod.method === MULTI_OPTION) {\n            id = paymentMethod.gateway;\n        }\n\n        if (isBraintreePaymentMethod(id)) {\n            return BRAINTREE;\n        }\n\n        return id;\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     */\n    get host() {\n        return this.config.host;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getOffsitePaymentUrl() {\n        return `${this.host}/pay/initialize`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getPaymentUrl() {\n        return `${this.host}/api/public/v1/orders/payments`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getGenerateClientTokenUrl() {\n        return `${this.host}/api/v2/public/payments/client_tokens`;\n    }\n}\n","import deepAssign from 'deep-assign';\nimport objectAssign from 'object-assign';\nimport { POST } from './method-types';\nimport DEFAULT_OPTIONS from './default-options';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\n\nexport default class RequestSender {\n    /**\n     * @returns {RequestSender}\n     */\n    static create() {\n        const requestFactory = RequestFactory.create();\n        const payloadTransformer = PayloadTransformer.create();\n\n        return new RequestSender(requestFactory, payloadTransformer);\n    }\n\n    /**\n     * @param {RequestFactory} requestFactory\n     * @param {PayloadTransformer} payloadTransformer\n     */\n    constructor(requestFactory, payloadTransformer) {\n        /**\n         * @private\n         * @type {RequestFactory}\n         */\n        this.requestFactory = requestFactory;\n\n        /**\n         * @private\n         * @type {PayloadTransformer}\n         */\n        this.payloadTransformer = payloadTransformer;\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    sendRequest(url, data, options, callback) {\n        const mergedOptions = deepAssign({}, DEFAULT_OPTIONS, options);\n\n        const xhr = this.requestFactory.createRequest(url, mergedOptions, (error) => {\n            const response = this.payloadTransformer.fromResponse(xhr);\n\n            if (!callback) {\n                return;\n            }\n\n            if (error || !this.isSuccessfulRequest(xhr)) {\n                callback(response);\n                return;\n            }\n\n            callback(null, response);\n        });\n\n        const payload = this.payloadTransformer.toRequest(data, mergedOptions.headers['Content-Type']);\n\n        xhr.send(payload);\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    postRequest(url, data, options, callback) {\n        const mergedOptions = objectAssign({}, options, {\n            method: POST,\n        });\n\n        this.sendRequest(url, data, mergedOptions, callback);\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @returns {boolean}\n     */\n    isSuccessfulRequest(xhr) {\n        return xhr.status >= 200 && xhr.status < 300;\n    }\n}\n","export const GET = 'GET';\nexport const POST = 'POST';\nexport const DELETE = 'DELETE';\n","import { CookiesStatic } from 'js-cookie';\nimport merge from 'lodash/merge';\n\nimport isPromise from './is-promise';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestOptions from './request-options';\nimport RequestSenderOptions from './request-sender-options';\nimport Response from './response';\nimport Timeout from './timeout';\n\nexport default class RequestSender {\n    constructor(\n        private _requestFactory: RequestFactory,\n        private _payloadTransformer: PayloadTransformer,\n        private _cookie: CookiesStatic,\n        private _options?: RequestSenderOptions\n    ) {}\n\n    sendRequest<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        const requestOptions = this._mergeDefaultOptions(options);\n        const request = this._requestFactory.createRequest(this._prependHost(url), requestOptions);\n\n        return new Promise((resolve, reject) => {\n            const requestHandler = () => {\n                const response = this._payloadTransformer.toResponse(request);\n\n                if (response.status >= 200 && response.status < 300) {\n                    resolve(response);\n                } else {\n                    reject(response);\n                }\n            };\n\n            request.onload = requestHandler;\n            request.onerror = requestHandler;\n            request.onabort = requestHandler;\n            request.ontimeout = requestHandler;\n\n            if (requestOptions.timeout instanceof Timeout) {\n                requestOptions.timeout.onComplete(() => request.abort());\n                requestOptions.timeout.start();\n            }\n\n            if (isPromise(requestOptions.timeout)) {\n                requestOptions.timeout.then(() => request.abort());\n            }\n\n            request.send(this._payloadTransformer.toRequestBody(requestOptions));\n        });\n    }\n\n    get<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'GET' });\n    }\n\n    post<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'POST' });\n    }\n\n    put<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PUT' });\n    }\n\n    patch<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PATCH' });\n    }\n\n    delete<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'DELETE' });\n    }\n\n    private _mergeDefaultOptions(options?: RequestOptions): RequestOptions {\n        const defaultOptions: Partial<RequestOptions> = {\n            credentials: true,\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n            },\n            method: 'GET',\n        };\n\n        const csrfToken = this._cookie.get('XSRF-TOKEN');\n\n        if (csrfToken && defaultOptions.headers) {\n            defaultOptions.headers['X-XSRF-TOKEN'] = csrfToken;\n        }\n\n        if (options && options.body && defaultOptions.headers) {\n            defaultOptions.headers['Content-Type'] = 'application/json';\n        }\n\n        return merge({}, defaultOptions, options);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options || !this._options.host || /^https?:\\/\\//.test(url)) {\n            return url;\n        }\n\n        return `${this._options.host.replace(/\\/$/, '')}/${url.replace(/^\\//, '')}`;\n    }\n}\n","import { merge } from 'lodash';\nimport {\n    defer,\n    from,\n    of,\n    throwError,\n    BehaviorSubject,\n    Observable,\n    Subject,\n    Subscribable,\n    SubscribableOrPromise\n} from 'rxjs';\nimport {\n    catchError,\n    concatMap,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    mergeMap,\n    scan,\n    skip,\n    tap,\n} from 'rxjs/operators';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport deepFreeze from './deep-freeze';\nimport DispatchableDataStore, { DispatchableAction, DispatchOptions } from './dispatchable-data-store';\nimport isObservableActionLike from './is-observable-action-like';\nimport noopActionTransformer from './noop-action-transformer';\nimport noopStateTransformer from './noop-state-transformer';\nimport ReadableDataStore, { Filter, Subscriber, SubscribeOptions, Unsubscriber } from './readable-data-store';\nimport Reducer from './reducer';\nimport ThunkAction from './thunk-action';\n\nexport default class DataStore<TState, TAction extends Action = Action, TTransformedState = TState> implements\n    ReadableDataStore<TTransformedState>, DispatchableDataStore<TTransformedState, TAction> {\n    private _reducer: Reducer<TState, TAction>;\n    private _options: DataStoreOptions<TState, TAction, TTransformedState>;\n    private _notification$: Subject<TTransformedState>;\n    private _dispatchers: { [key: string]: Dispatcher<TAction> };\n    private _dispatchQueue$: Subject<Dispatcher<TAction>>;\n    private _state$: BehaviorSubject<TTransformedState>;\n    private _errors: { [key: string]: Subject<Error> };\n\n    constructor(\n        reducer: Reducer<TState, TAction>,\n        initialState: Partial<TState> = {},\n        options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n    ) {\n        this._reducer = reducer;\n        this._options = {\n            actionTransformer: noopActionTransformer,\n            equalityCheck: shallowEqual,\n            shouldWarnMutation: true,\n            stateTransformer: noopStateTransformer,\n            ...options,\n        };\n        this._state$ = new BehaviorSubject(this._options.stateTransformer(initialState as TState));\n        this._notification$ = new Subject();\n        this._dispatchers = {};\n        this._dispatchQueue$ = new Subject();\n        this._errors = {};\n\n        this._dispatchQueue$\n            .pipe(\n                mergeMap(dispatcher$ => dispatcher$.pipe(concatMap(action$ => action$))),\n                filter(action => !!action.type),\n                scan(\n                    (states: StateTuple<TState, TTransformedState>, action: TAction) =>\n                        this._transformStates(states, action),\n                    {\n                        state: initialState as TState,\n                        transformedState: this._state$.getValue(),\n                    }\n                ),\n                distinctUntilChanged(({ state: stateA }, { state: stateB }) =>\n                    this._options.equalityCheck(stateA, stateB)\n                ),\n                map(({ transformedState }) => transformedState)\n            )\n            .subscribe(this._state$);\n\n        this.dispatch({ type: 'INIT' } as TAction);\n    }\n\n    dispatch<TDispatchAction extends TAction>(\n        action: DispatchableAction<TDispatchAction, TTransformedState>,\n        options?: DispatchOptions\n    ): Promise<TTransformedState> {\n        if (isObservableActionLike(action)) {\n            return this._dispatchObservableAction(action, options);\n        }\n\n        if (typeof action === 'function') {\n            return this._dispatchThunkAction(action, options);\n        }\n\n        return this._dispatchAction(action);\n    }\n\n    getState(): TTransformedState {\n        return this._state$.getValue();\n    }\n\n    notifyState(): void {\n        this._notification$.next(this.getState());\n    }\n\n    subscribe(subscriber: Subscriber<TTransformedState>, ...filters: Array<Filter<TTransformedState>>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, options: SubscribeOptions<TTransformedState>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, ...args: any[]): Unsubscriber {\n        const options: SubscribeOptions<TTransformedState> = typeof args[0] === 'object' ? args[0] : undefined;\n        const filters: Array<Filter<TTransformedState>> = options ? (options.filters || []) : args;\n\n        let state$: Observable<TTransformedState> = this._state$;\n\n        if (filters.length > 0) {\n            state$ = state$.pipe(\n                distinctUntilChanged((stateA, stateB) =>\n                    filters.every(filterFn =>\n                        this._options.equalityCheck(filterFn(stateA), filterFn(stateB))\n                    )\n                )\n            );\n        }\n\n        if (options && options.initial === false) {\n            state$ = state$.pipe(skip(1));\n        }\n\n        const subscriptions = [\n            state$.subscribe(subscriber),\n            this._notification$.subscribe(subscriber),\n        ];\n\n        return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private _transformStates(\n        states: StateTuple<TState, TTransformedState>,\n        action: TAction\n    ): StateTuple<TState, TTransformedState> {\n        try {\n            const newState = this._options.shouldWarnMutation === false ?\n                this._reducer(states.state, action) :\n                deepFreeze(this._reducer(states.state, action), {\n                    equalityCheck: this._options.equalityCheck,\n                    previousValue: states.state,\n                });\n            const transformedState = this._options.stateTransformer(newState);\n\n            return { state: newState, transformedState };\n        } catch (error) {\n            this._getDispatchError(action.meta && action.meta.queueId).next(error);\n\n            return { state: states.state, transformedState: states.transformedState };\n        }\n    }\n\n    private _dispatchAction<TDispatchAction extends TAction>(\n        action: TDispatchAction\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(\n            action.error ? throwError(action) : of(action)\n        );\n    }\n\n    private _dispatchObservableAction<TDispatchAction extends TAction>(\n        action$: SubscribableOrPromise<TDispatchAction>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return new Promise((resolve, reject) => {\n            const error$ = this._getDispatchError(options.queueId);\n            const transformedAction$ = this._options.actionTransformer(\n                from(action$).pipe(\n                    map(action =>\n                        options.queueId ?\n                            merge({}, action, { meta: { queueId: options.queueId } }) :\n                            action\n                    )\n                ) as Subscribable<TDispatchAction>\n            );\n\n            this._getDispatcher(options.queueId).next(\n                from(transformedAction$)\n                    .pipe(\n                        map((action, index) => {\n                            if (index === 0) {\n                                error$.pipe(first()).subscribe(reject);\n                            }\n\n                            if (action.error) {\n                                reject(action.payload);\n                            }\n\n                            return action;\n                        }),\n                        catchError(action => {\n                            reject(action instanceof Error ? action : action.payload);\n\n                            return of(action);\n                        }),\n                        tap({\n                            complete: () => {\n                                resolve(this.getState());\n                            },\n                        })\n                    )\n            );\n        });\n    }\n\n    private _dispatchThunkAction<TDispatchAction extends TAction>(\n        thunkAction: ThunkAction<TDispatchAction, TTransformedState>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(defer(() => thunkAction(this)), options);\n    }\n\n    private _getDispatcher(queueId: string = 'default'): Dispatcher<TAction> {\n        if (!this._dispatchers[queueId]) {\n            this._dispatchers[queueId] = new Subject();\n\n            this._dispatchQueue$.next(this._dispatchers[queueId]);\n        }\n\n        return this._dispatchers[queueId];\n    }\n\n    private _getDispatchError(queueId: string = 'default'): Subject<Error> {\n        if (!this._errors[queueId]) {\n            this._errors[queueId] = new Subject();\n        }\n\n        return this._errors[queueId];\n    }\n}\n\nexport interface DataStoreOptions<TState, TAction, TTransformedState> {\n    shouldWarnMutation: boolean;\n    actionTransformer(action: Subscribable<TAction>): Subscribable<TAction>;\n    equalityCheck(valueA: any, valueB: any): boolean;\n    stateTransformer(state: TState): TTransformedState;\n}\n\ninterface StateTuple<TState, TTransformedState> {\n    state: TState;\n    transformedState: TTransformedState;\n}\n\ntype Dispatcher<TAction> = Subject<Subscribable<TAction>>;\n","import { isPlainObject } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nexport interface DeepFreezeOptions<T> {\n    previousValue?: T;\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n\nexport default function deepFreeze<T>(object: T[], options?: DeepFreezeOptions<T>): ReadonlyArray<T>;\nexport default function deepFreeze<T extends object>(object: T, options?: DeepFreezeOptions<T>): Readonly<T>;\nexport default function deepFreeze<T>(object: T, options?: DeepFreezeOptions<T>): T;\nexport default function deepFreeze<T>(\n    object: T[] | T,\n    options?: DeepFreezeOptions<T>\n): ReadonlyArray<T> | Readonly<T> | T {\n    try {\n        const { equalityCheck = shallowEqual, previousValue = null } = options || {};\n\n        if (equalityCheck(object, previousValue) && Object.isFrozen(previousValue)) {\n            return previousValue as T;\n        }\n\n        if (Object.isFrozen(object) || (!Array.isArray(object) && !isPlainObject(object))) {\n            return object;\n        }\n\n        if (Array.isArray(object)) {\n            return Object.freeze(object.map((value, index) =>\n                deepFreeze(value, {\n                    equalityCheck,\n                    previousValue: Array.isArray(previousValue) ? previousValue[index] : undefined,\n                })\n            ));\n        }\n\n        return Object.freeze(Object.getOwnPropertyNames(object).reduce((result, key) => {\n            result[key as keyof T] = deepFreeze(object[key as keyof T], {\n                equalityCheck,\n                previousValue: previousValue && previousValue.hasOwnProperty(key) ?\n                    (previousValue as any)[key] :\n                    undefined,\n            });\n\n            return result;\n        }, {} as T));\n    } catch (error) {\n        // Browsers that only support ES5 will throw `TypeError` when checking\n        // if a primitive value is frozen or trying to freeze a primitive value.\n        if (error instanceof TypeError) {\n            return object;\n        }\n\n        throw error;\n    }\n}\n","import { assign } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function combineReducers<TState, TAction extends Action = Action>(\n    reducers: ReducerMap<TState, TAction>,\n    options?: CombineReducersOptions\n): Reducer<TState, TAction> {\n    const { equalityCheck = shallowEqual } = options || {};\n\n    return (state, action) =>\n        Object.keys(reducers).reduce((result, key) => {\n            const reducer = reducers[key as keyof TState];\n            const currentState = state ? state[key as keyof TState] : undefined;\n            const newState = reducer(currentState, action);\n\n            if (equalityCheck(currentState, newState) && result) {\n                return result;\n            }\n\n            return assign({}, result, { [key]: newState });\n        }, state || {} as TState);\n}\n\nexport type ReducerMap<TState, TAction extends Action = Action> = {\n    [Key in keyof TState]: Reducer<TState[Key], TAction>;\n};\n\nexport interface CombineReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import { omitBy } from 'lodash';\n\nimport Action from './action';\n\nexport default function createAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    if (typeof type !== 'string' || type === '') {\n        throw new Error('`type` must be a string');\n    }\n\n    return { type, ...omitBy({ payload, meta }, value => value === undefined) };\n}\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { audit } from 'rxjs/operators'\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      let duration;\n      try {\n        const { durationSelector } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n      const innerSubscription = subscribeToResult(this, duration);\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n    let key: any;\n    try {\n      const { keySelector } = this;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    let result = false;\n    if (this.hasKey) {\n      try {\n        const { compare } = this;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { intrerval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: SchedulerAction<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadScriptOptions {\n    async: boolean;\n    attributes: ScriptAttributes;\n}\n\nexport interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport interface ScriptAttributes {\n    [key: string]: string;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<void> } = {};\n    private _preloadedScripts: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadScript(src: string, options?: LoadScriptOptions): Promise<void> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n                const { async = false, attributes = {} } = options || {};\n\n                Object.keys(attributes)\n                    .forEach(key => {\n                        script.setAttribute(key, attributes[key]);\n                    });\n\n                script.onload = () => resolve();\n                script.onreadystatechange = () => resolve();\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = async;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[], options?: LoadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadScript(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<void> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedScript = document.createElement('link');\n\n                    preloadedScript.as = 'script';\n                    preloadedScript.rel = rel;\n                    preloadedScript.href = url;\n\n                    preloadedScript.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedScript.onerror = () => {\n                        delete this._preloadedScripts[url];\n                        reject();\n                    };\n\n                    document.head.appendChild(preloadedScript);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'application/javascript' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)))\n            .then(() => undefined);\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","export default class BrowserSupport {\n    canSupportRel(rel: string): boolean {\n        const link = document.createElement('link');\n\n        return !!(\n            link.relList &&\n            link.relList.supports &&\n            link.relList.supports(rel)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadStylesheetOptions {\n    prepend: boolean;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<void> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<void> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false } = options || {};\n\n                stylesheet.onload = () => resolve();\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<void> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedStylesheet = document.createElement('link');\n\n                    preloadedStylesheet.as = 'style';\n                    preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                    preloadedStylesheet.href = url;\n\n                    preloadedStylesheet.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedStylesheet.onerror = event => {\n                        delete this._preloadedStylesheets[url];\n                        reject(event);\n                    };\n\n                    document.head.appendChild(preloadedStylesheet);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'text/css' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","import FormBuilder from './form-builder';\nimport FormPosterOptions from './form-poster-options';\nimport { isAbsoluteUrl, joinPaths } from './url-utils';\n\nexport default class FormPoster {\n    /**\n     * @internal\n     */\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _options?: FormPosterOptions\n    ) {}\n\n    postForm(url: string, data: { [key: string]: any }, callback?: () => void, target?: string): void {\n        const form = this._formBuilder.build(this._prependHost(url), data, target);\n\n        window.addEventListener('unload', function handleUnload() {\n            window.removeEventListener('unload', handleUnload);\n\n            if (callback) {\n                callback();\n            }\n        });\n\n        // In order to submit the form, the form must be attached to DOM.\n        document.body.appendChild(form);\n        form.submit();\n        document.body.removeChild(form);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options || !this._options.host || isAbsoluteUrl(url)) {\n            return url;\n        }\n\n        return joinPaths(this._options.host, url);\n    }\n}\n","export const API = 'PAYMENT_TYPE_API';\nexport const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n","export const APPLICATION_JSON = 'application/json';\n","import * as cookie from 'js-cookie';\n\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestSender from './request-sender';\nimport RequestSenderOptions from './request-sender-options';\n\nexport default function createRequestSender(options?: RequestSenderOptions): RequestSender {\n    return new RequestSender(\n        new RequestFactory(),\n        new PayloadTransformer(),\n        cookie,\n        options\n    );\n}\n","import Headers from './headers';\nimport RequestOptions from './request-options';\nimport Response from './response';\nimport toFormUrlEncoded from './to-form-url-encoded';\n\nconst JSON_CONTENT_TYPE_REGEXP = /application\\/(\\w+\\+)?json/;\nconst FORM_URLENCODED_CONTENT_TYPE_REGEXP = /application\\/x-www-form-urlencoded/;\n\nexport default class PayloadTransformer {\n    toRequestBody(options: RequestOptions): any {\n        const contentType = options.headers ? this._getHeader(options.headers, 'Content-Type') : '';\n\n        if (options.body) {\n            if (JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return JSON.stringify(options.body);\n            }\n\n            if (FORM_URLENCODED_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return toFormUrlEncoded(options.body);\n            }\n        }\n\n        return options.body;\n    }\n\n    toResponse(xhr: XMLHttpRequest): Response {\n        const headers = this._parseResponseHeaders(xhr.getAllResponseHeaders());\n\n        // Using `responseText` to support legacy IE\n        const body = this._parseResponseBody(\n            'response' in xhr ? xhr.response : (xhr as any).responseText,\n            headers\n        );\n\n        return {\n            body,\n            headers,\n            status: xhr.status,\n            statusText: xhr.statusText,\n        };\n    }\n\n    private _parseResponseBody(body: string, headers: Headers): any {\n        const contentType = this._getHeader(headers, 'Content-Type');\n\n        if (body && JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n            return JSON.parse(body);\n        }\n\n        return body;\n    }\n\n    private _parseResponseHeaders(rawHeaders: string): Headers {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return {\n                ...headers,\n                [key.toLowerCase()]: parts.join(':').trim(),\n            };\n        }, {});\n    }\n\n    private _getHeader(headers: Headers, key: string): string {\n        if (!headers || !key) {\n            return '';\n        }\n\n        return headers[key] || headers[key.toLowerCase()] || '';\n    }\n}\n","export default function toFormUrlEncoded(data: any): string {\n    if (typeof data !== 'object' || data === null) {\n        return data;\n    }\n\n    return Object.keys(data)\n        .filter(key => data[key] !== undefined)\n        .map(key => {\n            const value = data[key];\n\n            if (typeof value === 'string') {\n                return `${key}=${encodeURIComponent(value)}`;\n            }\n\n            return `${key}=${encodeURIComponent(JSON.stringify(value) || '')}`;\n        })\n        .join('&');\n}\n","import * as queryString from 'query-string';\n\nimport Headers from './headers';\nimport RequestOptions from './request-options';\n\nexport default class RequestFactory {\n    createRequest(url: string, options?: RequestOptions): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        this._configureRequest(xhr, url, options);\n\n        return xhr;\n    }\n\n    private _configureRequest(xhr: XMLHttpRequest, url: string, options: RequestOptions = {}): void {\n        xhr.open(options.method || 'GET', this._formatUrl(url, options.params), true);\n\n        if (options.headers) {\n            this._configureRequestHeaders(xhr, options.headers);\n        }\n\n        if (typeof options.credentials === 'boolean') {\n            xhr.withCredentials = options.credentials;\n        }\n\n        if (typeof options.timeout === 'number') {\n            xhr.timeout = options.timeout;\n        }\n    }\n\n    private _configureRequestHeaders(xhr: XMLHttpRequest, headers: Headers): void {\n        Object.keys(headers).forEach(key => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n    }\n\n    private _formatUrl(url: string, params?: object): string {\n        if (!params || Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params)}`;\n    }\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","export default function isPromise(promise: any): promise is PromiseLike<any> {\n    return !!promise &&\n        (typeof promise === 'object' || typeof promise === 'function') &&\n        typeof promise.then === 'function';\n}\n","import Timeout from './timeout';\n\nexport default function createTimeout(delay?: number): Timeout {\n    return new Timeout(delay);\n}\n","import { Subscribable, SubscribableOrPromise } from 'rxjs';\n\nimport Action from './action';\nimport { DispatchableAction } from './dispatchable-data-store';\n\nexport default function isObservableActionLike<TAction extends Action = Action>(\n    action: DispatchableAction<TAction>\n): action is SubscribableOrPromise<TAction> {\n    return (\n        typeof (action as Subscribable<TAction>).subscribe === 'function' ||\n        typeof (action as PromiseLike<TAction>).then === 'function'\n    );\n}\n","import { Subscribable } from 'rxjs';\n\nimport Action from './action';\n\nexport default function noopActionTransformer<TAction extends Action, TTransformedAction extends Action = TAction>(\n    action: Subscribable<TAction>\n): Subscribable<TTransformedAction> {\n    return action as any as Subscribable<TTransformedAction>;\n}\n","export default function noopStateTransformer<TState, TTransformedState = TState>(\n    state: TState\n): TTransformedState {\n    return state as any as TTransformedState;\n}\n","import { curryRight, flowRight } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function composeReducers<TState, TStateA, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TState, action: TAction) => TStateA,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TState, action: TAction) => TStateB,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TState, action: TAction) => TStateC,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TStateD, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TStateD, action: TAction) => TStateC,\n    reducerE: (state: TState, action: TAction) => TStateD,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TAction extends Action = Action>(\n    ...args: any[]\n): Reducer<TState, TAction> {\n    let reducers: Array<Reducer<TState, TAction>> = args;\n    let options: ComposeReducersOptions = {};\n\n    if (typeof args[args.length - 1] === 'object') {\n        reducers = args.slice(0, -1);\n        options = { ...options, ...args[args.length - 1] };\n    }\n\n    const { equalityCheck = shallowEqual } = options;\n\n    return (state, action) => {\n        const newState = flowRight(\n            reducers\n                .filter(reducer => reducer.length === 2)\n                .map(reducer => curryRight(reducer)(action))\n        )(state);\n\n        return equalityCheck(state, newState) ? state : newState;\n    };\n}\n\nexport interface ComposeReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import Action from './action';\nimport combineReducers, { ReducerMap } from './combine-reducers';\nimport DataStore, { DataStoreOptions } from './data-store';\nimport Reducer from './reducer';\n\nexport default function createDataStore<TState, TAction extends Action = Action, TTransformedState = TState>(\n    reducer: Reducer<TState, TAction> | ReducerMap<TState, TAction>,\n    initialState?: Partial<TState>,\n    options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n): DataStore<TState, TAction, TTransformedState> {\n    if (typeof reducer === 'function') {\n        return new DataStore(reducer, initialState, options);\n    }\n\n    return new DataStore(\n        combineReducers(reducer, { equalityCheck: options && options.equalityCheck }),\n        initialState,\n        options\n    );\n}\n","import Action from './action';\nimport createAction from './create-action';\n\nexport default function createErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    return {\n        ...createAction(type, payload, meta),\n        error: true,\n    };\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import lodashMemoize from 'lodash.memoize'; // tslint:disable-line:match-default-export-name\nimport shallowEqual from 'shallowequal';\n\nimport CacheKeyResolver from './cache-key-resolver';\nimport { Omit } from './types';\n\nexport interface MemoizeOptions {\n    maxSize?: number;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\nexport default function memoize<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: MemoizeOptions\n) {\n    const { maxSize, isEqual } = { maxSize: 0, isEqual: shallowEqual, ...options };\n    const cache = new Map();\n    const resolver = new CacheKeyResolver({\n        isEqual,\n        maxSize,\n        onExpire: key => cache.delete(key),\n    });\n    const memoized = lodashMemoize(fn, (...args) => resolver.getKey(...args));\n\n    memoized.cache = cache;\n\n    return memoized;\n}\n\nexport function memoizeOne<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: Omit<MemoizeOptions, 'maxSize'>\n) {\n    return memoize(fn, { ...options, maxSize: 1 });\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport {\n    isRootCacheKeyMap,\n    isTerminalCacheKeyMap,\n    ChildCacheKeyMap,\n    IntermediateCacheKeyMap,\n    RootCacheKeyMap,\n    TerminalCacheKeyMap\n} from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            isEqual: shallowEqual,\n            maxSize: 0,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { buffer } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { bufferToggle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { bufferWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(subscribeToResult(this, closingNotifier));\n    this.subscribing = false;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      this.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(observable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMapTo, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { count, takeUntil } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```ts\n * import { range } from 'rxjs';\n * import { count } from 'rxjs/operators';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { debounce } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { debounceTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { delayWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```ts\n * import { of, Notification } from 'rxjs';\n * import { dematerialize } from 'rxjs/operators';\n *\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { elementAt } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\n\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { endWith } from 'rxjs/operators';\n *\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```ts\n * import { of } from 'rxjs';\n * import { every } from 'rxjs/operators';\n *\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaust, map, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaustMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(ev => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: any) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { expand, mapTo, delay, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: SchedulerLike = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      try {\n        const { project } = this;\n        const result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n          const destination = this.destination as Subscription;\n          destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```ts\n * import { of } from 'rxjs';\n * import { ignoreElements } from 'rxjs/operators';\n *\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```ts\n * import { of } from 'rxjs';\n * import { materialize, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservedValueOf } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, O extends ObservableInput<any>>(innerObservable: O, concurrent?: number): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(innerObservable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const destination = this.destination;\n      let ish;\n      try {\n        const { accumulator } = this;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n      this.active++;\n      this._innerSub(ish, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T>(): OperatorFunction<T, T>;\nexport function onErrorResumeNext<T, T2>(v: ObservableInput<T2>): OperatorFunction<T, T | T2>;\nexport function onErrorResumeNext<T, T2, T3>(v: ObservableInput<T2>, v2: ObservableInput<T3>): OperatorFunction<T, T | T2 | T3>;\nexport function onErrorResumeNext<T, T2, T3, T4>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, T7>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>, v6: ObservableInput<T7>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any>>): OperatorFunction<T, T | R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```ts\n * import { of } from 'rxjs';\n * import { onErrorResumeNext, map } from 'rxjs/operators';\n *\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n *        return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>>>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n  Array<ObservableInput<any>> |\n  ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return from(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (!!next) {\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n * @deprecated use `partition` static creation function instead\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4], K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pluck } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n * Make source$ hot by applying publish operator, then merge each inner observable into a single one\n * and subscribe.\n * ```ts\n * import { of, zip, interval, merge } from \"rxjs\";\n * import { map, publish, tap } from \"rxjs/operators\";\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n *   map(values => values[1])\n * );\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n *\n *\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, O extends ObservableInput<any>>(bufferSize?: number, windowTime?: number, selector?: (shared: Observable<T>) => O, scheduler?: SchedulerLike): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes, at most count times.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Similar to {@link retry}, this operator repeats the stream of items emitted by the source for non error cases.\n * Repeat can be useful for creating observables that are meant to have some repeated pattern or rhythm.\n *\n * Note: `repeat(0)` returns an empty observable and `repeat()` will repeat forever\n *\n * ## Example\n * Repeat a message stream\n * ```ts\n * import { of } from 'rxjs';\n * import { repeat, delay } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const example = source.pipe(repeat(3));\n * example.subscribe(x => console.log(x));\n *\n * // Results\n * // Repeat message\n * // Repeat message\n * // Repeat message\n * ```\n *\n * Repeat 3 values, 2 times\n * ```ts\n * import { interval } from 'rxjs';\n * import { repeat, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(take(3), repeat(2));\n * example.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that will resubscribe to the source stream when the source stream completes\n * , at most count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n * Repeat a message stream on click\n * ```ts\n * import { of, fromEvent } from 'rxjs';\n * import { repeatWhen } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * source.pipe(repeatWhen(() => documentClick$)\n * ).subscribe(data => console.log(data))\n * ```\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    let retries;\n    try {\n      const { notifier } = this;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n *\n * ## Example\n * ```ts\n * import { interval, of, throwError } from 'rxjs';\n * import { mergeMap, retry } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   mergeMap(val => {\n *     if(val > 5){\n *       return throwError('Error!');\n *     }\n *     return of(val);\n *   }),\n *   //retry 2 times on error\n *   retry(2)\n * );\n *\n * const subscribe = example.subscribe({\n *   next: val => console.log(val),\n *   error: val => console.log(`${val}: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // \"Error!: Retried 2 times then quit!\"\n * ```\n *\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const { notifier } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { sample } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparator?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparator } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { shareReplay, take } from 'rxjs/operators';\n *\n * const obs$ = interval(1000);\n * const shared$ = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * shared$.subscribe(x => console.log('source A: ', x));\n * shared$.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let config: ShareReplayConfig;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize as ShareReplayConfig;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize as number | undefined,\n      windowTime,\n      refCount: false,\n      scheduler\n    };\n  }\n  return (source: Observable<T>) => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator<T>({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler\n}: ShareReplayConfig) {\n  let subject: ReplaySubject<T> | undefined;\n  let refCount = 0;\n  let subscription: Subscription | undefined;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emitted.\n *\n * <span class=\"informal\">Like {@link first}, but emit with error notification if there is more than one value.</span>\n * ![](single.png)\n *\n * ## Example\n * emits 'error'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single());\n * numbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n * // result\n * // 'error'\n * ```\n *\n * emits 'undefined'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single(x => x === 10));\n * numbers.subscribe(x => console.log(x));\n * // result\n * // 'undefined'\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values ​​until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values ​​of the interval observable are skipped until the user clicks anywhere within the page.\n *\n * ```ts\n * import { interval, fromEvent } from 'rxjs';\n * import { skipUntil } from 'rxjs/operators';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * const subscribe = emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n * Given the following code:\n * ```javascript\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3, 4);\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n * This will result in the output of `1 2 3 4 5 6 7 8 9`.\n *\n * But if we instead us the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n * ```javascript\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3, 4).pipe(subscribeOn(asyncScheduler));\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * The output will instead be `5 6 7 8 9 1 2 3 4`.\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import {OperatorFunction, ObservableInput} from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one.\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchAll, map, tap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map((ev) => interval(1000)));\n *\n * source.pipe(\n *   switchAll()\n * ).subscribe(x => console.log(x));\n *\n /* Output\n *  click\n *  1\n *  2\n *  3\n *  4\n *  ...\n *  click\n *  1\n *  2\n *  3\n *  ...\n *  click\n *  ...\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n */\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\n/**\n *\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeinterval.png)\n *\n * ## Examples\n * Emit inteval between current value with the last value\n *\n * ```ts\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeInterval())\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // {value: 0, interval: 1000}\n * // {value: 1, interval: 1000}\n * // {value: 2, interval: 1000}\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return {Observable<{ interval: number, value: T }>} Observable that emit infomation about value and interval\n * @method timeInterval\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // TODO(benlesh): correct these typings.\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\n/**\n * @deprecated exposed API, use as interface only.\n */\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default it uses the *async* scheduler which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the documents click event.\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { timestamp } from 'rxjs/operators';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type {value: MouseEvent, timestamp: number}\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { window, mergeAll, map, take } from 'rxjs/operators';\n *\n *  const clicks = fromEvent(document, 'click');\n *  const sec = interval(1000);\n *  const result = clicks.pipe(\n *      window(sec),\n *      map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *      mergeAll(),              // flatten the Observable-of-Observables\n *  );\n *  result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, map, mergeAll, skip } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { windowToggle, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n      let closingNotifier;\n      try {\n        const { closingSelector } = this;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n\n      const window = new Subject<T>();\n      const subscription = new Subscription();\n      const context = { window, subscription };\n      this.contexts.push(context);\n      const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        (<any>innerSubscription).context = context;\n        subscription.add(innerSubscription);\n      }\n\n      this.destination.next(window);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { windowWhen, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll()                         // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, R>(source2: O2, project: (v1: T, v2: ObservedValueOf<O2>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v2: O2, v3: O3, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>>(source2: O2): OperatorFunction<T, [T, ObservedValueOf<O2>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v2: O2, v3: O3): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { withLatestFrom } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n","import FormBuilder from './form-builder';\nimport FormPoster from './form-poster';\nimport FormPosterOptions from './form-poster-options';\n\nexport default function createFormPoster(options?: FormPosterOptions): FormPoster {\n    const formBuilder = new FormBuilder();\n    const formPoster = new FormPoster(formBuilder, options);\n\n    return formPoster;\n}\n","export default class FormBuilder {\n    build(url: string, data: { [key: string]: any }, target?: string): HTMLFormElement {\n        const form = document.createElement('form');\n\n        form.style.display = 'none';\n\n        form.setAttribute('action', url);\n        form.setAttribute('method', 'POST');\n        form.setAttribute('target', target || '_top');\n\n        Object.keys(data)\n            .forEach(key => {\n                const value = data[key];\n\n                form.appendChild(this._createInput(value, key));\n            });\n\n        return form;\n    }\n\n    private _createInput(value: any, key: string): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.setAttribute('name', key);\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('value', value);\n\n        return input;\n    }\n}\n","export function isAbsoluteUrl(url: string): boolean {\n    return /^https?:\\/\\//.test(url);\n}\n\nexport function joinPaths(pathA: string, pathB: string): string {\n    return `${removeTrailingSlash(pathA)}/${removeLeadingSlash(pathB)}`;\n}\n\nfunction removeTrailingSlash(path: string): string {\n    return path.replace(/\\/$/, '');\n}\n\nfunction removeLeadingSlash(path: string): string {\n    return path.replace(/^\\//, '');\n}\n","import Client from './client/client';\n\n/**\n * @param {Object} [config]\n * @returns {Client}\n */\nexport function createClient(config) {\n    return Client.create(config);\n}\n","import objectAssign from 'object-assign';\nimport OffsitePaymentInitializer from '../payment/offsite-payment-initializer';\nimport PaymentSubmitter from '../payment/payment-submitter';\nimport ClientTokenGenerator from '../payment/client-token-generator';\nimport StoreRequestSender from '../store/store-request-sender';\nimport DEFAULT_CONFIG from './default-config';\n\nexport default class Client {\n    /**\n     * @param {Object} config\n     * @returns {Client}\n     */\n    static create(config) {\n        const clientConfig = objectAssign({}, DEFAULT_CONFIG, config);\n        const offsitePaymentInitializer = OffsitePaymentInitializer.create(clientConfig);\n        const paymentSubmitter = PaymentSubmitter.create(clientConfig);\n        const clientTokenGenerator = ClientTokenGenerator.create(clientConfig);\n        const storeRequestSender = StoreRequestSender.create(clientConfig);\n\n        return new Client(\n            clientConfig,\n            paymentSubmitter,\n            offsitePaymentInitializer,\n            clientTokenGenerator,\n            storeRequestSender\n        );\n    }\n\n    /**\n     * @param {Object} config\n     * @param {PaymentSubmitter} paymentSubmitter\n     * @param {OffsitePaymentInitializer} offsitePaymentInitializer\n     * @param {ClientTokenGenerator} clientTokenGenerator\n     * @param {StoreRequestSender} storeRequestSender\n     */\n    constructor(\n        config,\n        paymentSubmitter,\n        offsitePaymentInitializer,\n        clientTokenGenerator,\n        storeRequestSender\n    ) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n\n        /**\n         * @private\n         * @type {PaymentSubmitter}\n         */\n        this.paymentSubmitter = paymentSubmitter;\n\n        /**\n         * @private\n         * @type {OffsitePaymentInitializer}\n         */\n        this.offsitePaymentInitializer = offsitePaymentInitializer;\n\n        /**\n         * @private\n         * @type {ClientTokenGenerator}\n         */\n        this.clientTokenGenerator = clientTokenGenerator;\n\n        /**\n         * @private\n         * @type {StoreRequestSender}\n         */\n        this.storeRequestSender = storeRequestSender;\n    }\n\n    /**\n     * @param {string} host\n     * @returns {void}\n     */\n    setHost(host) {\n        this.config.host = host;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        this.offsitePaymentInitializer.initializeOffsitePayment(data, callback, target);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    submitPayment(data, callback) {\n        this.paymentSubmitter.submitPayment(data, callback);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        this.clientTokenGenerator.generateClientToken(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        this.storeRequestSender.loadInstruments(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {AddressData} data.shippingAddress\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        this.storeRequestSender.loadInstrumentsWithAddress(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.instrumentId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        this.storeRequestSender.deleteShopperInstrument(data, callback);\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { HOSTED } from './payment-types';\nimport PayloadMapper from './offsite-payment-mappers/payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class OffsitePaymentInitializer {\n    /**\n     * @param {Object} config\n     * @returns {OffsitePaymentInitializer}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const formPoster = createFormPoster();\n        const payloadMapper = PayloadMapper.create();\n\n        return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {FormPoster} formPoster\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, formPoster, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {FormPoster}\n         */\n        this.formPoster = formPoster;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     * @throws {Error}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getOffsitePaymentUrl();\n\n        this.formPoster.postForm(url, payload, callback, target);\n    }\n}\n","import objectAssign from 'object-assign';\nimport { omitNil, toString } from '../../common/utils';\nimport AddressMapper from './address-mapper';\nimport CustomerMapper from './customer-mapper';\nimport MetaMapper from './meta-mapper';\nimport PaymentMethodIdMapper from '../payment-method-mappers/payment-method-id-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const addressMapper = AddressMapper.create();\n        const customerMapper = CustomerMapper.create();\n        const metaMapper = MetaMapper.create();\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper);\n    }\n\n    /**\n     * @param {AddressMapper} addressMapper\n     * @param {CustomerMapper} customerMapper\n     * @param {MetaMapper} metaMapper\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @param {StoreMapper} storeMapper\n     * @returns {Object}\n     */\n    constructor(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper) {\n        /**\n         * @private\n         * @type {AddressMapper}\n         */\n        this.addressMapper = addressMapper;\n\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {MetaMapper}\n         */\n        this.metaMapper = metaMapper;\n\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const { authToken, order = {}, payment = {}, paymentMethod = {} } = data;\n\n        const payload = objectAssign(\n            {\n                amount: order.grandTotal ? order.grandTotal.integerAmount : null,\n                bc_auth_token: authToken,\n                currency: order.currency,\n                gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n                notify_url: order.callbackUrl,\n                order_id: order.orderId ? toString(order.orderId) : null,\n                page_title: document.title ? document.title : null,\n                payment_method_id: paymentMethod.id,\n                reference_id: order.orderId ? toString(order.orderId) : null,\n                return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            },\n            this.addressMapper.mapToBillingAddress(data),\n            this.customerMapper.mapToCustomer(data),\n            this.metaMapper.mapToMeta(data),\n            this.addressMapper.mapToShippingAddress(data),\n            this.storeMapper.mapToStore(data)\n        );\n\n        const { formattedPayload = {} } = payment;\n\n        objectAssign(payload, formattedPayload);\n\n        return omitNil(payload);\n    }\n}\n","/**\n * @param {array|string} items\n * @param {array|string} item\n * @returns {boolean}\n */\nexport default function includes(items, item) {\n    if (!Array.isArray(items) && typeof items !== 'string') {\n        return false;\n    }\n\n    return items.indexOf(item) !== -1;\n}\n","import isEmptyStringOrNil from './is-emptystring-or-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitEmptyStringAndNil(object) {\n    return omitProperty(object, isEmptyStringOrNil);\n}\n","import isEmptyString from './is-empty-string';\nimport isNil from './is-nil';\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyStringOrNil(value) {\n    return isEmptyString(value) || isNil(value);\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyString(value) {\n    return value === '';\n}\n","import isNil from './is-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitNil(object) {\n    return omitProperty(object, isNil);\n}\n","/**\n * @param {*} value\n * @returns {number}\n */\nexport default function toNumber(value) {\n    return parseFloat(value) || 0;\n}\n","/**\n * @param {string} string\n * @returns {string}\n */\nexport default function toSnakeCase(string) {\n    if (typeof string !== 'string') {\n        return string;\n    }\n\n    return string.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2')\n        .replace(/[-\\s]+/g, '_')\n        .toLowerCase();\n}\n","/**\n * @param {*} value\n * @returns {string}\n */\nexport default function toString(value) {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (typeof value === 'number' && !isNaN(value)) {\n        return value.toString();\n    }\n\n    return '';\n}\n","import { omitNil, toSnakeCase } from '../../common/utils';\n\nexport default class AddressMapper {\n    /**\n     * @returns {AddressMapper}\n     */\n    static create() {\n        return new AddressMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        return this.mapToAddress(data, 'billingAddress');\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n        const formattedAddressKey = toSnakeCase(addressKey);\n\n        return omitNil({\n            [`${formattedAddressKey}_city`]: address.city,\n            [`${formattedAddressKey}_company`]: address.company,\n            [`${formattedAddressKey}_country_code`]: address.countryCode,\n            [`${formattedAddressKey}_country`]: address.country,\n            [`${formattedAddressKey}_first_name`]: address.firstName,\n            [`${formattedAddressKey}_last_name`]: address.lastName,\n            [`${formattedAddressKey}_phone`]: address.phone,\n            [`${formattedAddressKey}_state_code`]: address.provinceCode,\n            [`${formattedAddressKey}_state`]: address.province,\n            [`${formattedAddressKey}_street_1`]: address.addressLine1,\n            [`${formattedAddressKey}_street_2`]: address.addressLine2,\n            [`${formattedAddressKey}_zip`]: address.postCode,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {}, store = {} } = data;\n\n        return omitNil({\n            customer_browser_info: navigator.userAgent,\n            customer_email: customer.email,\n            customer_first_name: customer.firstName,\n            customer_geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            customer_id: customer.customerId,\n            customer_last_name: customer.lastName,\n            customer_locale: store.storeLanguage,\n            customer_name: customer.name,\n            customer_phone: customer.phoneNumber,\n            customer_reference: customer.email,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class MetaMapper {\n    /**\n     * @returns {MetaMapper}\n     */\n    static create() {\n        return new MetaMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToMeta(data) {\n        const { source } = data;\n\n        return omitNil({\n            meta_referrer: document.referrer,\n            meta_source: source,\n            meta_user_agent: navigator.userAgent,\n        });\n    }\n}\n","export const CREDIT_CARD = 'credit-card';\nexport const MULTI_OPTION = 'multi-option';\n","export const BRAINTREE = 'braintree';\nexport const BRAINTREE_PAYPAL = 'braintreepaypal';\nexport const BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit';\nexport const BRAINTREE_VISACHECKOUT = 'braintreevisacheckout';\nexport const BRAINTREE_GOOGLEPAY = 'googlepaybraintree';\n","import { omitNil, toString } from '../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            store_hash: store.storeHash,\n            store_id: store.storeId ? toString(store.storeId) : null,\n        });\n    }\n}\n","import { API } from './payment-types';\nimport PayloadMapper from './v1/payment-mappers/payload-mapper';\nimport RequestSender from '../common/http-request/request-sender';\nimport UrlHelper from './url-helper';\n\nexport default class PaymentSubmitter {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const payloadMapper = PayloadMapper.create();\n\n        return new PaymentSubmitter(urlHelper, requestSender, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     * @throws {Error}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== API) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getPaymentUrl();\n        const options = {\n            headers: this.payloadMapper.mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CustomerMapper from './customer-mapper';\nimport OrderMapper from './order-mapper';\nimport PaymentMapper from './payment-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const customerMapper = CustomerMapper.create();\n        const orderMapper = OrderMapper.create();\n        const paymentMapper = PaymentMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(customerMapper, orderMapper, paymentMapper, storeMapper);\n    }\n\n    /**\n     * @param {CustomerMapper} customerMapper\n     * @param {OrderMapper} orderMapper\n     * @param {PaymentMapper} paymentMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(customerMapper, orderMapper, paymentMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {OrderMapper}\n         */\n        this.orderMapper = orderMapper;\n\n        /**\n         * @private\n         * @type {PaymentMapper}\n         */\n        this.paymentMapper = paymentMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            customer: this.customerMapper.mapToCustomer(data),\n            notify_url: order.callbackUrl,\n            order: this.orderMapper.mapToOrder(data),\n            payment: this.paymentMapper.mapToPayment(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToHeaders(data) {\n        const { authToken } = data;\n\n        return omitNil({\n            Authorization: authToken,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {} } = data;\n\n        return omitNil({\n            customer_group: customer.customerGroupName ? { name: customer.customerGroupName } : null,\n            geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            id: customer.customerId ? toString(customer.customerId) : null,\n            session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n        });\n    }\n}\n","import { omitEmptyStringAndNil, omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping: this.mapToShipping(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param  {PaymentRequestData} data\n     * @return {Shipping[]}\n     */\n    mapToShipping(data) {\n        const { description, transitTime } = data.shippingOption || {};\n\n        if (description) {\n            return [omitEmptyStringAndNil({\n                method: description,\n                transit_time: transitTime,\n            })];\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitEmptyStringAndNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map(itemData => omitNil({\n            code: itemData.id,\n            variant_id: itemData.variantId,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n","import objectAssign from 'object-assign';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\nimport { omitNil, toNumber } from '../../../common/utils';\n\nexport default class PaymentMapper {\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {PaymentMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new PaymentMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayment(data) {\n        const {\n            order = {},\n            orderMeta = {},\n            payment = {},\n            paymentMethod = {},\n        } = data;\n\n        const payload = {\n            device_info: payment.deviceSessionId ? payment.deviceSessionId : null,\n            device: orderMeta.deviceFingerprint ? { fingerprint_id: orderMeta.deviceFingerprint } : null,\n            gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n            notify_url: order.callbackUrl,\n            return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,\n        };\n\n        const method = paymentMethod.method;\n\n        if (method) {\n            objectAssign(payload, { method });\n        }\n\n        const nonce = payment.nonce || paymentMethod.nonce;\n\n        if (payment.formattedPayload) {\n            objectAssign(payload, payment.formattedPayload);\n        } else if (payment.instrumentId) {\n            objectAssign(payload, {\n                bigpay_token: this.mapToBigPayToken(data),\n            });\n        } else if (nonce) {\n            objectAssign(payload, {\n                credit_card_token: {\n                    token: nonce,\n                },\n            });\n        } else if (payment.cryptogramId) {\n            objectAssign(payload, {\n                credit_card_cryptogram: this.mapToCryptogram(data),\n            });\n        } else {\n            objectAssign(payload, {\n                credit_card: this.mapToCreditCard(data),\n            });\n        }\n\n        return omitNil(payload);\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCreditCard(data) {\n        const { payment = {} } = data;\n\n        return omitNil({\n            account_name: payment.ccName,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            verification_value: payment.ccCvv,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            customer_code: payment.ccCustomerCode,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToBigPayToken({ payment }) {\n        return omitNil({\n            credit_card_number_confirmation: payment.ccNumber,\n            token: payment.instrumentId,\n            verification_value: payment.ccCvv,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToCryptogram({ payment }) {\n        return omitNil({\n            payment_cryptogram: payment.cryptogramId,\n            eci: payment.eci,\n            xid: payment.transactionId,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            account_mask: payment.accountMask,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            hash: store.storeHash,\n            id: store.storeId ? toString(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n}\n","import { APPLICATION_JSON } from './content-types';\nimport { GET } from './method-types';\n\nconst DEFAULT_OPTIONS = {\n    headers: {\n        Accept: APPLICATION_JSON,\n        'Content-Type': APPLICATION_JSON,\n    },\n    method: GET,\n};\n\nexport default DEFAULT_OPTIONS;\n","import objectAssign from 'object-assign';\nimport { APPLICATION_JSON } from './content-types';\nimport { includes } from '../utils';\n\nexport default class PayloadTransformer {\n    /**\n     * @returns {PayloadTransformer}\n     */\n    static create() {\n        return new PayloadTransformer();\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} [contentType = APPLICATION_JSON]\n     * @returns {Object}\n     */\n    toRequest(data, contentType = APPLICATION_JSON) {\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            return JSON.stringify(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * @param {XMLHttpRequest} xhr\n     * @returns {Object}\n     * @property {Object} data\n     * @property {number} status\n     * @property {string} statusText\n     */\n    fromResponse(xhr) {\n        const headers = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n        const contentType = xhr.getResponseHeader('Content-Type');\n        const { status, statusText } = xhr;\n\n        let data = 'response' in xhr ? xhr.response : xhr.responseText;\n\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            data = JSON.parse(data);\n        }\n\n        return { data, headers, status, statusText };\n    }\n\n    /**\n     * @private\n     * @param {string} rawHeaders\n     * @returns {Object}\n     */\n    parseResponseHeaders(rawHeaders) {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return objectAssign({}, headers, {\n                [key.toLowerCase()]: parts.join(':').trim(),\n            });\n        }, {});\n    }\n}\n","export default class RequestFactory {\n    /**\n     * @returns {RequestFactory}\n     */\n    static create() {\n        return new RequestFactory();\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} options\n     * @param {Function} [callback]\n     * @returns {XMLHttpRequest}\n     */\n    createRequest(url, options, callback) {\n        const xhr = new XMLHttpRequest();\n\n        xhr.onerror = () => {\n            if (callback) {\n                callback(new Error(xhr.statusText));\n            }\n        };\n\n        xhr.onload = () => {\n            if (callback) {\n                callback();\n            }\n        };\n\n        xhr.open(options.method, url, true);\n        this.setOptions(xhr, options);\n\n        return xhr;\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} headers\n     * @returns {void}\n     */\n    setHeaders(xhr, headers) {\n        const headerKeys = Object.keys(headers);\n\n        headerKeys.forEach((key) => {\n            const value = headers[key];\n\n            xhr.setRequestHeader(key, value);\n        });\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} options\n     * @returns {void}\n     */\n    setOptions(xhr, options) {\n        xhr.withCredentials = options.withCredentials;\n\n        if (options.headers) {\n            this.setHeaders(xhr, options.headers);\n        }\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport ClientTokenMapper from './v2/payment-mappers/client-token-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class ClientTokenGenerator {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const clientTokenMapper = ClientTokenMapper.create();\n\n        return new ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {ClientTokenMapper} clientTokenMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, clientTokenMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {ClientTokenMapper}\n         */\n        this.clientTokenMapper = clientTokenMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        const url = this.urlHelper.getGenerateClientTokenUrl();\n        const payload = this.clientTokenMapper.mapToClientToken(data);\n\n        this.requestSender.postRequest(url, payload, {}, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CartMapper from './cart-mapper';\nimport GatewayMapper from './gateway-mapper';\nimport QuoteMapper from './quote-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class ClientTokenMapper {\n    /**\n     * @returns {ClientTokenMapper}\n     */\n    static create() {\n        const cartMapper = CartMapper.create();\n        const gatewayMapper = GatewayMapper.create();\n        const quoteMapper = QuoteMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper);\n    }\n\n    /**\n     * @param {CartMapper} cartMapper\n     * @param {GatewayMapper} gatewayMapper\n     * @param {QuoteMapper} quoteMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(cartMapper, gatewayMapper, quoteMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CartMapper}\n         */\n        this.cartMapper = cartMapper;\n\n        /**\n         * @private\n         * @type {GatewayMapper}\n         */\n        this.gatewayMapper = gatewayMapper;\n\n        /**\n         * @private\n         * @type {QuoteMapper}\n         */\n        this.quoteMapper = quoteMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToClientToken(data) {\n        return omitNil({\n            cart: this.cartMapper.mapToCart(data),\n            gateway: this.gatewayMapper.mapToGateway(data),\n            quote: this.quoteMapper.mapToQuote(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class CartMapper {\n    /**\n     * @returns {CartMapper}\n     */\n    static create() {\n        return new CartMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCart(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            currency_code: cart.currency,\n            items: this.mapToItems(data),\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object[]}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map(itemData => omitNil({\n            discount_amount: itemData.integerDiscount,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n            tax_amount: itemData.integerTax,\n            amount: itemData.integerAmountAfterDiscount,\n            type: this.mapToType(itemData),\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            discount_total: cart.discount ? cart.discount.integerAmount : null,\n            grand_total: cart.grandTotal ? cart.grandTotal.integerAmount : null,\n            shipping_total: cart.shipping ? cart.shipping.integerAmount : null,\n            subtotal: cart.subtotal ? cart.subtotal.integerAmount : null,\n            surcharge_total: cart.handling ? cart.handling.integerAmount : null,\n            tax_total: cart.taxTotal ? cart.taxTotal.integerAmount : null,\n        });\n    }\n\n    /**\n     * @private\n     * @param {Object} itemData\n     * @returns {Object}\n     */\n    mapToType(itemData) {\n        const types = {\n            ItemPhysicalEntity: 'physical',\n            ItemDigitalEntity: 'digital',\n            ItemGiftCertificateEntity: 'gift_card',\n        };\n\n        return types[itemData.type];\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\n\nexport default class GatewayMapper {\n    /**\n     * @returns {GatewayMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new GatewayMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToGateway(data) {\n        const { paymentMethod = {} } = data;\n\n        return omitNil({\n            name: this.paymentMethodIdMapper.mapToId(paymentMethod),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class QuoteMapper {\n    /**\n     * @returns {QuoteMapper}\n     */\n    static create() {\n        return new QuoteMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToQuote(data) {\n        return omitNil({\n            billing_address: this.mapToAddress(data, 'billingAddress'),\n            shipping_address: this.mapToAddress(data, 'shippingAddress'),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const { customer = {} } = data;\n        const address = data[addressKey] || {};\n\n        return omitNil({\n            address_line_1: address.addressLine1,\n            address_line_2: address.addressLine2,\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            email: customer.email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            postal_code: address.postCode,\n            state: address.province,\n        });\n    }\n}\n","import { omitNil, toNumber } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        return omitNil({\n            locale: this.mapToLocale(data),\n            store_identity: this.mapToIdentity(data),\n            urls: this.mapToUrls(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToLocale(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            country_code: store.countryCode,\n            currency_code: store.currencyCode,\n            language_code: store.storeLanguage,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToIdentity(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            id: store.storeId ? toNumber(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToUrls(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            cart: store.cartLink,\n            checkout: store.checkoutLink,\n            confirmation: store.orderConfirmationLink,\n            home: store.shopPath,\n        });\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport { DELETE, POST } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport {\n    mapToHeaders,\n    mapToTrustedShippingAddressPayload,\n} from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        const url = this.urlHelper.getTrustedShippingAddressUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const payload = mapToTrustedShippingAddressPayload(data);\n        const options = {\n            method: POST,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.customerId,\n            data.instrumentId,\n            data.currencyCode\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     * @throws {Error}\n     */\n    get host() {\n        if (!this.config || !this.config.host) {\n            throw new Error('Host URL unavailable or not supplied.');\n        }\n\n        return this.config.host;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentsUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @return {string}\n     */\n    getTrustedShippingAddressUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments/trusted_shipping_address?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {number} instrumentId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentByIdUrl(storeId, customerId, instrumentId, currencyCode) {\n        return `${this.host}/api/v2/stores/${storeId}/shoppers/${customerId}/instruments/${instrumentId}?currency_code=${currencyCode}`;\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.billingAddress\n * @param {CreditCard} data.creditCard\n * @param {boolean} data.defaultInstrument\n * @param {string} data.providerName\n * @return {Object}\n */\nexport function mapToInstrumentPayload(data = {}) {\n    const {\n        providerName,\n        defaultInstrument: default_instrument,\n    } = data;\n\n    const provider = omitNil({ name: providerName });\n\n    return omitNil({\n        provider,\n        credit_card: mapToCreditCard(data),\n        billing_address: mapToAddress(data.billingAddress),\n        default_instrument,\n    });\n}\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.shippingAddress\n * @return {Object}\n */\nexport function mapToTrustedShippingAddressPayload(data = {}) {\n    return omitNil({\n        shipping_address: mapToAddress(data.shippingAddress),\n    });\n}\n\n/**\n * @param {Object} data\n * @param {string} data.authToken\n * @return {Object}\n */\nexport function mapToHeaders({ authToken: Authorization } = {}) {\n    return omitNil({\n        Authorization,\n    });\n}\n\n/**\n * @param {AddressData} address\n * @return {Object}\n */\nfunction mapToAddress(address = {}) {\n    const state = mapToState(address.provinceCode, address.province);\n\n    return omitNil({\n        address_line_1: address.addressLine1,\n        address_line_2: address.addressLine2,\n        city: address.city,\n        company: address.company,\n        country_code: address.countryCode,\n        email: address.email,\n        first_name: address.firstName,\n        last_name: address.lastName,\n        phone: address.phone,\n        postal_code: address.postCode,\n        state,\n    });\n}\n\n/**\n * @param {string} code\n * @param {string} name\n * @return {Object}\n */\nfunction mapToState(code, name) {\n    return omitNil({\n        code,\n        name,\n    });\n}\n\n/**\n * @param {Object} data\n * @param {CreditCard} data.creditCard\n * @return {Object}\n */\nfunction mapToCreditCard({ creditCard = {} }) {\n    const threeDSecure = omitNil(creditCard.threeDSecure);\n\n    return omitNil({\n        cardholder_name: creditCard.cardholderName,\n        number: creditCard.number,\n        month: creditCard.month,\n        year: creditCard.year,\n        verification_code: creditCard.verificationCode,\n        issue_month: creditCard.issueMonth,\n        issue_year: creditCard.issueYear,\n        issue_number: creditCard.issueNumber,\n        track_data: creditCard.trackData,\n        is_manual_entry: creditCard.isManualEntry,\n        icc_data: creditCard.iccData,\n        fallback_reason: creditCard.fallbackReason,\n        is_contactless: creditCard.isContactless,\n        encrypted_pin_cryptogram: creditCard.encryptedPinCryptogram,\n        encrypted_pin_ksn: creditCard.encryptedPinKsn,\n        three_d_secure: threeDSecure,\n    });\n}\n","const DEFAULT_CONFIG = {\n    host: '',\n};\n\nexport default DEFAULT_CONFIG;\n"],"sourceRoot":""}